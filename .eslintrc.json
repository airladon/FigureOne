{
    "extends": ["plugin:flowtype/recommended", 
                "plugin:jest/recommended",
                "plugin:react/recommended",
                "airbnb-base"],
    "rules": {
        "no-console": "error",
        "no-underscore-dangle": 0,
        "operator-linebreak": [
          "error",
          "before",
          {
            "overrides": {
              "=": "off",
              "!==": "off",
              "===": "off"
            }
          }
        ],
        "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1 }],
        "lines-between-class-members": [
          "error",
          "always",
          {
            "exceptAfterSingleLine": true
          }
        ],
        "class-methods-use-this": [
          "error",
          { 
            "exceptMethods": [
              "setContent",
              "setTitle",
              "setModifiers",
              "setSteadyState",
              "setEnterState",
              "setLeaveState",
              "getState",
              "setStateMultiOnly",
              "setSinglePagePrimary",
              "transitionToNext",
              "transitionToPrev",
              "transitionFromPrev",
              "transitionFromNext",
              "transitionFromAny",
              "transitionToAny"
            ]
          }
        ],
        "no-mixed-operators": [
          "error",
          {
              "groups": [
                  ["&", "|", "^", "~", "<<", ">>", ">>>"],
                  ["==", "!=", "===", "!==", ">", ">=", "<", "<="],
                  ["&&", "||"],
                  ["in", "instanceof"]
              ],
              "allowSamePrecedence": true
          }
        ],
        "no-multi-spaces": [
          "error",
          {
            "ignoreEOLComments": true
          }
        ]
      },
    "plugins": [
      "flowtype",
      "jest",
      "react"],

    "settings": {
      "flowtype": {
        "onlyFilesWithFlowAnnotation": true
      },
      "import/resolver": {
        "node": {
          "extensions": [".js",".jsx"]
        }
      },
      "react": {
        "createClass": "createReactClass", // Regex for Component Factory to use,
                                           // default to "createReactClass"
        "pragma": "React",  // Pragma to use, default to "React"
        "version": "16.2", // React version, default to the latest React stable release
        "flowVersion": "0.67.1" // Flow version
      },
      "propWrapperFunctions": [ "forbidExtraProps" ] // The names of any functions used to wrap the
                                                     // propTypes object, e.g. `forbidExtraProps`.
                                                     // If this isn't set, any propTypes wrapped in
                                                     // a function will be skipped.
    },

    "env": {
      "browser": true
    }
}