const diagram = new Fig.Diagram();
const { Point, Rect } = Fig;

const line = [
    new Point(0.5, 0),
    new Point(0, 0.5),
    // new Point(0.6, 0),
    new Point(-0.5, 0),
    // new Point(0, 1),
    // new Point(0, 0), new Point(0, 1), new Point(-0.1, 0)
];

// diagram.addElements([
//   {
//     name: 'pad',
//     method: 'polygon',
//     options: {
//       radius: 0.2,
//       color: [0.5, 0.5, 0.5, 0.5],
//       sides: 100,
//       fill: true,
//     },
//   },
//   {
//     name: 'r',
//     method: 'shapes.polyline',
//     options: {
//       points: line,
//       width: 0.08,
//       close: true,
//       // fill: false,
//       // cornersOnly: true,
//       // cornerLength: 0.1,
//       // forceCornerLength: true,
//       // asdfasdf: false,
//       widthIs: 'mid',
//       cornerStyle: 'radius',
//       // cornerStyle: 'none',
//       cornerSize: 0.1,
//       cornerSides: 10,
//       // linePrimitives: true,
//       // lineNum: 200,
//       // cornersOnly: true,

//       // dash: [0.1, 0.03],
//     },
//   },
//   {
//     name: 'x2',
//     method: 'line',
//     options: {
//       p1: [-1, 0],
//       p2: [1, 0],
//       width: 0.005,
//       color: [0.5, 0.5, 0.5, 0.5],
//     }
//   },
//   {
//     name: 'x3',
//     method: 'line',
//     options: {
//       p1: [0.5, -1],
//       p2: [0.5, 1],
//       width: 0.005,
//       color: [0.5, 0.5, 0.5, 0.5],
//     }
//   },
// ]);

// const pad = diagram.getElement('pad');
// pad.setMovable();
// pad.setTransformCallback = () => {
//   line[1] = pad.getPosition();
//   const r = diagram.getElement('r');
//   r.custom.updatePoints(line);
//   diagram.animateNextFrame();
//   // console.log(line[1])
// }
// diagram.initialize();
// pad.setPosition(-0.7, 0);

diagram.addElements([
  {
    name: 'g',
    method: 'shapes.grid',
    options: {
      // start: [-0.8, -0.8],
      bounds: new Rect(-0.8, -0.8, 0.4, 0.4),
      xNum: 5,
      // xStep: 0.1,
      yNum: 5,
      // yStep: 0.1,
      width: 0.002,
      color: [1, 0.5, 0.5, 1],
      // linePrimitives: true,
      // lineNum: 1,
      copy: [
        { along: 'x', num: 2, step: 0.5, },
        { along: 'y', num: 2, step: 0.5, },
      ],
      dash: [0.02, 0.003, 0.003, 0.003],
    },
  },
  {
    name: 'p',
    method: 'shapes.polygon',
    options: {
      sides: 4,
      width: 0.004,
      radius: 0.05,
      rotation: Math.PI / 4,
      fill: true,
      // line: {
      //   widthIs: 'mid',
      //   cornerStyle: 'radius',
      //   cornerSize: 0.02,
      //   cornerSides: 5,
      //   dash: [0.02, 0.005, 0.005, 0.005],
      // },
      offset: [-0.5, -0.5],
      // copy: [
      //   { along: 'y', num: 4, step: 0.1 },
      //   { along: 'rotation', num: 5, step: 1, center: [-0.5, -0.5], start: 1 },
      // ],
    },
  },
  {
    name: 'pointer',
    method: 'collection',
    addElements: [
      {
        name: 'up',
        method: 'polygon',
        options: {
          // fill: true,
          width: 0.01,
          color: [1, 1, 0, 1],
          sides: 50,
          radius: 0.05,
        },
      },
      {
        name: 'down',
        method: 'polygon',
        options: {
          fill: true,
          color: [1, 1, 0, 1],
          sides: 50,
          radius: 0.05,
        },
      },
    ]
  }
]);

// diagram.addElement(
//   // Add equation element
//   {
//     name: 'eqn',
//     method: 'equation',
//     options: {
//       color: [0.95, 0.95, 0.6, 1],
//       position: [-0.2, 0],
//       // Equation elements are the individual terms in the equation
//       elements: {
//         a: 'a',
//         b: 'b',
//         c: 'c',
//         v: { symbol: 'vinculum'},
//         equals: ' = ',
//       },
//       // An equation form is how those terms are arranged
//       forms: {
//         base: ['a', 'equals', { frac: ['b', 'vinculum', 'c'] }],
//       },
//     },
//   },
// );

// Show the equation form
// diagram.getElement('eqn').showForm('base');
diagram.recorder.start();
// const p = diagram.getElement('p');
// p.makeTouchable();
// diagram.getElement('p').onClick = () => { diagram.recorder.show() }

diagram.initialize();

const data = [
  [1.03, 0.76, -0.185, 'f'],
[1.042, 0.76, -0.18, 'f'],
[1.051, 0.76, -0.175, 'f'],
[1.064, 0.76, -0.1675, 'f'],
[1.075, 0.7625, -0.1625, 'f'],
[1.085, 0.7625, -0.1525, 'f'],
[1.098, 0.7625, -0.1425, 'f'],
[1.11, 0.7625, -0.13, 'f'],
[1.12, 0.7625, -0.12, 'f'],
[1.132, 0.7625, -0.105, 'f'],
[1.142, 0.7625, -0.0875, 'f'],
[1.154, 0.765, -0.0725, 'f'],
[1.165, 0.765, -0.055, 'f'],
[1.178, 0.7675, -0.0375, 'f'],
[1.187, 0.7675, -0.025, 'f'],
[1.199, 0.7675, -0.0075, 'f'],
[1.21, 0.7675, 0.0125, 'f'],
[1.222, 0.7675, 0.03, 'f'],
[1.233, 0.7675, 0.05, 'f'],
[1.243, 0.765, 0.065, 'f'],
[1.255, 0.7625, 0.0875, 'f'],
[1.266, 0.7625, 0.1075, 'f'],
[1.278, 0.7625, 0.125, 'f'],
[1.289, 0.76, 0.1475, 'f'],
[1.299, 0.7575, 0.1625, 'f'],
[1.31, 0.755, 0.1825, 'f'],
[1.323, 0.75, 0.205, 'f'],
[1.334, 0.745, 0.2225, 'f'],
[1.357, 0.74, 0.24, 'f'],
[1.357, 0.7375, 0.25, 'f'],
[1.368, 0.73, 0.265, 'f'],
[1.379, 0.725, 0.2825, 'f'],
[1.39, 0.715, 0.2975, 'f'],
[1.402, 0.7075, 0.315, 'f'],
[1.413, 0.7025, 0.3225, 'f'],
[1.424, 0.6925, 0.3375, 'f'],
[1.435, 0.685, 0.35, 'f'],
[1.447, 0.675, 0.3625, 'f'],
[1.459, 0.665, 0.3725, 'f'],
[1.469, 0.6575, 0.38, 'f'],
[1.48, 0.6425, 0.395, 'f'],
[1.492, 0.625, 0.4075, 'f'],
[1.503, 0.6075, 0.42, 'f'],
[1.514, 0.5875, 0.4325, 'f'],
[1.525, 0.5775, 0.44, 'f'],
[1.536, 0.5625, 0.45, 'f'],
[1.547, 0.545, 0.4575, 'f'],
[1.558, 0.5275, 0.465, 'f'],
[1.57, 0.5075, 0.4725, 'f'],
[1.58, 0.495, 0.4775, 'f'],
[1.592, 0.48, 0.485, 'f'],
[1.604, 0.4625, 0.49, 'f'],
[1.614, 0.45, 0.4925, 'f'],
[1.625, 0.435, 0.495, 'f'],
[1.636, 0.4175, 0.4975, 'f'],
[1.648, 0.405, 0.5, 'f'],
[1.661, 0.3825, 0.5, 'f'],
[1.67, 0.36, 0.5025, 'f'],
[1.682, 0.3375, 0.5025, 'f'],
[1.694, 0.3125, 0.505, 'f'],
[1.705, 0.2975, 0.505, 'f'],
[1.716, 0.2825, 0.505, 'f'],
[1.728, 0.2725, 0.505, 'f'],
[1.74, 0.27, 0.505, 'f'],
[1.75, 0.2675, 0.505, 'f'],
[1.954, 0.2675, 0.505, 'd'],
[2.02, 0.265, 0.5025, 'm'],
[2.031, 0.2625, 0.5025, 'm'],
[2.042, 0.2575, 0.5, 'm'],
[2.054, 0.2525, 0.5, 'm'],
[2.064, 0.245, 0.4975, 'm'],
[2.076, 0.2375, 0.495, 'm'],
[2.087, 0.2275, 0.49, 'm'],
[2.098, 0.215, 0.485, 'm'],
[2.109, 0.2, 0.4775, 'm'],
[2.123, 0.1775, 0.4675, 'm'],
[2.132, 0.1525, 0.455, 'm'],
[2.144, 0.1275, 0.4425, 'm'],
[2.155, 0.1075, 0.43, 'm'],
[2.167, 0.0925, 0.42, 'm'],
[2.177, 0.0775, 0.4125, 'm'],
[2.189, 0.0675, 0.405, 'm'],
[2.2, 0.0575, 0.3975, 'm'],
[2.211, 0.05, 0.3925, 'm'],
[2.222, 0.0425, 0.3875, 'm'],
[2.234, 0.035, 0.3825, 'm'],
[2.245, 0.025, 0.375, 'm'],
[2.256, 0.0125, 0.365, 'm'],
[2.268, null, 0.355, 'm'],
[2.279, -0.0175, 0.34, 'm'],
[2.29, -0.035, 0.3225, 'm'],
[2.301, -0.0525, 0.305, 'm'],
[2.312, -0.0675, 0.29, 'm'],
[2.323, -0.0825, 0.2725, 'm'],
[2.335, -0.0975, 0.2575, 'm'],
[2.346, -0.1175, 0.2375, 'm'],
[2.357, -0.135, 0.22, 'm'],
[2.368, -0.155, 0.1975, 'm'],
[2.38, -0.175, 0.1775, 'm'],
[2.391, -0.195, 0.1525, 'm'],
[2.402, -0.215, 0.13, 'm'],
[2.414, -0.235, 0.1025, 'm'],
[2.425, -0.255, 0.0725, 'm'],
[2.436, -0.2775, 0.04, 'm'],
[2.448, -0.2975, 0.005, 'm'],
[2.459, -0.3125, -0.03, 'm'],
[2.47, -0.325, -0.0625, 'm'],
[2.481, -0.335, -0.09, 'm'],
[2.492, -0.3425, -0.1125, 'm'],
[2.504, -0.345, -0.1325, 'm'],
[2.515, -0.3475, -0.15, 'm'],
[2.526, -0.35, -0.165, 'm'],
[2.537, -0.35, -0.18, 'm'],
[2.549, -0.3475, -0.195, 'm'],
[2.56, -0.345, -0.2075, 'm'],
[2.571, -0.3425, -0.2225, 'm'],
[2.582, -0.3375, -0.2375, 'm'],
[2.593, -0.33, -0.2525, 'm'],
[2.605, -0.32, -0.2725, 'm'],
[2.616, -0.31, -0.2875, 'm'],
[2.627, -0.3025, -0.2975, 'm'],
[2.639, -0.295, -0.3075, 'm'],
[2.65, -0.285, -0.32, 'm'],
[2.661, -0.27, -0.3325, 'm'],
[2.672, -0.255, -0.345, 'm'],
[2.695, -0.2375, -0.3575, 'm'],
[2.695, -0.215, -0.3675, 'm'],
[2.706, -0.185, -0.38, 'm'],
[2.717, -0.155, -0.39, 'm'],
[2.729, -0.115, -0.4, 'm'],
[2.74, -0.0725, -0.4075, 'm'],
[2.751, -0.0375, -0.415, 'm'],
[2.762, -0.0075, -0.42, 'm'],
[2.774, 0.015, -0.4225, 'm'],
[2.785, 0.035, -0.425, 'm'],
[2.796, 0.045, -0.4275, 'm'],
[2.807, 0.0525, -0.4275, 'm'],
[2.817, 0.055, -0.4275, 'm'],
[2.83, 0.0575, -0.4275, 'm'],
[2.841, 0.06, -0.4275, 'm'],
[3.122, 0.065, -0.4275, 'm'],
[3.134, null, null, 'u'],
[3.135, 0.0675, -0.4275, 'f'],
[3.145, 0.07, -0.425, 'f'],
[3.157, 0.0725, -0.425, 'f'],
[3.168, 0.075, -0.425, 'f'],
[3.178, 0.0825, -0.4225, 'f'],
[3.19, 0.09, -0.4225, 'f'],
[3.201, 0.1, -0.42, 'f'],
[3.213, 0.1125, -0.415, 'f'],
[3.224, 0.1275, -0.4125, 'f'],
[3.235, 0.145, -0.4075, 'f'],
[3.247, 0.165, -0.4025, 'f'],
[3.258, 0.185, -0.3975, 'f'],
[3.269, 0.205, -0.3925, 'f'],
[3.28, 0.225, -0.3875, 'f'],
[3.291, 0.2425, -0.3825, 'f'],
[3.303, 0.26, -0.3775, 'f'],
[3.314, 0.2775, -0.375, 'f'],
[3.324, 0.2925, -0.37, 'f'],
[3.337, 0.31, -0.365, 'f'],
[3.346, 0.33, -0.36, 'f'],
[3.359, 0.3525, -0.3525, 'f'],
[3.369, 0.3775, -0.3425, 'f'],
[3.38, 0.405, -0.3275, 'f'],
[3.391, 0.4325, -0.31, 'f'],
[3.403, 0.4525, -0.295, 'f'],
[3.414, 0.47, -0.2775, 'f'],
[3.425, 0.4875, -0.26, 'f'],
[3.437, 0.505, -0.2425, 'f'],
[3.448, 0.52, -0.225, 'f'],
[3.46, 0.5375, -0.205, 'f'],
[3.471, 0.5525, -0.185, 'f'],
[3.484, 0.5675, -0.1625, 'f'],
[3.494, 0.5775, -0.1425, 'f'],
[3.507, 0.5875, -0.1225, 'f'],
[3.516, 0.595, -0.105, 'f'],
[3.527, 0.6, -0.085, 'f'],
[3.539, 0.605, -0.07, 'f'],
[3.55, 0.6075, -0.0575, 'f'],
[3.561, 0.61, -0.0475, 'f'],
[3.573, 0.6125, -0.04, 'f'],
[3.583, 0.6125, -0.0325, 'f'],
[3.595, 0.6125, -0.0225, 'f'],
[3.609, 0.615, -0.0125, 'f'],
[3.617, 0.615, -0.0025, 'f'],
[3.629, 0.615, 0.0075, 'f'],
[3.64, 0.615, 0.0175, 'f'],
[3.651, 0.615, 0.03, 'f'],
[3.663, 0.615, 0.0425, 'f'],
[3.674, 0.6125, 0.055, 'f'],
[3.685, 0.61, 0.07, 'f'],
[3.697, 0.6075, 0.085, 'f'],
[3.708, 0.6025, 0.1025, 'f'],
[3.721, 0.595, 0.12, 'f'],
[3.73, 0.59, 0.1375, 'f'],
[3.741, 0.58, 0.155, 'f'],
[3.752, 0.57, 0.17, 'f'],
[3.775, 0.56, 0.185, 'f'],
[3.776, 0.5475, 0.2, 'f'],
[3.786, 0.535, 0.215, 'f'],
[3.797, 0.525, 0.225, 'f'],
[3.809, 0.515, 0.235, 'f'],
[3.819, 0.505, 0.2425, 'f'],
[3.83, 0.495, 0.2475, 'f'],
[3.842, 0.4875, 0.2525, 'f'],
[3.854, 0.48, 0.2575, 'f'],
[3.865, 0.4725, 0.2625, 'f'],
[3.877, 0.465, 0.265, 'f'],
[3.888, 0.4575, 0.27, 'f'],
[3.899, 0.4525, 0.2725, 'f'],
[3.91, 0.45, 0.275, 'f'],
[3.922, 0.445, 0.275, 'f'],
[3.933, 0.4425, 0.2775, 'f'],
[3.955, 0.44, 0.2775, 'f'],
[4.495, 0.44, 0.2775, 'd'],
[4.664, null, null, 'u'],
[4.99, 0.4375, 0.275, 'f'],
[5.002, 0.4075, 0.25, 'f'],
[5.013, 0.3575, 0.2, 'f'],
[5.024, 0.3225, 0.165, 'f'],
[5.035, 0.29, 0.1225, 'f'],
[5.047, 0.27, 0.085, 'f'],
[5.057, 0.255, 0.05, 'f'],
[5.067, 0.2425, 0.0225, 'f'],
[5.079, 0.235, 0.0075, 'f'],
[5.09, 0.2275, -0.0125, 'f'],
[5.103, 0.215, -0.0375, 'f'],
[5.114, 0.2025, -0.0675, 'f'],
[5.125, 0.1875, -0.105, 'f'],
[5.137, 0.1775, -0.1325, 'f'],
[5.148, 0.165, -0.175, 'f'],
[5.159, 0.1525, -0.21, 'f'],
[5.17, 0.1425, -0.24, 'f'],
[5.182, 0.1325, -0.2675, 'f'],
[5.193, 0.1275, -0.29, 'f'],
[5.204, 0.12, -0.3225, 'f'],
[5.215, 0.1125, -0.3625, 'f'],
[5.228, 0.11, -0.405, 'f'],
[5.238, 0.105, -0.4425, 'f'],
[5.249, 0.105, -0.46, 'f'],
[5.26, 0.1025, -0.4825, 'f'],
[5.272, 0.0975, -0.4925, 'f'],
[5.283, 0.095, -0.495, 'f'],
[5.294, 0.095, -0.4975, 'f'],
[5.677, 0.095, -0.4975, 'd'],
[5.8, null, null, 'u'],
[5.868, 0.095, -0.4975, 'f'],
[5.879, 0.0875, -0.4925, 'f'],
[5.89, 0.0625, -0.4725, 'f'],
[5.901, 0.03, -0.445, 'f'],
[5.913, -0.0075, -0.415, 'f'],
[5.924, -0.0375, -0.3925, 'f'],
[5.935, -0.065, -0.375, 'f'],
[5.947, -0.0875, -0.355, 'f'],
[5.958, -0.1125, -0.3375, 'f'],
[5.969, -0.14, -0.3125, 'f'],
[5.98, -0.155, -0.3, 'f'],
[5.992, -0.1725, -0.285, 'f'],
[6.003, -0.19, -0.27, 'f'],
[6.014, -0.1975, -0.265, 'f'],
[6.025, -0.2075, -0.255, 'f'],
[6.037, -0.2125, -0.25, 'f'],
[6.049, -0.22, -0.245, 'f'],
[6.059, -0.2275, -0.24, 'f'],
[6.069, -0.2475, -0.2275, 'f'],
[6.081, -0.2675, -0.215, 'f'],
[6.092, -0.2875, -0.1975, 'f'],
[6.104, -0.3175, -0.1775, 'f'],
[6.115, -0.345, -0.1575, 'f'],
[6.126, -0.375, -0.14, 'f'],
[6.139, -0.3925, -0.13, 'f'],
[6.149, -0.4, -0.125, 'f'],
[6.16, -0.4075, -0.12, 'f'],
[6.172, -0.4125, -0.115, 'f'],
[6.194, -0.415, -0.1125, 'f'],
[6.195, -0.4175, -0.11, 'f'],
[6.79, -0.4175, -0.11, 'd'],
[6.925, null, null, 'u'],
[7.004, -0.4175, -0.11, 'd'],
[7.139, null, null, 'u'],
[7.374, -0.42, -0.12, 'f'],
[7.387, -0.4225, -0.1275, 'f'],
[7.398, -0.4225, -0.1375, 'f'],
[7.409, -0.4225, -0.145, 'f'],
[7.42, -0.425, -0.1575, 'f'],
[7.432, -0.425, -0.1725, 'f'],
[7.443, -0.425, -0.19, 'f'],
[7.454, -0.425, -0.2075, 'f'],
[7.465, -0.425, -0.225, 'f'],
[7.477, -0.425, -0.235, 'f'],
[7.488, -0.4275, -0.2475, 'f'],
[7.499, -0.4275, -0.26, 'f'],
[7.51, -0.43, -0.2725, 'f'],
[7.522, -0.43, -0.2825, 'f'],
[7.533, -0.43, -0.29, 'f'],
[7.546, -0.4325, -0.2975, 'f'],
[7.555, -0.4325, -0.3075, 'f'],
[7.567, -0.435, -0.3175, 'f'],
[7.577, -0.435, -0.3225, 'f'],
[7.588, -0.435, -0.3275, 'f'],
[7.6, -0.435, -0.335, 'f'],
[7.611, -0.435, -0.34, 'f'],
[7.623, -0.435, -0.345, 'f'],
[7.634, -0.435, -0.35, 'f'],
[7.647, -0.435, -0.355, 'f'],
[7.657, -0.4375, -0.36, 'f'],
[7.668, -0.4375, -0.365, 'f'],
[7.679, -0.4375, -0.3675, 'f'],
[7.69, -0.4375, -0.37, 'f'],
[7.701, -0.4375, -0.3725, 'f'],
[7.713, -0.44, -0.3775, 'f'],
[7.724, -0.4425, -0.3825, 'f'],
[7.736, -0.445, -0.3875, 'f'],
[7.746, -0.4475, -0.39, 'f'],
[7.758, -0.45, -0.395, 'f'],
[7.769, -0.4525, -0.3975, 'f'],
[7.782, -0.455, -0.4025, 'f'],
[7.792, -0.46, -0.405, 'f'],
[7.804, -0.4625, -0.41, 'f'],
[7.814, -0.465, -0.4125, 'f'],
[7.825, -0.47, -0.415, 'f'],
[7.837, -0.4725, -0.4175, 'f'],
[7.848, -0.475, -0.42, 'f'],
[7.859, -0.48, -0.425, 'f'],
[7.869, -0.4825, -0.43, 'f'],
[7.882, -0.4875, -0.435, 'f'],
[7.893, -0.4925, -0.44, 'f'],
[7.905, -0.495, -0.4475, 'f'],
[7.915, -0.4975, -0.4525, 'f'],
[7.927, -0.5, -0.4575, 'f'],
[7.938, -0.5025, -0.4625, 'f'],
[7.949, -0.505, -0.4675, 'f'],
[7.96, -0.5075, -0.4725, 'f'],
[7.971, -0.51, -0.4775, 'f'],
[7.983, -0.51, -0.4825, 'f'],
[7.994, -0.51, -0.4875, 'f'],
[8.006, -0.51, -0.49, 'f'],
[8.016, -0.51, -0.4925, 'f'],
[8.106, -0.51, -0.4925, 'd'],
];

diagram.recorder.events = data;
diagram.recorder.startPlayback();