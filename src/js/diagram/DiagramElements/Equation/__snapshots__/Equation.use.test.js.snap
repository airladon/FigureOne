// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Different ways to make an equation All Text in constructor with all options 1`] = `
DiagramElementPrimative {
  "angleToDraw": -1,
  "animate": Object {
    "color": Object {
      "callback": null,
      "plan": Array [],
      "toDisolve": "",
    },
    "custom": Object {
      "callback": null,
      "plan": Array [],
    },
    "transform": Object {
      "callback": null,
      "plan": Array [],
      "translation": Object {
        "options": Object {
          "controlPoint": null,
          "direction": "",
          "magnitude": 0.5,
          "offset": 0.5,
          "rot": 1,
        },
        "style": "linear",
      },
    },
  },
  "cannotTouchHole": false,
  "color": Array [
    0.9490196078431372,
    0,
    0,
    1,
  ],
  "diagramLimits": Rect {
    "bottom": -1,
    "height": 2,
    "left": -1,
    "right": 1,
    "top": 1,
    "width": 2,
  },
  "drawPriority": 1,
  "drawingObject": TextObject {
    "border": Array [
      Array [
        Point {
          "x": 0,
          "y": 0.038000000000000006,
        },
        Point {
          "x": 0.04000000000000001,
          "y": 0.038000000000000006,
        },
        Point {
          "x": 0.04000000000000001,
          "y": -0.0032000000000000006,
        },
        Point {
          "x": 0,
          "y": -0.0032000000000000006,
        },
      ],
    ],
    "drawContext2D": DrawContext2D {
      "canvas": Object {
        "height": 1000,
        "offsetHeight": 500,
        "offsetWidth": 1000,
        "style": Object {
          "height": "500px",
          "width": "1000px",
        },
        "width": 2000,
      },
      "ctx": Object {
        "canvas": Object {
          "height": 500,
          "width": 1000,
        },
        "clearRect": [Function],
        "fillText": [Function],
        "filledText": Object {
          "count": 0,
          "text": "",
          "x": null,
          "y": null,
        },
        "font": "italic 200 100px Times New Roman",
        "measureText": [Function],
        "restore": [Function],
        "save": [Function],
        "scale": [Function],
        "textAlign": "left",
        "textBaseline": "alphabetic",
        "transform": [Function],
        "transformMatrix": Array [
          0,
        ],
      },
      "ratio": 2,
    },
    "holeBorder": Array [
      Array [],
    ],
    "location": Point {
      "x": 0,
      "y": 0,
    },
    "scalingFactor": 499.99999999999994,
    "text": Array [
      DiagramText {
        "font": DiagramFont {
          "alignH": "left",
          "alignV": "alphabetic",
          "color": "rgba(242,0,0,1)",
          "family": "Times New Roman",
          "size": 0.2,
          "style": "italic",
          "weight": "200",
        },
        "location": Point {
          "x": 0,
          "y": 0,
        },
        "text": "a",
      },
    ],
  },
  "hasTouchableElements": false,
  "interactiveLocation": Point {
    "x": 0,
    "y": 0,
  },
  "isInteractive": false,
  "isMovable": false,
  "isShown": true,
  "isTouchable": false,
  "lastDrawElementTransformPosition": Object {
    "elementCount": 2,
    "parentCount": 6,
  },
  "lastDrawTransform": Transform {
    "index": 0,
    "mat": Array [
      0.45,
      0,
      2.8825849999999997,
      0,
      0.45,
      2.890505,
      0,
      0,
      1,
    ],
    "name": "Equation",
    "order": Array [
      Translation {
        "name": "",
        "x": 1.9612999999999998,
        "y": 1.9788999999999999,
      },
      Scale {
        "name": "",
        "x": 0.45,
        "y": 0.45,
      },
      Scale {
        "name": "Equation",
        "x": 1,
        "y": 1,
      },
      Rotation {
        "name": "Equation",
        "r": 0,
      },
      Translation {
        "name": "Equation",
        "x": 1,
        "y": 1,
      },
      Scale {
        "name": "Equation",
        "x": 1,
        "y": 1,
      },
      Rotation {
        "name": "Equation",
        "r": 0,
      },
      Translation {
        "name": "Equation",
        "x": 1,
        "y": 1,
      },
    ],
  },
  "lengthToDraw": -1,
  "move": Object {
    "bounce": true,
    "canBeMovedAfterLoosingTouch": false,
    "element": null,
    "freely": Object {
      "deceleration": TransformLimit {
        "rotation": 5,
        "scale": 5,
        "translation": 5,
      },
      "zeroVelocityThreshold": TransformLimit {
        "rotation": 0.001,
        "scale": 0.001,
        "translation": 0.001,
      },
    },
    "limitLine": null,
    "limitToDiagram": false,
    "maxTransform": Transform {
      "index": 2,
      "mat": Array [
        1000,
        0,
        1000,
        0,
        1000,
        1000,
        0,
        0,
        1,
      ],
      "name": "",
      "order": Array [
        Scale {
          "name": "",
          "x": 1000,
          "y": 1000,
        },
        Translation {
          "name": "",
          "x": 1000,
          "y": 1000,
        },
      ],
    },
    "maxVelocity": TransformLimit {
      "rotation": 5,
      "scale": 5,
      "translation": 5,
    },
    "minTransform": Transform {
      "index": 2,
      "mat": Array [
        -1000,
        0,
        -1000,
        0,
        -1000,
        -1000,
        0,
        0,
        1,
      ],
      "name": "",
      "order": Array [
        Scale {
          "name": "",
          "x": -1000,
          "y": -1000,
        },
        Translation {
          "name": "",
          "x": -1000,
          "y": -1000,
        },
      ],
    },
    "type": "translation",
  },
  "name": "a",
  "noRotationFromParent": false,
  "onClick": null,
  "pointsToDraw": -1,
  "pulse": Object {
    "A": 1,
    "B": 0.5,
    "C": 0,
    "callback": [Function],
    "frequency": 0.5,
    "num": 1,
    "style": [Function],
    "time": 1,
    "transformMethod": [Function],
  },
  "setTransformCallback": [Function],
  "state": Object {
    "animation": Object {
      "currentPhase": AnimationPhase {
        "animationStyle": [Function],
        "callback": null,
        "deltaTransform": Transform {
          "index": 0,
          "mat": Array [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
          ],
          "name": "",
          "order": Array [],
        },
        "finishOnCancel": true,
        "rotDirection": 0,
        "startTime": -1,
        "startTransform": null,
        "targetTransform": Transform {
          "index": 0,
          "mat": Array [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
          ],
          "name": "",
          "order": Array [],
        },
        "timeOrVelocity": 1,
        "translationOptions": Object {
          "controlPoint": null,
          "direction": "",
          "magnitude": 0.5,
          "offset": 0.5,
          "rot": 1,
        },
        "translationStyle": "linear",
      },
      "currentPhaseIndex": 0,
    },
    "colorAnimation": Object {
      "currentPhase": ColorAnimationPhase {
        "animationStyle": [Function],
        "callback": null,
        "deltaColor": Array [
          0,
          0,
          0,
          1,
        ],
        "disolve": null,
        "endColor": Array [
          0,
          0,
          0,
          1,
        ],
        "finishOnCancel": true,
        "startColor": null,
        "startTime": -1,
        "targetColor": Array [
          0,
          0,
          0,
          1,
        ],
        "time": 1,
      },
      "currentPhaseIndex": 0,
    },
    "customAnimation": Object {
      "currentPhase": CustomAnimationPhase {
        "animationCallback": [Function],
        "animationStyle": [Function],
        "callback": null,
        "finishOnCancel": true,
        "plannedStartTime": -0,
        "startPercent": 0,
        "startTime": -1,
        "time": 1,
      },
      "currentPhaseIndex": 0,
    },
    "disolving": "",
    "isAnimating": false,
    "isAnimatingColor": false,
    "isAnimatingCustom": false,
    "isBeingMoved": false,
    "isMovingFreely": false,
    "isPulsing": false,
    "movement": Object {
      "previousTime": -1,
      "previousTransform": Transform {
        "index": 2,
        "mat": Array [
          1,
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          1,
        ],
        "name": "",
        "order": Array [
          Scale {
            "name": "",
            "x": 1,
            "y": 1,
          },
          Translation {
            "name": "",
            "x": 0,
            "y": 0,
          },
        ],
      },
      "velocity": Transform {
        "index": 2,
        "mat": Array [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          1,
        ],
        "name": "",
        "order": Array [
          Scale {
            "name": "",
            "x": 0,
            "y": 0,
          },
          Translation {
            "name": "",
            "x": 0,
            "y": 0,
          },
        ],
      },
    },
    "pulse": Object {
      "startTime": -1,
    },
  },
  "transform": Transform {
    "index": 2,
    "mat": Array [
      0.45,
      0,
      1.9612999999999998,
      0,
      0.45,
      1.9788999999999999,
      0,
      0,
      1,
    ],
    "name": "",
    "order": Array [
      Scale {
        "name": "",
        "x": 0.45,
        "y": 0.45,
      },
      Translation {
        "name": "",
        "x": 1.9612999999999998,
        "y": 1.9788999999999999,
      },
    ],
  },
  "uid": "0000000000",
}
`;

exports[`Different ways to make an equation Separate All Text 1`] = `
Array [
  0.7,
  0,
  0.0042,
  0,
  0.7,
  0.08624,
  0,
  0,
  1,
]
`;

exports[`Different ways to make an equation Separate All Text 2`] = `
Array [
  0.7,
  0,
  0.0042,
  0,
  0.7,
  -0.0252,
  0,
  0,
  1,
]
`;

exports[`Different ways to make an equation Separate All Text 3`] = `
Array [
  0.0364,
  0,
  0,
  0,
  0.008,
  0.049,
  0,
  0,
  1,
]
`;

exports[`Different ways to make an equation Separate All Text 4`] = `
Array [
  0.7,
  0,
  0.0364,
  0,
  0.7,
  0,
  0,
  0,
  1,
]
`;
