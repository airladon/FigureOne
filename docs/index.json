[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Diagram Class",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 14,
          "offset": 13
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "TypeDiagramOptions"
        },
        "name": "options"
      }
    ],
    "loc": {
      "start": {
        "line": 88,
        "column": 0
      },
      "end": {
        "line": 91,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 92,
          "column": 0
        },
        "end": {
          "line": 1120,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/Diagram.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "options",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "TypeDiagramOptions"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Diagram",
    "kind": "class",
    "path": [
      {
        "name": "Diagram",
        "kind": "class"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "id of DIV that diagram is tied to",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 34,
                "offset": 33
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 93,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 42
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 94,
                "column": 2
              },
              "end": {
                "line": 94,
                "column": 17
              }
            },
            "file": "/opt/app/src/js/diagram/Diagram.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "htmlId",
          "kind": "member",
          "memberof": "Diagram",
          "scope": "instance",
          "type": {
            "type": "NameExpression",
            "name": "string"
          },
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Diagram",
              "kind": "class"
            },
            {
              "name": "htmlId",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Diagram#htmlId"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add elements to diagram",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 24,
                        "offset": 23
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 24,
                    "offset": 23
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 24,
                "offset": 23
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "array of element definitions",
              "lineNumber": 2,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "TypeAddElementObject"
                  }
                ]
              },
              "name": "elementsToAdd"
            },
            {
              "title": "param",
              "description": "the\ncollection to add elements to",
              "lineNumber": 3,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "DiagramElementCollection"
                }
              },
              "name": "collection",
              "default": "this.elements"
            },
            {
              "title": "param",
              "description": "key to add elements",
              "lineNumber": 5,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "addElementsKey",
              "default": "'addElements'"
            },
            {
              "title": "example",
              "description": "diagram.addElements([\n  { name: 'shape1', method: 'polygon', options: { position: [0, 0] } },\n  { name: 'shape2', method: 'polygon', options: { position: [1, 1] } },\n]);",
              "lineNumber": 7
            }
          ],
          "loc": {
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 360,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 361,
                "column": 2
              },
              "end": {
                "line": 374,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/Diagram.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "diagram.addElements([\n  { name: 'shape1', method: 'polygon', options: { position: [0, 0] } },\n  { name: 'shape2', method: 'polygon', options: { position: [1, 1] } },\n]);"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "elementsToAdd",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "array of element definitions",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 29,
                            "offset": 28
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 29,
                    "offset": 28
                  }
                }
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "TypeAddElementObject"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "collection",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "the\ncollection to add elements to",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 2,
                            "column": 30,
                            "offset": 33
                          },
                          "indent": [
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 30,
                        "offset": 33
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 30,
                    "offset": 33
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "DiagramElementCollection"
              },
              "default": "this.elements"
            },
            {
              "title": "param",
              "name": "addElementsKey",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "key to add elements",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 20,
                            "offset": 19
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 20,
                    "offset": 19
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "default": "'addElements'"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "addElements",
          "kind": "function",
          "memberof": "Diagram",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Diagram",
              "kind": "class"
            },
            {
              "name": "addElements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Diagram#addElements"
        }
      ],
      "events": [],
      "static": []
    },
    "namespace": "Diagram"
  },
  {
    "name": "Equation Elements Types",
    "kind": "note",
    "description": {
      "type": "root",
      "children": [],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 1,
          "offset": 0
        }
      }
    },
    "path": [
      {
        "name": "Equation Elements Types",
        "kind": "note"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "Equation Elements Types"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Definition of a text or symbol equation element. Symbol properties take\nreceive priority over text properties, so if 'symbol' is defined, then 'text'\nwill be ignored.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 17,
                  "offset": 166
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 17,
              "offset": 166
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 17,
          "offset": 166
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "Text element only",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "text"
      },
      {
        "title": "property",
        "description": "Text element only",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "DiagramFont"
          }
        },
        "name": "font"
      },
      {
        "title": "property",
        "description": "Text element only",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "italic"
              },
              {
                "type": "StringLiteralType",
                "value": "normal"
              }
            ]
          }
        },
        "name": "style"
      },
      {
        "title": "property",
        "description": "Symbol element only",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "Symbol element only",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              }
            ]
          }
        },
        "name": "side"
      },
      {
        "title": "property",
        "description": "Properties to set on instantiated element",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "object"
          }
        },
        "name": "mods"
      },
      {
        "title": "property",
        "description": "Color to set the element",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      }
    ],
    "loc": {
      "start": {
        "line": 32,
        "column": 0
      },
      "end": {
        "line": 43,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 56,
          "column": 57
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "text",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text element only",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "font",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text element only",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "DiagramFont"
          }
        }
      },
      {
        "title": "property",
        "name": "style",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Text element only",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "italic"
              },
              {
                "type": "StringLiteralType",
                "value": "normal"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Symbol element only",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "side",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Symbol element only",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "mods",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Properties to set on instantiated element",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "object"
          }
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Color to set the element",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeEquationElement",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "NameExpression",
          "name": "string"
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "text",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "font",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "DiagramFont"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "style",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "italic"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "normal"
                    },
                    {
                      "type": "NullLiteral"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "numLines",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "side",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "top"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "left"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "bottom"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "right"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "color",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "mods",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "RecordType",
                  "fields": []
                }
              }
            }
          ]
        },
        {
          "type": "NameExpression",
          "name": "DiagramElementPrimitive"
        },
        {
          "type": "NameExpression",
          "name": "DiagramElementCollection"
        }
      ]
    },
    "path": [
      {
        "name": "TypeEquationElement",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEquationElement"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Object with multiple equation elements.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 40,
          "offset": 39
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 58,
        "column": 0
      },
      "end": {
        "line": 60,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeEquationElements",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": []
    },
    "path": [
      {
        "name": "TypeEquationElements",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEquationElements"
  },
  {
    "name": "Equation Functions Types",
    "kind": "note",
    "description": {
      "type": "root",
      "children": [],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 1,
          "offset": 0
        }
      }
    },
    "path": [
      {
        "name": "Equation Functions Types",
        "kind": "note"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "Equation Functions Types"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation container",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A container is useful to fix spacing around content as it changes between\nequation forms.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 20
                },
                "end": {
                  "line": 4,
                  "column": 16,
                  "offset": 109
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 20
            },
            "end": {
              "line": 4,
              "column": 16,
              "offset": 109
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 16,
          "offset": 109
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "(`null`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "(`null`)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "descent"
      },
      {
        "title": "property",
        "description": "(`null`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "ascent"
      },
      {
        "title": "property",
        "description": "(`'center'`)",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "xAlign"
      },
      {
        "title": "property",
        "description": "(`'baseline'`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "yAlign"
      },
      {
        "title": "property",
        "description": "fit width,\nascent and descent to either match width, height or fully contain the content (`null`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "width"
              },
              {
                "type": "StringLiteralType",
                "value": "height"
              },
              {
                "type": "StringLiteralType",
                "value": "contain"
              }
            ]
          }
        },
        "name": "fit"
      },
      {
        "title": "property",
        "description": "(`1`)",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "(`false`)",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "example",
        "description": "// Full object definition\n {\n   container: {\n     content: 'a',\n     width: null,\n     descent: null,\n     ascent: null,\n     xAlign: 'left',\n     yAlign: 'baseline',\n     fit: null,\n     scale: 1,\n     fullContentBounds: false\n   },\n }",
        "lineNumber": 16
      },
      {
        "title": "example",
        "description": "// Example array definition\n { container: ['a', 1, 0.2, 0.5] }",
        "lineNumber": 31
      }
    ],
    "loc": {
      "start": {
        "line": 108,
        "column": 0
      },
      "end": {
        "line": 142,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 143,
          "column": 0
        },
        "end": {
          "line": 163,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Full object definition\n {\n   container: {\n     content: 'a',\n     width: null,\n     descent: null,\n     ascent: null,\n     xAlign: 'left',\n     yAlign: 'baseline',\n     fit: null,\n     scale: 1,\n     fullContentBounds: false\n   },\n }"
      },
      {
        "description": "// Example array definition\n { container: ['a', 1, 0.2, 0.5] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "descent",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "ascent",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "xAlign",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'center'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "yAlign",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'baseline'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "fit",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "fit width,\nascent and descent to either match width, height or fully contain the content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 80,
                      "offset": 90
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 80,
                      "offset": 90
                    },
                    "end": {
                      "line": 2,
                      "column": 86,
                      "offset": 96
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 86,
                      "offset": 96
                    },
                    "end": {
                      "line": 2,
                      "column": 87,
                      "offset": 97
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 87,
                  "offset": 97
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 87,
              "offset": 97
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "width"
              },
              {
                "type": "StringLiteralType",
                "value": "height"
              },
              {
                "type": "StringLiteralType",
                "value": "contain"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Container",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "width",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "descent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "ascent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "xAlign",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "left"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "center"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "right"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "yAlign",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "bottom"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "middle"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "top"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "baseline"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fit",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "width"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "height"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "contain"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "left"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "center"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "bottom"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "middle"
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "baseline"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "width"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "height"
                },
                {
                  "type": "StringLiteralType",
                  "value": "contain"
                }
              ]
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Container",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Container"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation fraction",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 18,
          "offset": 17
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "numerator"
      },
      {
        "title": "property",
        "description": "Vinculum symbol",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "denominator"
      },
      {
        "title": "property",
        "description": "(`1`)",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "(`0.05`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "numeratorSpace"
      },
      {
        "title": "property",
        "description": "(`0.05`)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "denominatorSpace"
      },
      {
        "title": "property",
        "description": "Vinculum extends beyond the content\nhorizontally by the this amount (`0.05`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "overhang"
      },
      {
        "title": "property",
        "description": "Offset fraction in y (`0.07`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "offsetY"
      },
      {
        "title": "property",
        "description": "Use full bounds with content (`false`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "example",
        "description": "// For examples, a vinculum symbol is defined as an equation element\neqn.addElements({\n  v: { symbol: 'vinculum' }\n});",
        "lineNumber": 13
      },
      {
        "title": "example",
        "description": "// Full object definition example\n {\n   frac: {\n     numerator: 'a',\n     symbol: 'v',\n     denominator: 'b',\n     scale: 0.8,\n     numeratorSpace: 0.01,\n     denominatorSpace: 0.02,\n     overhang: 0.03,\n     offsetY: 0.04,\n     fullContentBounds: false,\n   },\n }",
        "lineNumber": 18
      },
      {
        "title": "example",
        "description": "// Array definition example\n{ frac: ['a', 'v', 'b'] }",
        "lineNumber": 33
      }
    ],
    "loc": {
      "start": {
        "line": 165,
        "column": 0
      },
      "end": {
        "line": 201,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 202,
          "column": 0
        },
        "end": {
          "line": 222,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, a vinculum symbol is defined as an equation element\neqn.addElements({\n  v: { symbol: 'vinculum' }\n});"
      },
      {
        "description": "// Full object definition example\n {\n   frac: {\n     numerator: 'a',\n     symbol: 'v',\n     denominator: 'b',\n     scale: 0.8,\n     numeratorSpace: 0.01,\n     denominatorSpace: 0.02,\n     overhang: 0.03,\n     offsetY: 0.04,\n     fullContentBounds: false,\n   },\n }"
      },
      {
        "description": "// Array definition example\n{ frac: ['a', 'v', 'b'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "numerator",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Vinculum symbol",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "denominator",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "numeratorSpace",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.05",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "denominatorSpace",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.05",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "overhang",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Vinculum extends beyond the content\nhorizontally by the this amount (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 69
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.05",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 34,
                      "offset": 69
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 75
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 75
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 76
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 41,
                  "offset": 76
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 41,
              "offset": 76
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "offsetY",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Offset fraction in y (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.07",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Use full bounds with content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Fraction",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "numerator",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "FieldType",
              "key": "denominator",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "numeratorSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "denominatorSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "overhang",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "offsetY",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Fraction",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Fraction"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation scale",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Scale an equation phrase",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 16
                },
                "end": {
                  "line": 3,
                  "column": 25,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 16
            },
            "end": {
              "line": 3,
              "column": 25,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 25,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "(`1`)",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "Use full bounds with content (`false`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "example",
        "description": "// Full object definition\n {\n   scale: {\n     content: ['a', 'b'],\n     scale: 0.5,\n     fullContentBounds: false,\n   },\n }",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "// Example array definition\n { scale: [['a', 'b'], 0.5] }",
        "lineNumber": 17
      }
    ],
    "loc": {
      "start": {
        "line": 224,
        "column": 0
      },
      "end": {
        "line": 244,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 245,
          "column": 0
        },
        "end": {
          "line": 253,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Full object definition\n {\n   scale: {\n     content: ['a', 'b'],\n     scale: 0.5,\n     fullContentBounds: false,\n   },\n }"
      },
      {
        "description": "// Example array definition\n { scale: [['a', 'b'], 0.5] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Use full bounds with content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Scale",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Scale",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Scale"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation bracket",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Surround an equation phrase with brackets",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 18
                },
                "end": {
                  "line": 3,
                  "column": 42,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 18
            },
            "end": {
              "line": 3,
              "column": 42,
              "offset": 59
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 42,
          "offset": 59
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "left bracket symbol",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "left"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "right bracket symbol",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "right"
      },
      {
        "title": "property",
        "description": "`false` excludes bracket symbols from\nsize of resulting phrase (`true`)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "space between brackets and content (`0.03`)",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "insideSpace"
      },
      {
        "title": "property",
        "description": "space between brackets and neighboring\nphrases(`0.03`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "outsideSpace"
      },
      {
        "title": "property",
        "description": "how far the brackets extend above the content\n(`0.05`)",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "how far the brackets extend below the\ncontent (`0.05`)",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "if content height is less than this,\nthen this number will be used when sizing the brackets (unless it is `null`)\n(`null`)",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "minContentHeight"
      },
      {
        "title": "property",
        "description": "if content descent is less than this,\nthen this number will be used when sizing the brackets (unless it is `null`)\n(`null`)",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "minContentDescent"
      },
      {
        "title": "property",
        "description": "force height of brackets (`null`)",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "height"
      },
      {
        "title": "property",
        "description": "force descent of brackets (`null`)",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "descent"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For examples, two bracket symbols are defined as equation elements\neqn.addElements({\n  lb: { symbol: 'bracket', side: 'left' }\n  rb: { symbol: 'bracket', side: 'right' }\n});",
        "lineNumber": 30
      },
      {
        "title": "example",
        "description": "// Full object definition\n {\n   brac: {\n     left: 'lb',\n     content: 'a',\n     right: 'rb',\n     inSize: true,\n     insideSpace: 0.1,\n     outsideSpace: 0.1,\n     topSpace: 0.1,\n     bottomSpace: 0.1,\n     minContentHeight: 0.1,\n     minContentDescent: 0.1,\n     height: 0.1,\n     descent: 0.1,\n     fullContentBounds: false,\n     useFullBounds: false,\n   },\n }",
        "lineNumber": 36
      },
      {
        "title": "example",
        "description": "// Example array definition\n { brac: ['lb', 'a', 'rb'] }",
        "lineNumber": 56
      }
    ],
    "loc": {
      "start": {
        "line": 255,
        "column": 0
      },
      "end": {
        "line": 314,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 316,
          "column": 0
        },
        "end": {
          "line": 345,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, two bracket symbols are defined as equation elements\neqn.addElements({\n  lb: { symbol: 'bracket', side: 'left' }\n  rb: { symbol: 'bracket', side: 'right' }\n});"
      },
      {
        "description": "// Full object definition\n {\n   brac: {\n     left: 'lb',\n     content: 'a',\n     right: 'rb',\n     inSize: true,\n     insideSpace: 0.1,\n     outsideSpace: 0.1,\n     topSpace: 0.1,\n     bottomSpace: 0.1,\n     minContentHeight: 0.1,\n     minContentDescent: 0.1,\n     height: 0.1,\n     descent: 0.1,\n     fullContentBounds: false,\n     useFullBounds: false,\n   },\n }"
      },
      {
        "description": "// Example array definition\n { brac: ['lb', 'a', 'rb'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "left",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "left bracket symbol",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "content",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        }
      },
      {
        "title": "property",
        "name": "right",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "right bracket symbol",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes bracket symbols from\nsize of resulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 64
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 64
                    },
                    "end": {
                      "line": 2,
                      "column": 33,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 33,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 34,
                  "offset": 71
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 34,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "insideSpace",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between brackets and content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.03",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "outsideSpace",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between brackets and neighboring\nphrases(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 47
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.03",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 47
                    },
                    "end": {
                      "line": 2,
                      "column": 15,
                      "offset": 53
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 15,
                      "offset": 53
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 16,
                  "offset": 54
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 16,
              "offset": 54
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "how far the brackets extend above the content\n(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 47
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.05",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 47
                    },
                    "end": {
                      "line": 2,
                      "column": 8,
                      "offset": 53
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 8,
                      "offset": 53
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 9,
                  "offset": 54
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 9,
              "offset": 54
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "how far the brackets extend below the\ncontent (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 10,
                      "offset": 47
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.05",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 10,
                      "offset": 47
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 53
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 53
                    },
                    "end": {
                      "line": 2,
                      "column": 17,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 17,
                  "offset": 54
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 17,
              "offset": 54
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "minContentHeight",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "if content height is less than this,\nthen this number will be used when sizing the brackets (unless it is ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 70,
                      "offset": 106
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 70,
                      "offset": 106
                    },
                    "end": {
                      "line": 2,
                      "column": 76,
                      "offset": 112
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")\n(",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 76,
                      "offset": 112
                    },
                    "end": {
                      "line": 3,
                      "column": 2,
                      "offset": 115
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 2,
                      "offset": 115
                    },
                    "end": {
                      "line": 3,
                      "column": 8,
                      "offset": 121
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 8,
                      "offset": 121
                    },
                    "end": {
                      "line": 3,
                      "column": 9,
                      "offset": 122
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 9,
                  "offset": 122
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 9,
              "offset": 122
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "minContentDescent",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "if content descent is less than this,\nthen this number will be used when sizing the brackets (unless it is ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 70,
                      "offset": 107
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 70,
                      "offset": 107
                    },
                    "end": {
                      "line": 2,
                      "column": 76,
                      "offset": 113
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")\n(",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 76,
                      "offset": 113
                    },
                    "end": {
                      "line": 3,
                      "column": 2,
                      "offset": 116
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 2,
                      "offset": 116
                    },
                    "end": {
                      "line": 3,
                      "column": 8,
                      "offset": 122
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 8,
                      "offset": 122
                    },
                    "end": {
                      "line": 3,
                      "column": 9,
                      "offset": 123
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 9,
                  "offset": 123
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 9,
              "offset": 123
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "height",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force height of brackets (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "descent",
        "lineNumber": 24,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force descent of brackets (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 27,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Bracket",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "left",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "right",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "insideSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "outsideSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "topSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottomSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "minContentHeight",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "minContentDescent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "height",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "descent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Bracket",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Bracket"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation root",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Surround an equation phrase with a radical symbol and add a custom root if\nneeded",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 15
                },
                "end": {
                  "line": 4,
                  "column": 7,
                  "offset": 96
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 15
            },
            "end": {
              "line": 4,
              "column": 7,
              "offset": 96
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 7,
          "offset": 96
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "radical symbol",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "`false` excludes radical symbol and root (if\ndefined) from size of resulting phrase (`true`)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "(`0.02`) default space between content and\nradical symbol in left, right, top and bottom directions.",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "space between content top and radical symbol\nhoriztonal line (`space`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "radical symbol overhang of content on right\n(`space`)",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "rightSpace"
      },
      {
        "title": "property",
        "description": "radical symbol descent below content\n(`space`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "space between radical symbol up stroke and\ncontent (`space`)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "leftSpace"
      },
      {
        "title": "property",
        "description": "custom root",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        "name": "root"
      },
      {
        "title": "property",
        "description": "custom root offset (`[0, 0.06]`)",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "rootOffset"
      },
      {
        "title": "property",
        "description": "custom root scale (`0.6`)",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "rootScale"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For examples, a radical symbol is defined as an equation element\neqn.addElements({\n  radical: { symbol: 'radical' }\n});",
        "lineNumber": 28
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  root: {\n    content: 'a',\n    symbol: 'radical',\n    inSize: true,\n    space: 0.1,\n    topSpace: 0.1,\n    rightSpace: 0.1,\n    bottomSpace: 0.1,\n    leftSpace: 0.1,\n    root: 'b',\n    rootOffset: [0, 0],\n    rootScale: 1,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}",
        "lineNumber": 33
      },
      {
        "title": "example",
        "description": "// Example array definition\n { root: ['radical', 'a'] }",
        "lineNumber": 52
      }
    ],
    "loc": {
      "start": {
        "line": 347,
        "column": 0
      },
      "end": {
        "line": 402,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 404,
          "column": 0
        },
        "end": {
          "line": 432,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, a radical symbol is defined as an equation element\neqn.addElements({\n  radical: { symbol: 'radical' }\n});"
      },
      {
        "description": "// Full object definition\n{\n  root: {\n    content: 'a',\n    symbol: 'radical',\n    inSize: true,\n    space: 0.1,\n    topSpace: 0.1,\n    rightSpace: 0.1,\n    bottomSpace: 0.1,\n    leftSpace: 0.1,\n    root: 'b',\n    rootOffset: [0, 0],\n    rootScale: 1,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}"
      },
      {
        "description": "// Example array definition\n { root: ['radical', 'a'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "radical symbol",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "content",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes radical symbol and root (if\ndefined) from size of resulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 85
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 47,
                      "offset": 91
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 47,
                      "offset": 91
                    },
                    "end": {
                      "line": 2,
                      "column": 48,
                      "offset": 92
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 48,
                  "offset": 92
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 48,
              "offset": 92
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.02",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ") default space between content and\nradical symbol in left, right, top and bottom directions.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 100
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 58,
                  "offset": 100
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 58,
              "offset": 100
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between content top and radical symbol\nhoriztonal line (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 18,
                      "offset": 62
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 18,
                      "offset": 62
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 69
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 69
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 70
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 70
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 70
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "rightSpace",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "radical symbol overhang of content on right\n(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 45
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 45
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 52
                    },
                    "end": {
                      "line": 2,
                      "column": 10,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 10,
                  "offset": 53
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 10,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "radical symbol descent below content\n(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 38
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 38
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 45
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 45
                    },
                    "end": {
                      "line": 2,
                      "column": 10,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 10,
                  "offset": 46
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 10,
              "offset": 46
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "leftSpace",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between radical symbol up stroke and\ncontent (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 10,
                      "offset": 52
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 10,
                      "offset": 52
                    },
                    "end": {
                      "line": 2,
                      "column": 17,
                      "offset": 59
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 17,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 18,
                      "offset": 60
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 18,
                  "offset": 60
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 18,
              "offset": 60
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "root",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "custom root",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        }
      },
      {
        "title": "property",
        "name": "rootOffset",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "custom root offset (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0.06]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "rootScale",
        "lineNumber": 22,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "custom root scale (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.6",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Root",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "topSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "rightSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottomSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "leftSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "root",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "rootOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "rootScale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Root",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Root"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation strike-through",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Overlay a strike symbol on an equation phrase",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 25
                },
                "end": {
                  "line": 3,
                  "column": 46,
                  "offset": 70
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 25
            },
            "end": {
              "line": 3,
              "column": 46,
              "offset": 70
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 46,
          "offset": 70
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "`false` excludes strike symbol from size of\nresulting phrase (`false`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "amount the strike symbol overhangs the content on\nthe left, right, bottom and top sides (`0.02`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "use when top overhang between content and\n strike should be different thant `space` property (`space`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "use when right overhang between content and\n strike should be different thant `space` property (`space`)",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "rightSpace"
      },
      {
        "title": "property",
        "description": "use when bottom overhang between content and\n strike should be different thant `space` property (`space`)",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "use when left overhang between content and\n strike should be different thant `space` property (`space`)",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "leftSpace"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For examples, a strike symbol is defined as an equation element\neqn.addElements({\n  x: { symbol: 'strike', style: 'cross' }\n});",
        "lineNumber": 24
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  strike: {\n    content: 'a',\n    symbol: 'x',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    rightSpace: 0.2,\n    bottomSpace: 0.3,\n    leftSpace: 0.4,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}",
        "lineNumber": 29
      },
      {
        "title": "example",
        "description": "// Example array definition\n { strike: ['a', 'x'] }",
        "lineNumber": 45
      }
    ],
    "loc": {
      "start": {
        "line": 434,
        "column": 0
      },
      "end": {
        "line": 482,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 483,
          "column": 0
        },
        "end": {
          "line": 505,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, a strike symbol is defined as an equation element\neqn.addElements({\n  x: { symbol: 'strike', style: 'cross' }\n});"
      },
      {
        "description": "// Full object definition\n{\n  strike: {\n    content: 'a',\n    symbol: 'x',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    rightSpace: 0.2,\n    bottomSpace: 0.3,\n    leftSpace: 0.4,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}"
      },
      {
        "description": "// Example array definition\n { strike: ['a', 'x'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes strike symbol from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 62
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 62
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 69
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 26,
                      "offset": 69
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 70
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 27,
                  "offset": 70
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 27,
              "offset": 70
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount the strike symbol overhangs the content on\nthe left, right, bottom and top sides (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 89
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.02",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 46,
                      "offset": 95
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 46,
                      "offset": 95
                    },
                    "end": {
                      "line": 2,
                      "column": 47,
                      "offset": 96
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 47,
                  "offset": 96
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 47,
              "offset": 96
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use when top overhang between content and\n strike should be different thant ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 76
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 76
                    },
                    "end": {
                      "line": 2,
                      "column": 42,
                      "offset": 83
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 42,
                      "offset": 83
                    },
                    "end": {
                      "line": 2,
                      "column": 53,
                      "offset": 94
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 53,
                      "offset": 94
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 101
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 60,
                      "offset": 101
                    },
                    "end": {
                      "line": 2,
                      "column": 61,
                      "offset": 102
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 102
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 61,
              "offset": 102
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "rightSpace",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use when right overhang between content and\n strike should be different thant ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 78
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 78
                    },
                    "end": {
                      "line": 2,
                      "column": 42,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 42,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 53,
                      "offset": 96
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 53,
                      "offset": 96
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 103
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 60,
                      "offset": 103
                    },
                    "end": {
                      "line": 2,
                      "column": 61,
                      "offset": 104
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 104
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 61,
              "offset": 104
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use when bottom overhang between content and\n strike should be different thant ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 42,
                      "offset": 86
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 42,
                      "offset": 86
                    },
                    "end": {
                      "line": 2,
                      "column": 53,
                      "offset": 97
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 53,
                      "offset": 97
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 60,
                      "offset": 104
                    },
                    "end": {
                      "line": 2,
                      "column": 61,
                      "offset": 105
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 105
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 61,
              "offset": 105
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "leftSpace",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use when left overhang between content and\n strike should be different thant ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 77
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 77
                    },
                    "end": {
                      "line": 2,
                      "column": 42,
                      "offset": 84
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 42,
                      "offset": 84
                    },
                    "end": {
                      "line": 2,
                      "column": 53,
                      "offset": 95
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 53,
                      "offset": 95
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 102
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 60,
                      "offset": 102
                    },
                    "end": {
                      "line": 2,
                      "column": 61,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 103
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 61,
              "offset": 103
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Strike",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "topSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "rightSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottomSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "leftSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Strike",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Strike"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation box",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Place a box symbol around an equation phrase",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 14
                },
                "end": {
                  "line": 3,
                  "column": 45,
                  "offset": 58
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 14
            },
            "end": {
              "line": 3,
              "column": 45,
              "offset": 58
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 45,
          "offset": 58
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "`false` excludes box symbol from size of\nresulting phrase (`false`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "space between box symbol and content on\nthe left, right, bottom and top sides (`0`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "use when top space between content and\n box should be different thant `space` property (`space`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "use when right space between content and\n box should be different thant `space` property (`space`)",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "rightSpace"
      },
      {
        "title": "property",
        "description": "use when bottom space between content and\n box should be different thant `space` property (`space`)",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "use when left space between content and\n box should be different thant `space` property (`space`)",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "leftSpace"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For examples, a box symbol is defined as an equation element\neqn.addElements({\n  x: { symbol: 'box' }\n});",
        "lineNumber": 24
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  box: {\n    content: 'a',\n    symbol: 'box',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    rightSpace: 0.2,\n    bottomSpace: 0.3,\n    leftSpace: 0.4,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}",
        "lineNumber": 29
      },
      {
        "title": "example",
        "description": "// Example array definition\n { box: ['a', 'box'] }",
        "lineNumber": 45
      }
    ],
    "loc": {
      "start": {
        "line": 507,
        "column": 0
      },
      "end": {
        "line": 555,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 556,
          "column": 0
        },
        "end": {
          "line": 578,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, a box symbol is defined as an equation element\neqn.addElements({\n  x: { symbol: 'box' }\n});"
      },
      {
        "description": "// Full object definition\n{\n  box: {\n    content: 'a',\n    symbol: 'box',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    rightSpace: 0.2,\n    bottomSpace: 0.3,\n    leftSpace: 0.4,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}"
      },
      {
        "description": "// Example array definition\n { box: ['a', 'box'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes box symbol from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 26,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 27,
                  "offset": 67
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 27,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between box symbol and content on\nthe left, right, bottom and top sides (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 43,
                      "offset": 82
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 43,
                      "offset": 82
                    },
                    "end": {
                      "line": 2,
                      "column": 44,
                      "offset": 83
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 44,
                  "offset": 83
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 44,
              "offset": 83
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use when top space between content and\n box should be different thant ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 32,
                      "offset": 70
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 32,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 77
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 77
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 88
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 88
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 95
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 57,
                      "offset": 95
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 96
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 58,
                  "offset": 96
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 58,
              "offset": 96
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "rightSpace",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use when right space between content and\n box should be different thant ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 32,
                      "offset": 72
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 32,
                      "offset": 72
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 79
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 90
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 90
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 97
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 57,
                      "offset": 97
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 98
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 58,
                  "offset": 98
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 58,
              "offset": 98
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use when bottom space between content and\n box should be different thant ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 32,
                      "offset": 73
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 32,
                      "offset": 73
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 91
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 91
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 98
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 57,
                      "offset": 98
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 99
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 58,
                  "offset": 99
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 58,
              "offset": 99
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "leftSpace",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use when left space between content and\n box should be different thant ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 32,
                      "offset": 71
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 32,
                      "offset": 71
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 78
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 78
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 96
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 57,
                      "offset": 96
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 97
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 58,
                  "offset": 97
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 58,
              "offset": 97
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Box",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "topSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "rightSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottomSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "leftSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Box",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Box"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation bar",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Place a bar (or bracket) symbol to the side of an equation phrase",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 14
                },
                "end": {
                  "line": 3,
                  "column": 66,
                  "offset": 79
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 14
            },
            "end": {
              "line": 3,
              "column": 66,
              "offset": 79
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 66,
          "offset": 79
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "`false` excludes box symbol from size of\nresulting phrase (`true`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "space between content and the symbol (`0.03`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "amount symbol extends beyond content (`0`)",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "overhang"
      },
      {
        "title": "property",
        "description": "total length of symbol (overrides `overhang`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "length"
      },
      {
        "title": "property",
        "description": "amount symbol extends beyond content to the left\n(overrides `overhang` and `length`, and only for side `'top'` or `'bottom'`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "left"
      },
      {
        "title": "property",
        "description": "amount symbol extends beyond content to the right\n(overrides `overhang` and `length`, and only for side `'top'` or `'bottom'`)",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "left"
      },
      {
        "title": "property",
        "description": "amount symbol extends beyond content to the top\n(overrides `overhang` and `length`, and only for side `'left'` or `'right'`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "top"
      },
      {
        "title": "property",
        "description": "amount symbol extends beyond content to the bottom\n(overrides `overhang` and `length`, and only for side `'left'` or `'right'`)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "top"
      },
      {
        "title": "property",
        "description": "(`top`)",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        },
        "name": "side"
      },
      {
        "title": "property",
        "description": "custom min content height for auto\nsymbol sizing when side is `'top'` or `'bottom'`",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "minContentHeight"
      },
      {
        "title": "property",
        "description": "custom min content descent for auto\nsymbol sizing when side is `'top'` or `'bottom'`",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "minContentDescent"
      },
      {
        "title": "property",
        "description": "custom min content ascent for auto\nsymbol sizing when side is `'top'` or `'bottom'`",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "minContentAscent"
      },
      {
        "title": "property",
        "description": "force descent of symbol when side is `'top'` or\n`'bottom'` - height is forced with `length` property",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "descent"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 31,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For examples, a box symbol is defined as an equation element\neqn.addElements({\n  hBar: { symbol: 'bar', side: 'top' }\n  vBar: { symbol: 'bar', side: 'left' }\n});",
        "lineNumber": 34
      },
      {
        "title": "example",
        "description": "// Full object definition for horizontal bar\n{\n  bar: {\n    content: 'a',\n    symbol: 'hBar',\n    side: 'top',\n    inSize: true,\n    space: 0.1,\n    overhang: null,\n    length: null,\n    left: null,\n    right: null,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}",
        "lineNumber": 40
      },
      {
        "title": "example",
        "description": "// Full object definition for vertical bar\n{\n  bar: {\n    content: 'a',\n    symbol: 'vBar',\n    side: 'left',\n    inSize: true,\n    space: 0.1,\n    overhang: null,\n    length: null,\n    top: null,\n    bottom: null,\n    minContentHeight: null,\n    minContentDescent: null,\n    minContentAscent: null,\n    descent: null,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}",
        "lineNumber": 57
      },
      {
        "title": "example",
        "description": "// Example array definition\n { bar: ['a', 'hBar', 'top'] }",
        "lineNumber": 78
      }
    ],
    "loc": {
      "start": {
        "line": 580,
        "column": 0
      },
      "end": {
        "line": 661,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 662,
          "column": 0
        },
        "end": {
          "line": 698,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, a box symbol is defined as an equation element\neqn.addElements({\n  hBar: { symbol: 'bar', side: 'top' }\n  vBar: { symbol: 'bar', side: 'left' }\n});"
      },
      {
        "description": "// Full object definition for horizontal bar\n{\n  bar: {\n    content: 'a',\n    symbol: 'hBar',\n    side: 'top',\n    inSize: true,\n    space: 0.1,\n    overhang: null,\n    length: null,\n    left: null,\n    right: null,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}"
      },
      {
        "description": "// Full object definition for vertical bar\n{\n  bar: {\n    content: 'a',\n    symbol: 'vBar',\n    side: 'left',\n    inSize: true,\n    space: 0.1,\n    overhang: null,\n    length: null,\n    top: null,\n    bottom: null,\n    minContentHeight: null,\n    minContentDescent: null,\n    minContentAscent: null,\n    descent: null,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}"
      },
      {
        "description": "// Example array definition\n { bar: ['a', 'hBar', 'top'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes box symbol from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 65
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 66
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 66
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between content and the symbol (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.03",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "overhang",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount symbol extends beyond content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "length",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "total length of symbol (overrides ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "overhang",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "left",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount symbol extends beyond content to the left\n(overrides ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 60
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "overhang",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 60
                    },
                    "end": {
                      "line": 2,
                      "column": 22,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 22,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 75
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "length",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 75
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 83
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", and only for side ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 83
                    },
                    "end": {
                      "line": 2,
                      "column": 55,
                      "offset": 103
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 55,
                      "offset": 103
                    },
                    "end": {
                      "line": 2,
                      "column": 62,
                      "offset": 110
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 62,
                      "offset": 110
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 114
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 66,
                      "offset": 114
                    },
                    "end": {
                      "line": 2,
                      "column": 76,
                      "offset": 124
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 76,
                      "offset": 124
                    },
                    "end": {
                      "line": 2,
                      "column": 77,
                      "offset": 125
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 77,
                  "offset": 125
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 77,
              "offset": 125
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "left",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount symbol extends beyond content to the right\n(overrides ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 61
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "overhang",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 61
                    },
                    "end": {
                      "line": 2,
                      "column": 22,
                      "offset": 71
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 22,
                      "offset": 71
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "length",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 76
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 84
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", and only for side ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 84
                    },
                    "end": {
                      "line": 2,
                      "column": 55,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 55,
                      "offset": 104
                    },
                    "end": {
                      "line": 2,
                      "column": 62,
                      "offset": 111
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 62,
                      "offset": 111
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 115
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 66,
                      "offset": 115
                    },
                    "end": {
                      "line": 2,
                      "column": 76,
                      "offset": 125
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 76,
                      "offset": 125
                    },
                    "end": {
                      "line": 2,
                      "column": 77,
                      "offset": 126
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 77,
                  "offset": 126
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 77,
              "offset": 126
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "top",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount symbol extends beyond content to the top\n(overrides ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 59
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "overhang",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 22,
                      "offset": 69
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 22,
                      "offset": 69
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "length",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 74
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 82
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", and only for side ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 82
                    },
                    "end": {
                      "line": 2,
                      "column": 55,
                      "offset": 102
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'left'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 55,
                      "offset": 102
                    },
                    "end": {
                      "line": 2,
                      "column": 63,
                      "offset": 110
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 63,
                      "offset": 110
                    },
                    "end": {
                      "line": 2,
                      "column": 67,
                      "offset": 114
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'right'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 67,
                      "offset": 114
                    },
                    "end": {
                      "line": 2,
                      "column": 76,
                      "offset": 123
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 76,
                      "offset": 123
                    },
                    "end": {
                      "line": 2,
                      "column": 77,
                      "offset": 124
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 77,
                  "offset": 124
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 77,
              "offset": 124
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "top",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount symbol extends beyond content to the bottom\n(overrides ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 62
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "overhang",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 62
                    },
                    "end": {
                      "line": 2,
                      "column": 22,
                      "offset": 72
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 22,
                      "offset": 72
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 77
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "length",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 77
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", and only for side ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 55,
                      "offset": 105
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'left'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 55,
                      "offset": 105
                    },
                    "end": {
                      "line": 2,
                      "column": 63,
                      "offset": 113
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 63,
                      "offset": 113
                    },
                    "end": {
                      "line": 2,
                      "column": 67,
                      "offset": 117
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'right'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 67,
                      "offset": 117
                    },
                    "end": {
                      "line": 2,
                      "column": 76,
                      "offset": 126
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 76,
                      "offset": 126
                    },
                    "end": {
                      "line": 2,
                      "column": 77,
                      "offset": 127
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 77,
                  "offset": 127
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 77,
              "offset": 127
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "side",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "top",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "minContentHeight",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "custom min content height for auto\nsymbol sizing when side is ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 28,
                      "offset": 62
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 28,
                      "offset": 62
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 69
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 69
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 73
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 73
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 83
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 49,
                  "offset": 83
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 49,
              "offset": 83
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "minContentDescent",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "custom min content descent for auto\nsymbol sizing when side is ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 28,
                      "offset": 63
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 28,
                      "offset": 63
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 74
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 84
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 49,
                  "offset": 84
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 49,
              "offset": 84
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "minContentAscent",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "custom min content ascent for auto\nsymbol sizing when side is ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 28,
                      "offset": 62
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 28,
                      "offset": 62
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 69
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 69
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 73
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 73
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 83
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 49,
                  "offset": 83
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 49,
              "offset": 83
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "descent",
        "lineNumber": 27,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force descent of symbol when side is ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 48
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 48
                    },
                    "end": {
                      "line": 2,
                      "column": 11,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " - height is forced with ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 11,
                      "offset": 58
                    },
                    "end": {
                      "line": 2,
                      "column": 36,
                      "offset": 83
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "length",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 36,
                      "offset": 83
                    },
                    "end": {
                      "line": 2,
                      "column": 44,
                      "offset": 91
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " property",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 44,
                      "offset": 91
                    },
                    "end": {
                      "line": 2,
                      "column": 53,
                      "offset": 100
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 53,
                  "offset": 100
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 53,
              "offset": 100
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 31,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Bar",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "overhang",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "length",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "left",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "right",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "top",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottom",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "side",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "left"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "right"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "top"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "bottom"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "minContentHeight",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "minContentDescent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "minContentAscent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "descent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "left"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "bottom"
                }
              ]
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Bar",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Bar"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation integral",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Place an integral (with optional limits) before an equation phrase",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 19
                },
                "end": {
                  "line": 3,
                  "column": 67,
                  "offset": 85
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 19
            },
            "end": {
              "line": 3,
              "column": 67,
              "offset": 85
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 67,
          "offset": 85
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "bottom limit",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        "name": "from"
      },
      {
        "title": "property",
        "description": "top limit",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        "name": "to"
      },
      {
        "title": "property",
        "description": "`false` excludes box symbol from size of\nresulting phrase (`true`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "horizontal space between symbol and content (`0.05`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "space between content top and symbol top (`0.1`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "space between content bottom and symbol bottom (`0.1`)",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "force height of symbol",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "height"
      },
      {
        "title": "property",
        "description": "y offset of symbol (`0`)",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "yOffset"
      },
      {
        "title": "property",
        "description": "content scale (`1`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "scale of *from* (bottom) limit (`0.5`)",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "fromScale"
      },
      {
        "title": "property",
        "description": "scale of *to* (top) limit (`0.5`)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "toScale"
      },
      {
        "title": "property",
        "description": "from limit offest ( `side`:\n`[0, 0]`, `topBottom`: `[0, -0.04]`, `topBottomCenter`: `[0, -0.04]`)",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "fromOffset"
      },
      {
        "title": "property",
        "description": "to limit offest (`side`: `[0, 0]`\n`topBottom`: `[0, 0.04]`, `topBottomCenter`: `[0, 0.04]`)",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "toOffset"
      },
      {
        "title": "property",
        "description": "limits\nrelative to symbol. `side` is to the right of the symbol ends, `topBottom`\nis above and below the symbol ends and `topBottomCenter` is above and below\nthe integral mid point (`'side'`)",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "side"
              },
              {
                "type": "StringLiteralType",
                "value": "topBottom"
              },
              {
                "type": "StringLiteralType",
                "value": "topBottomCenter"
              }
            ]
          }
        },
        "name": "limitsPosition"
      },
      {
        "title": "property",
        "description": "`false` means content left is\naligned with furthest right of limits",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "limitsAroundContent"
      },
      {
        "title": "property",
        "description": "x position\nof limit relative to the symbol (`side`: `0.5`, `topBottom`: `0.1`,\n`topBottomCenter`: `'center'`)",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "fromXPosition"
      },
      {
        "title": "property",
        "description": "y position of the limit relavite to the symbol (`'bottom'`)",
        "lineNumber": 32,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "fromYPositio"
      },
      {
        "title": "property",
        "description": "limit x\nalignment (`side`: `'left'`, `topBottom`: `center`,\n`topBottomCenter`: `'center'`)",
        "lineNumber": 34,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "fromXAlign"
      },
      {
        "title": "property",
        "description": "limit y alignment (`side`: `'middle'`, `topBottom`: `'top'`,\n`topBottomCenter`: `'top'`)",
        "lineNumber": 37,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "fromYAlign"
      },
      {
        "title": "property",
        "description": "x position\nof limit relative to the symbol (`side`: `'right'`, `topBottom`: `0.9`,\n`topBottomCenter`: `'center'`)",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "toXPosition"
      },
      {
        "title": "property",
        "description": "y position of the limit relavite to the symbol (`side`: `'top'`,\n`topBottom`: `top`, `topBottomCenter`: `'top'`)",
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "toYPosition"
      },
      {
        "title": "property",
        "description": "limit x\nalignment (`side`: `'left'`, `topBottom`: `center`,\n`topBottomCenter`: `'center'`)",
        "lineNumber": 46,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "toXAlign"
      },
      {
        "title": "property",
        "description": "limit y alignment (`side`: `'middle'`, `topBottom`: `bottom`,\n`topBottomCenter`: `'bottom'`)",
        "lineNumber": 49,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "toYAlign"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 52,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 54,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For examples, a box symbol is defined as an equation element\neqn.addElements({\n  integral: { symbol: 'int' }\n});",
        "lineNumber": 57
      },
      {
        "title": "example",
        "description": "// Full object definition for horizontal bar\n{\n  int: {\n    symbol: 'integral',\n    content: 'a',\n    from: 'b',\n    to: 'c',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    bottomSpace: 0.1,\n    height: null,\n    yOffset: 0,\n    scale: 1,\n    fromScale: 1,\n    toScale: 1,\n    fromOffset: [0.1, 0.1],\n    toOffset: [-0.1, -0.1],\n    limitsPosition: 'topBottom',\n    limitsAroundContent: true,\n    fromXPosition: 'center',\n    fromYPosition: 'bottom',\n    fromXAlign: 'center',\n    fromYAlign: 'top',\n    toXPosition: 'center',\n    toYPosition: 'top',\n    toXAlign: 'center',\n    toYAlign: 'bottom',\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}",
        "lineNumber": 62
      },
      {
        "title": "example",
        "description": "// Example array definition\n { int: ['integral', 'a', 'b', 'c'] }",
        "lineNumber": 95
      }
    ],
    "loc": {
      "start": {
        "line": 700,
        "column": 0
      },
      "end": {
        "line": 798,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 799,
          "column": 0
        },
        "end": {
          "line": 855,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, a box symbol is defined as an equation element\neqn.addElements({\n  integral: { symbol: 'int' }\n});"
      },
      {
        "description": "// Full object definition for horizontal bar\n{\n  int: {\n    symbol: 'integral',\n    content: 'a',\n    from: 'b',\n    to: 'c',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    bottomSpace: 0.1,\n    height: null,\n    yOffset: 0,\n    scale: 1,\n    fromScale: 1,\n    toScale: 1,\n    fromOffset: [0.1, 0.1],\n    toOffset: [-0.1, -0.1],\n    limitsPosition: 'topBottom',\n    limitsAroundContent: true,\n    fromXPosition: 'center',\n    fromYPosition: 'bottom',\n    fromXAlign: 'center',\n    fromYAlign: 'top',\n    toXPosition: 'center',\n    toYPosition: 'top',\n    toXAlign: 'center',\n    toYAlign: 'bottom',\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}"
      },
      {
        "description": "// Example array definition\n { int: ['integral', 'a', 'b', 'c'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "content",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "from",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "bottom limit",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        }
      },
      {
        "title": "property",
        "name": "to",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "top limit",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes box symbol from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 65
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 66
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 66
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "horizontal space between symbol and content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.05",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "end": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 52,
                      "offset": 51
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between content top and symbol top (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between content bottom and symbol bottom (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 55,
                  "offset": 54
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 55,
              "offset": 54
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "height",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force height of symbol",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "yOffset",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y offset of symbol (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "content scale (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fromScale",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "from",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "end": {
                          "line": 1,
                          "column": 15,
                          "offset": 14
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " (bottom) limit (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "toScale",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "to",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "end": {
                          "line": 1,
                          "column": 13,
                          "offset": 12
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " (top) limit (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fromOffset",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "from limit offest ( ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ":\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 28
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 28
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 36
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 36
                    },
                    "end": {
                      "line": 2,
                      "column": 11,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 11,
                      "offset": 38
                    },
                    "end": {
                      "line": 2,
                      "column": 22,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 22,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 24,
                      "offset": 51
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, -0.04]",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 24,
                      "offset": 51
                    },
                    "end": {
                      "line": 2,
                      "column": 36,
                      "offset": 63
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 36,
                      "offset": 63
                    },
                    "end": {
                      "line": 2,
                      "column": 38,
                      "offset": 65
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 38,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 55,
                      "offset": 82
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 55,
                      "offset": 82
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 84
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, -0.04]",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 57,
                      "offset": 84
                    },
                    "end": {
                      "line": 2,
                      "column": 69,
                      "offset": 96
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 69,
                      "offset": 96
                    },
                    "end": {
                      "line": 2,
                      "column": 70,
                      "offset": 97
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 70,
                  "offset": 97
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 70,
              "offset": 97
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "toOffset",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "to limit offest (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 34
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 34
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 45
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 45
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 47
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0.04]",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 14,
                      "offset": 47
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 58
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 60
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 60
                    },
                    "end": {
                      "line": 2,
                      "column": 44,
                      "offset": 77
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 44,
                      "offset": 77
                    },
                    "end": {
                      "line": 2,
                      "column": 46,
                      "offset": 79
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0.04]",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 46,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 90
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 57,
                      "offset": 90
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 91
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 58,
                  "offset": 91
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 58,
              "offset": 91
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "limitsPosition",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "limits\nrelative to symbol. ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 21,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 21,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 33
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is to the right of the symbol ends, ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 33
                    },
                    "end": {
                      "line": 2,
                      "column": 64,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 64,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 75,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\nis above and below the symbol ends and ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 75,
                      "offset": 81
                    },
                    "end": {
                      "line": 3,
                      "column": 40,
                      "offset": 121
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 40,
                      "offset": 121
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 138
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " is above and below\nthe integral mid point (",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 138
                    },
                    "end": {
                      "line": 4,
                      "column": 25,
                      "offset": 182
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'side'",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 25,
                      "offset": 182
                    },
                    "end": {
                      "line": 4,
                      "column": 33,
                      "offset": 190
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 33,
                      "offset": 190
                    },
                    "end": {
                      "line": 4,
                      "column": 34,
                      "offset": 191
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 34,
                  "offset": 191
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 34,
              "offset": 191
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "side"
              },
              {
                "type": "StringLiteralType",
                "value": "topBottom"
              },
              {
                "type": "StringLiteralType",
                "value": "topBottomCenter"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "limitsAroundContent",
        "lineNumber": 27,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " means content left is\naligned with furthest right of limits",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 38,
                      "offset": 67
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 67
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 38,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "fromXPosition",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x position\nof limit relative to the symbol (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 44
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 34,
                      "offset": 44
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 50
                    },
                    "end": {
                      "line": 2,
                      "column": 42,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 42,
                      "offset": 52
                    },
                    "end": {
                      "line": 2,
                      "column": 47,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 47,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 59
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 49,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 60,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 62,
                      "offset": 72
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.1",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 62,
                      "offset": 72
                    },
                    "end": {
                      "line": 2,
                      "column": 67,
                      "offset": 77
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 67,
                      "offset": 77
                    },
                    "end": {
                      "line": 3,
                      "column": 1,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 79
                    },
                    "end": {
                      "line": 3,
                      "column": 18,
                      "offset": 96
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 18,
                      "offset": 96
                    },
                    "end": {
                      "line": 3,
                      "column": 20,
                      "offset": 98
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'center'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 20,
                      "offset": 98
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 108
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 108
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 109
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 109
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 109
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "fromYPositio",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y position of the limit relavite to the symbol (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "end": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 59,
                      "offset": 58
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "fromXAlign",
        "lineNumber": 34,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "limit x\nalignment (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 19
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 19
                    },
                    "end": {
                      "line": 2,
                      "column": 18,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 18,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 20,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'left'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 20,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 28,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 28,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 37
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 48
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 48
                    },
                    "end": {
                      "line": 2,
                      "column": 43,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "center",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 43,
                      "offset": 50
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 58
                    },
                    "end": {
                      "line": 3,
                      "column": 1,
                      "offset": 60
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 60
                    },
                    "end": {
                      "line": 3,
                      "column": 18,
                      "offset": 77
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 18,
                      "offset": 77
                    },
                    "end": {
                      "line": 3,
                      "column": 20,
                      "offset": 79
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'center'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 20,
                      "offset": 79
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 89
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 90
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "fromYAlign",
        "lineNumber": 37,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "limit y alignment (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'middle'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 61
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 61
                    },
                    "end": {
                      "line": 2,
                      "column": 18,
                      "offset": 78
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 18,
                      "offset": 78
                    },
                    "end": {
                      "line": 2,
                      "column": 20,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 20,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 87
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 87
                    },
                    "end": {
                      "line": 2,
                      "column": 28,
                      "offset": 88
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 28,
                  "offset": 88
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 28,
              "offset": 88
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "toXPosition",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "x position\nof limit relative to the symbol (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 44
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 34,
                      "offset": 44
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 50
                    },
                    "end": {
                      "line": 2,
                      "column": 42,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'right'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 42,
                      "offset": 52
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 61
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 61
                    },
                    "end": {
                      "line": 2,
                      "column": 53,
                      "offset": 63
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 53,
                      "offset": 63
                    },
                    "end": {
                      "line": 2,
                      "column": 64,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 64,
                      "offset": 74
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.9",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 66,
                      "offset": 76
                    },
                    "end": {
                      "line": 2,
                      "column": 71,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 71,
                      "offset": 81
                    },
                    "end": {
                      "line": 3,
                      "column": 1,
                      "offset": 83
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 83
                    },
                    "end": {
                      "line": 3,
                      "column": 18,
                      "offset": 100
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 18,
                      "offset": 100
                    },
                    "end": {
                      "line": 3,
                      "column": 20,
                      "offset": 102
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'center'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 20,
                      "offset": 102
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 112
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 112
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 113
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 113
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 113
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "toYPosition",
        "lineNumber": 43,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "y position of the limit relavite to the symbol (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "end": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 57,
                      "offset": 56
                    },
                    "end": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 65
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 76
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 78
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "top",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 14,
                      "offset": 78
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 83
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 83
                    },
                    "end": {
                      "line": 2,
                      "column": 21,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 21,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 38,
                      "offset": 102
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 38,
                      "offset": 102
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 104
                    },
                    "end": {
                      "line": 2,
                      "column": 47,
                      "offset": 111
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 47,
                      "offset": 111
                    },
                    "end": {
                      "line": 2,
                      "column": 48,
                      "offset": 112
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 48,
                  "offset": 112
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 48,
              "offset": 112
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "toXAlign",
        "lineNumber": 46,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "limit x\nalignment (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 19
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 19
                    },
                    "end": {
                      "line": 2,
                      "column": 18,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 18,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 20,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'left'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 20,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 28,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 28,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 37
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 48
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 48
                    },
                    "end": {
                      "line": 2,
                      "column": 43,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "center",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 43,
                      "offset": 50
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 58
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 58
                    },
                    "end": {
                      "line": 3,
                      "column": 1,
                      "offset": 60
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 1,
                      "offset": 60
                    },
                    "end": {
                      "line": 3,
                      "column": 18,
                      "offset": 77
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 18,
                      "offset": 77
                    },
                    "end": {
                      "line": 3,
                      "column": 20,
                      "offset": 79
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'center'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 20,
                      "offset": 79
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 89
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 90
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "toYAlign",
        "lineNumber": 49,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "limit y alignment (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "side",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'middle'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottom",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "bottom",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 62
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topBottomCenter",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 62
                    },
                    "end": {
                      "line": 2,
                      "column": 18,
                      "offset": 79
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ": ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 18,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 20,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 20,
                      "offset": 81
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 91
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 91
                    },
                    "end": {
                      "line": 2,
                      "column": 31,
                      "offset": 92
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 31,
                  "offset": 92
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 31,
              "offset": 92
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 52,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 54,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Integral",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "from",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "to",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "topSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottomSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "height",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "yOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromScale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toScale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "limitsPosition",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "side"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "topBottom"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "topBottomCenter"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "limitsAroundContent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromXPosition",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "left"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "center"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "right"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromYPosition",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "bottom"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "top"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "middle"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "baseline"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromXAlign",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "left"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "center"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "right"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromYAlign",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "bottom"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "top"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "middle"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "baseline"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toXPosition",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "left"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "center"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "right"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toYPosition",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "bottom"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "top"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "middle"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "baseline"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toXAlign",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "left"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "center"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "right"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toYAlign",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "bottom"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "top"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "middle"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "baseline"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullBoundsContent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "side"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "topBottom"
                },
                {
                  "type": "StringLiteralType",
                  "value": "topBottomCenter"
                }
              ]
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "left"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "center"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "bottom"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "middle"
                },
                {
                  "type": "StringLiteralType",
                  "value": "baseline"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "left"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "center"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "bottom"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "middle"
                },
                {
                  "type": "StringLiteralType",
                  "value": "baseline"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "left"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "center"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "bottom"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "middle"
                },
                {
                  "type": "StringLiteralType",
                  "value": "baseline"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "left"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "center"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "bottom"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "middle"
                },
                {
                  "type": "StringLiteralType",
                  "value": "baseline"
                },
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Integral",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Integral"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation sum of",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Place an equation phrase in a sum of operation",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 17
                },
                "end": {
                  "line": 3,
                  "column": 47,
                  "offset": 63
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 17
            },
            "end": {
              "line": 3,
              "column": 47,
              "offset": 63
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 47,
          "offset": 63
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        "name": "from"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        "name": "to"
      },
      {
        "title": "property",
        "description": "`false` excludes sum of operator from size of\nresulting phrase (`true`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "horiztonaly space between symbol and content (`0.05`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "space symbol extends above content top (`0.07`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "space symbol extends below content bottom (`0.07`)",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "force height of symbol overwriting `topSpace`",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "height"
      },
      {
        "title": "property",
        "description": "offset of symbol in y (`0`)",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "yOffset"
      },
      {
        "title": "property",
        "description": "content scale (`1`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "scale of *from* phrase (`0.5`)",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "fromScale"
      },
      {
        "title": "property",
        "description": "scale of *to* phrase (`0.5`)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "toScale"
      },
      {
        "title": "property",
        "description": "space between symbol and `from` phrase\n(`0.04`)",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "fromSpace"
      },
      {
        "title": "property",
        "description": "space between symbol and `to` phrase (`0.04`)",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "toSpace"
      },
      {
        "title": "property",
        "description": "offset of `from` phrase (`[0, 0]`)",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "fromOffset"
      },
      {
        "title": "property",
        "description": "offset of `to` phrase (`[0, 0]`)",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "toOffset"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For examples, a sum of symbol (sigma) is defined as an equation element\neqn.addElements({\n  s: { symbol: 'sum' }\n});",
        "lineNumber": 29
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  sumOf: {\n    symbol: 's',\n    content: 'a',\n    from: 'b',\n    to: 'c',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    bottomSpace: 0.1,\n    height: null,\n    yOffset: 0,\n    scale: 1,\n    fromScale: 1,\n    toScale: 1,\n    fromSpace: 0.1,\n    toSpace: 0.1,\n    fromOffset: [0.1, 0.1],\n    toOffset: [-0.1, -0.1],\n  },\n}",
        "lineNumber": 34
      },
      {
        "title": "example",
        "description": "// Example array definition\n { sumOf: ['s', 'a', 'b', 'c'] }",
        "lineNumber": 57
      }
    ],
    "loc": {
      "start": {
        "line": 857,
        "column": 0
      },
      "end": {
        "line": 917,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 918,
          "column": 0
        },
        "end": {
          "line": 958,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, a sum of symbol (sigma) is defined as an equation element\neqn.addElements({\n  s: { symbol: 'sum' }\n});"
      },
      {
        "description": "// Full object definition\n{\n  sumOf: {\n    symbol: 's',\n    content: 'a',\n    from: 'b',\n    to: 'c',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    bottomSpace: 0.1,\n    height: null,\n    yOffset: 0,\n    scale: 1,\n    fromScale: 1,\n    toScale: 1,\n    fromSpace: 0.1,\n    toSpace: 0.1,\n    fromOffset: [0.1, 0.1],\n    toOffset: [-0.1, -0.1],\n  },\n}"
      },
      {
        "description": "// Example array definition\n { sumOf: ['s', 'a', 'b', 'c'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "content",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "from",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        }
      },
      {
        "title": "property",
        "name": "to",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes sum of operator from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 64
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 64
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 71
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "horiztonaly space between symbol and content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.05",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space symbol extends above content top (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.07",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space symbol extends below content bottom (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.07",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "height",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force height of symbol overwriting ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topSpace",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "yOffset",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of symbol in y (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "content scale (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fromScale",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "from",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "end": {
                          "line": 1,
                          "column": 15,
                          "offset": 14
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "toScale",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "to",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "end": {
                          "line": 1,
                          "column": 13,
                          "offset": 12
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fromSpace",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between symbol and ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "from",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase\n(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 40
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.04",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 40
                    },
                    "end": {
                      "line": 2,
                      "column": 8,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 8,
                      "offset": 46
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 9,
                  "offset": 47
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 9,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "toSpace",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between symbol and ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "to",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.04",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fromOffset",
        "lineNumber": 22,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "from",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "toOffset",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "to",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 24,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_SumOf",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "from",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "to",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "topSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottomSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "height",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "yOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromScale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toScale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullBoundsContent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "NameExpression",
                    "name": "TypeParsablePoint"
                  }
                },
                {
                  "type": "NullLiteral"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "NameExpression",
                    "name": "TypeParsablePoint"
                  }
                },
                {
                  "type": "NullLiteral"
                }
              ]
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_SumOf",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_SumOf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation product of",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Place an equation phrase in a product of operation",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 21
                },
                "end": {
                  "line": 3,
                  "column": 51,
                  "offset": 71
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 21
            },
            "end": {
              "line": 3,
              "column": 51,
              "offset": 71
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 51,
          "offset": 71
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        "name": "from"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        "name": "to"
      },
      {
        "title": "property",
        "description": "`false` excludes product of operator from size of\nresulting phrase (`true`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "horiztonaly space between symbol and content (`0.05`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "space symbol extends above content top (`0.07`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "space symbol extends below content bottom (`0.07`)",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "force height of symbol overwriting `topSpace`",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "height"
      },
      {
        "title": "property",
        "description": "offset of symbol in y (`0`)",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "yOffset"
      },
      {
        "title": "property",
        "description": "content scale (`1`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "scale of *from* phrase (`0.5`)",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "fromScale"
      },
      {
        "title": "property",
        "description": "scale of *to* phrase (`0.5`)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "toScale"
      },
      {
        "title": "property",
        "description": "space between symbol and `from` phrase\n(`0.04`)",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "fromSpace"
      },
      {
        "title": "property",
        "description": "space between symbol and `to` phrase (`0.04`)",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "toSpace"
      },
      {
        "title": "property",
        "description": "offset of `from` phrase (`[0, 0]`)",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "fromOffset"
      },
      {
        "title": "property",
        "description": "offset of `to` phrase (`[0, 0]`)",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "toOffset"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For examples, a sum of symbol (pi) is defined as an equation element\neqn.addElements({\n  s: { symbol: 'prod' }\n});",
        "lineNumber": 29
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  prodOf: {\n    symbol: 's',\n    content: 'a',\n    from: 'b',\n    to: 'c',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    bottomSpace: 0.1,\n    height: null,\n    yOffset: 0,\n    scale: 1,\n    fromScale: 1,\n    toScale: 1,\n    fromSpace: 0.1,\n    toSpace: 0.1,\n    fromOffset: [0.1, 0.1],\n    toOffset: [-0.1, -0.1],\n  },\n}",
        "lineNumber": 34
      },
      {
        "title": "example",
        "description": "// Example array definition\n { prodOf: ['s', 'a', 'b', 'c'] }",
        "lineNumber": 57
      }
    ],
    "loc": {
      "start": {
        "line": 960,
        "column": 0
      },
      "end": {
        "line": 1020,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1021,
          "column": 0
        },
        "end": {
          "line": 1061,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For examples, a sum of symbol (pi) is defined as an equation element\neqn.addElements({\n  s: { symbol: 'prod' }\n});"
      },
      {
        "description": "// Full object definition\n{\n  prodOf: {\n    symbol: 's',\n    content: 'a',\n    from: 'b',\n    to: 'c',\n    inSize: true,\n    space: 0,\n    topSpace: 0.1,\n    bottomSpace: 0.1,\n    height: null,\n    yOffset: 0,\n    scale: 1,\n    fromScale: 1,\n    toScale: 1,\n    fromSpace: 0.1,\n    toSpace: 0.1,\n    fromOffset: [0.1, 0.1],\n    toOffset: [-0.1, -0.1],\n  },\n}"
      },
      {
        "description": "// Example array definition\n { prodOf: ['s', 'a', 'b', 'c'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "content",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "from",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        }
      },
      {
        "title": "property",
        "name": "to",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes product of operator from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 68
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 68
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 74
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 74
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 75
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 75
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 75
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "horiztonaly space between symbol and content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.05",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "end": {
                      "line": 1,
                      "column": 54,
                      "offset": 53
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space symbol extends above content top (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.07",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space symbol extends below content bottom (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.07",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 51,
                  "offset": 50
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 51,
              "offset": 50
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "height",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force height of symbol overwriting ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "topSpace",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "yOffset",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of symbol in y (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "content scale (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fromScale",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "from",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "end": {
                          "line": 1,
                          "column": 15,
                          "offset": 14
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "toScale",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "to",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "end": {
                          "line": 1,
                          "column": 13,
                          "offset": 12
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fromSpace",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between symbol and ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "from",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase\n(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 40
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.04",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 40
                    },
                    "end": {
                      "line": 2,
                      "column": 8,
                      "offset": 46
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 8,
                      "offset": 46
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 9,
                  "offset": 47
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 9,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "toSpace",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between symbol and ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "to",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.04",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fromOffset",
        "lineNumber": 22,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "from",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "toOffset",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "to",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 15,
                      "offset": 14
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 24,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_ProdOf",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "from",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "to",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "topSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottomSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "height",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "yOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromScale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toScale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fromOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "toOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullBoundsContent",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "NameExpression",
                    "name": "TypeParsablePoint"
                  }
                },
                {
                  "type": "NullLiteral"
                }
              ]
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "NameExpression",
                    "name": "TypeParsablePoint"
                  }
                },
                {
                  "type": "NullLiteral"
                }
              ]
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_ProdOf",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_ProdOf"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation subscript",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 19,
          "offset": 18
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "subscript"
      },
      {
        "title": "property",
        "description": "scale of subscript (`0.5`)",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "offset of subscript (`[0, 0]`)",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "offset"
      },
      {
        "title": "property",
        "description": "`true` excludes subscript from size of\nresulting phrase (`true`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  sub: {\n    content: 'a',\n    subscript: 'b',\n    scale: 0.5,\n    offset: [0, 0],\n    inSize: true,\n  },\n}",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "// Example array definition\n { sub: ['a', 'b'] }",
        "lineNumber": 20
      }
    ],
    "loc": {
      "start": {
        "line": 1063,
        "column": 0
      },
      "end": {
        "line": 1086,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1087,
          "column": 0
        },
        "end": {
          "line": 1099,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Full object definition\n{\n  sub: {\n    content: 'a',\n    subscript: 'b',\n    scale: 0.5,\n    offset: [0, 0],\n    inSize: true,\n  },\n}"
      },
      {
        "description": "// Example array definition\n { sub: ['a', 'b'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "subscript",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of subscript (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "offset",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of subscript (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes subscript from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 57
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 63
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 63
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 64
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 64
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Subcript",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "subscript",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "offset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Subcript",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Subcript"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation superscript",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 21,
          "offset": 20
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "superscript"
      },
      {
        "title": "property",
        "description": "scale of superscript (`0.5`)",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "offset of superscript (`[0, 0]`)",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "offset"
      },
      {
        "title": "property",
        "description": "`true` excludes superscript from size of\nresulting phrase (`true`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  sup: {\n    content: 'a',\n    superscript: 'b',\n    scale: 0.5,\n    offset: [0, 0],\n    inSize: true,\n  },\n}",
        "lineNumber": 9
      },
      {
        "title": "example",
        "description": "// Example array definition\n { sup: ['a', 'b'] }",
        "lineNumber": 20
      }
    ],
    "loc": {
      "start": {
        "line": 1101,
        "column": 0
      },
      "end": {
        "line": 1124,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1125,
          "column": 0
        },
        "end": {
          "line": 1137,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Full object definition\n{\n  sup: {\n    content: 'a',\n    superscript: 'b',\n    scale: 0.5,\n    offset: [0, 0],\n    inSize: true,\n  },\n}"
      },
      {
        "description": "// Example array definition\n { sup: ['a', 'b'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "superscript",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of superscript (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "offset",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of superscript (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes superscript from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 65
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 66
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 66
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Superscript",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "superscript",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "offset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Superscript",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Superscript"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation superscript and subscript",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 35,
          "offset": 34
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "superscript"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "subscript"
      },
      {
        "title": "property",
        "description": "scale of superscript (`0.5`)",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "offset of superscript (`[0, 0]`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "superscriptOffset"
      },
      {
        "title": "property",
        "description": "offset of subscript (`[0, 0]`)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "subscriptOffset"
      },
      {
        "title": "property",
        "description": "`true` excludes superscript from size of\nresulting phrase (`true`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  supSub: {\n    content: 'a',\n    superscript: 'b',\n    subscript: 'c',\n    scale: 0.5,\n    superscriptOffset: [0, 0],\n    subscriptOffset: [0, 0],\n    inSize: true,\n  },\n}",
        "lineNumber": 11
      },
      {
        "title": "example",
        "description": "// Example array definition\n { supSub: ['a', 'b', 'c'] }",
        "lineNumber": 24
      }
    ],
    "loc": {
      "start": {
        "line": 1139,
        "column": 0
      },
      "end": {
        "line": 1166,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1167,
          "column": 0
        },
        "end": {
          "line": 1183,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Full object definition\n{\n  supSub: {\n    content: 'a',\n    superscript: 'b',\n    subscript: 'c',\n    scale: 0.5,\n    superscriptOffset: [0, 0],\n    subscriptOffset: [0, 0],\n    inSize: true,\n  },\n}"
      },
      {
        "description": "// Example array definition\n { supSub: ['a', 'b', 'c'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "superscript",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "subscript",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of superscript (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "superscriptOffset",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of superscript (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "subscriptOffset",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset of subscript (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes superscript from size of\nresulting phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 59
                    },
                    "end": {
                      "line": 2,
                      "column": 25,
                      "offset": 65
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 25,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 66
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 66
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 66
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_SuperscriptSubscript",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "subscript",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "superscript",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "superscriptOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "subscriptOffset",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_SuperscriptSubscript",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_SuperscriptSubscript"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation comment options used with ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "topComment",
              "position": {
                "start": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "bottomComment",
              "position": {
                "start": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nfunctions.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "end": {
                  "line": 2,
                  "column": 11,
                  "offset": 78
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 11,
              "offset": 78
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A symbol between the content and comment is optional.",
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 80
                },
                "end": {
                  "line": 4,
                  "column": 54,
                  "offset": 133
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 80
            },
            "end": {
              "line": 4,
              "column": 54,
              "offset": 133
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 54,
          "offset": 133
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "comment"
      },
      {
        "title": "property",
        "description": "optional symbol between content and comment",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "space from content to symbol (`0.03`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "contentSpace"
      },
      {
        "title": "property",
        "description": "space from symbol to comment (`0.03`)",
        "lineNumber": 10,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "commentSpace"
      },
      {
        "title": "property",
        "description": "comment scale (`0.6`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "`false` excludes the symbol and comment from\nthre resulting size of the equation phrase (`true`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// For following examples, a bottom brace is defined as an equation element\neqn.addElements({\n  brace: { symbol: 'brace', side: 'bottom' }\n});",
        "lineNumber": 19
      },
      {
        "title": "example",
        "description": "// BottomComment full object definition\n{\n  bottomComment: {\n    content: 'a',\n    comment: 'b',\n    symbol: 'bar',\n    contentSpace: 0.1,\n    commentSpace: 0.2,\n    scale: 2,\n    inSize: true,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}",
        "lineNumber": 24
      },
      {
        "title": "example",
        "description": "// Top comment example without symbol\n { topComment: ['a', 'b'] }",
        "lineNumber": 39
      },
      {
        "title": "example",
        "description": "// Bottom comment example with symbol\n { bottomComment: ['a', 'b', 'brace'] }",
        "lineNumber": 42
      }
    ],
    "loc": {
      "start": {
        "line": 1185,
        "column": 0
      },
      "end": {
        "line": 1230,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1231,
          "column": 0
        },
        "end": {
          "line": 1251,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For following examples, a bottom brace is defined as an equation element\neqn.addElements({\n  brace: { symbol: 'brace', side: 'bottom' }\n});"
      },
      {
        "description": "// BottomComment full object definition\n{\n  bottomComment: {\n    content: 'a',\n    comment: 'b',\n    symbol: 'bar',\n    contentSpace: 0.1,\n    commentSpace: 0.2,\n    scale: 2,\n    inSize: true,\n    fullContentBounds: false,\n    useFullBounds: false,\n  },\n}"
      },
      {
        "description": "// Top comment example without symbol\n { topComment: ['a', 'b'] }"
      },
      {
        "description": "// Bottom comment example with symbol\n { bottomComment: ['a', 'b', 'brace'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "comment",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "optional symbol between content and comment",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "contentSpace",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space from content to symbol (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.03",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "commentSpace",
        "lineNumber": 10,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space from symbol to comment (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.03",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "comment scale (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.6",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes the symbol and comment from\nthre resulting size of the equation phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 45,
                      "offset": 89
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 45,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 95
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 95
                    },
                    "end": {
                      "line": 2,
                      "column": 52,
                      "offset": 96
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 52,
                  "offset": 96
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 52,
              "offset": 96
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Comment",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "comment",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "contentSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "commentSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "useFullBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "string"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Comment",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Comment"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation strike with comment options used with ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "topStrike",
              "position": {
                "start": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "end": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 59,
                  "offset": 58
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "bottomStrike",
              "position": {
                "start": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "\nfunctions.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "end": {
                  "line": 2,
                  "column": 11,
                  "offset": 88
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 11,
              "offset": 88
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 11,
          "offset": 88
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "strike symbol",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "comment"
      },
      {
        "title": "property",
        "description": "`false` excludes the symbol and comment from\nthre resulting size of the equation phrase (`true`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "top, right, bottom and left extension of symbol\nbeyond content (`0.03`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "comment scale (`0.6`)",
        "lineNumber": 11,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "space from symbol to comment (`0.03`)",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "commentSpace"
      },
      {
        "title": "example",
        "description": "// For following examples, a strike symbol is defined as an equation element\neqn.addElements({\n  x: { symbol: 'strike', style: 'cross' }\n});",
        "lineNumber": 13
      },
      {
        "title": "example",
        "description": "// BottomStrike full object definition\n{\n  bottomStrike: {\n    content: 'a',\n    symbol: 'x',\n    comment: 'b',\n    inSize: true,\n    commentSpace: 0,\n    scale: 1,\n    space: 0,\n  },\n},",
        "lineNumber": 18
      },
      {
        "title": "example",
        "description": "// Top strike array example\n { topStrike: ['a', 'x', 'b'] }",
        "lineNumber": 31
      },
      {
        "title": "example",
        "description": "// Bottom strike array examples\n { bottomStrike: ['a', 'x', 'b'] }",
        "lineNumber": 34
      }
    ],
    "loc": {
      "start": {
        "line": 1253,
        "column": 0
      },
      "end": {
        "line": 1290,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1291,
          "column": 0
        },
        "end": {
          "line": 1307,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// For following examples, a strike symbol is defined as an equation element\neqn.addElements({\n  x: { symbol: 'strike', style: 'cross' }\n});"
      },
      {
        "description": "// BottomStrike full object definition\n{\n  bottomStrike: {\n    content: 'a',\n    symbol: 'x',\n    comment: 'b',\n    inSize: true,\n    commentSpace: 0,\n    scale: 1,\n    space: 0,\n  },\n},"
      },
      {
        "description": "// Top strike array example\n { topStrike: ['a', 'x', 'b'] }"
      },
      {
        "description": "// Bottom strike array examples\n { bottomStrike: ['a', 'x', 'b'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "strike symbol",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "comment",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " excludes the symbol and comment from\nthre resulting size of the equation phrase (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 2,
                      "column": 45,
                      "offset": 89
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 45,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 95
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 95
                    },
                    "end": {
                      "line": 2,
                      "column": 52,
                      "offset": 96
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 52,
                  "offset": 96
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 52,
              "offset": 96
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "top, right, bottom and left extension of symbol\nbeyond content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 17,
                      "offset": 64
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.03",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 17,
                      "offset": 64
                    },
                    "end": {
                      "line": 2,
                      "column": 23,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 23,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 24,
                      "offset": 71
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 24,
                  "offset": 71
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 24,
              "offset": 71
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 11,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "comment scale (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.6",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "commentSpace",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space from symbol to comment (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.03",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_StrikeComment",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "symbol",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "comment",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "inSize",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "commentSpace",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_StrikeComment",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_StrikeComment"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation padding options",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 25,
          "offset": 24
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "(`0`)",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "top"
      },
      {
        "title": "property",
        "description": "(`0`)",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "right"
      },
      {
        "title": "property",
        "description": "(`0`)",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottom"
      },
      {
        "title": "property",
        "description": "(`0`)",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "left"
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  pad: {\n    content: 'a',,\n    top: 0.1,\n    right: 0.2,\n    bottom: 0.3,\n    left: 0.4,\n  },\n},",
        "lineNumber": 8
      },
      {
        "title": "example",
        "description": "// Array example\n { pad: ['a', 0.1, 0.2, 0.3, 0.4] }",
        "lineNumber": 19
      }
    ],
    "loc": {
      "start": {
        "line": 1310,
        "column": 0
      },
      "end": {
        "line": 1332,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1333,
          "column": 0
        },
        "end": {
          "line": 1345,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Full object definition\n{\n  pad: {\n    content: 'a',,\n    top: 0.1,\n    right: 0.2,\n    bottom: 0.3,\n    left: 0.4,\n  },\n},"
      },
      {
        "description": "// Array example\n { pad: ['a', 0.1, 0.2, 0.3, 0.4] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "top",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "right",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottom",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "left",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    },
                    "end": {
                      "line": 1,
                      "column": 6,
                      "offset": 5
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Pad",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "top",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "right",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "bottom",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "left",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Pad",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Pad"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation matrix",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 16,
                  "offset": 15
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 16,
              "offset": 15
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 16,
          "offset": 15
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "(`[1, length-of-content]`)",
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "ArrayType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "order"
      },
      {
        "title": "property",
        "description": "left bracket symbol",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "left"
      },
      {
        "title": "property",
        "description": "Array of equation phrases\nwhere each element is a matrix element",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            ]
          }
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "right bracket symbol",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "right"
      },
      {
        "title": "property",
        "description": "scale of matrix elements (`0.7`)",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "cell size -\n`min` each cell is a rectangle with width equal to largest width in its\ncolumn, and height equal to largest height in its row - `max`\nall cells are a square with dimension equal to the largest dimension of the\nlargest cell - `point` all cells are a rectangle with width as point.x and\nheight as point.y - note - `max` and `point` only work with\n`yAlign`=`'middle'` (`'min'`)",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "max"
              },
              {
                "type": "StringLiteralType",
                "value": "min"
              },
              {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            ]
          }
        },
        "name": "fit"
      },
      {
        "title": "property",
        "description": "space between each cell\n(`[0.05, 0.05]`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "align cells in a row with the\ntext baseline, or middle of the cell (`baseline`)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              }
            ]
          }
        },
        "name": "yAlign"
      },
      {
        "title": "property",
        "description": "bracket options not including\nthe symbols (`{}`)",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "OBJ_EqnLayout_Bracket"
          }
        },
        "name": "brac"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "example",
        "description": "// The following examples use left and right square brackets as symbols:\neqn.addElements({\n  lb: { symbol: 'squareBracket', side: 'left' },\n  rb: { symbol: 'squareBracket', side: 'right' },\n});",
        "lineNumber": 24
      },
      {
        "title": "example",
        "description": "// Full object definition\n{\n  matrix: {\n    order: [2, 2],\n    left: 'lb',\n    content: ['a', 'b', 'c', 'd'],\n    right: 'rb',\n    scale: 1,\n    fit: 'min',\n    space: [0.1, 0.1],\n    yAlign: 'baseline',\n    brac: {\n      inSize: true,\n      insideSpace: 0.1,\n      outsideSpace: 0.1,\n      topSpace: 0.1,\n      bottomSpace: 0.1,\n      minContentHeight: null,\n      minContentDescent: null,\n      height: null,\n      descent: null,\n    },\n  },\n},",
        "lineNumber": 30
      },
      {
        "title": "example",
        "description": "// Array example\n { matrix: [[2, 2], 'lb', ['a', 'b', 'c', 'd'], 'rb'] }",
        "lineNumber": 55
      }
    ],
    "loc": {
      "start": {
        "line": 1347,
        "column": 0
      },
      "end": {
        "line": 1405,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1406,
          "column": 0
        },
        "end": {
          "line": 1428,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// The following examples use left and right square brackets as symbols:\neqn.addElements({\n  lb: { symbol: 'squareBracket', side: 'left' },\n  rb: { symbol: 'squareBracket', side: 'right' },\n});"
      },
      {
        "description": "// Full object definition\n{\n  matrix: {\n    order: [2, 2],\n    left: 'lb',\n    content: ['a', 'b', 'c', 'd'],\n    right: 'rb',\n    scale: 1,\n    fit: 'min',\n    space: [0.1, 0.1],\n    yAlign: 'baseline',\n    brac: {\n      inSize: true,\n      insideSpace: 0.1,\n      outsideSpace: 0.1,\n      topSpace: 0.1,\n      bottomSpace: 0.1,\n      minContentHeight: null,\n      minContentDescent: null,\n      height: null,\n      descent: null,\n    },\n  },\n},"
      },
      {
        "description": "// Array example\n { matrix: [[2, 2], 'lb', ['a', 'b', 'c', 'd'], 'rb'] }"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "order",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[1, length-of-content]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "ArrayType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "left",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "left bracket symbol",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "content",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of equation phrases\nwhere each element is a matrix element",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 64
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 39,
                  "offset": 64
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 39,
              "offset": 64
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "right",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "right bracket symbol",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale of matrix elements (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.7",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fit",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "cell size -\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 12
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "min",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 12
                    },
                    "end": {
                      "line": 2,
                      "column": 6,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " each cell is a rectangle with width equal to largest width in its\ncolumn, and height equal to largest height in its row - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 6,
                      "offset": 17
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 140
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "max",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 140
                    },
                    "end": {
                      "line": 3,
                      "column": 62,
                      "offset": 145
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\nall cells are a square with dimension equal to the largest dimension of the\nlargest cell - ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 62,
                      "offset": 145
                    },
                    "end": {
                      "line": 5,
                      "column": 16,
                      "offset": 237
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "point",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 16,
                      "offset": 237
                    },
                    "end": {
                      "line": 5,
                      "column": 23,
                      "offset": 244
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " all cells are a rectangle with width as point.x and\nheight as point.y - note - ",
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 23,
                      "offset": 244
                    },
                    "end": {
                      "line": 6,
                      "column": 28,
                      "offset": 324
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "max",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 28,
                      "offset": 324
                    },
                    "end": {
                      "line": 6,
                      "column": 33,
                      "offset": 329
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and ",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 33,
                      "offset": 329
                    },
                    "end": {
                      "line": 6,
                      "column": 38,
                      "offset": 334
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "point",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 38,
                      "offset": 334
                    },
                    "end": {
                      "line": 6,
                      "column": 45,
                      "offset": 341
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only work with\n",
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 45,
                      "offset": 341
                    },
                    "end": {
                      "line": 7,
                      "column": 1,
                      "offset": 357
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "yAlign",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 1,
                      "offset": 357
                    },
                    "end": {
                      "line": 7,
                      "column": 9,
                      "offset": 365
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 9,
                      "offset": 365
                    },
                    "end": {
                      "line": 7,
                      "column": 10,
                      "offset": 366
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'middle'",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 10,
                      "offset": 366
                    },
                    "end": {
                      "line": 7,
                      "column": 20,
                      "offset": 376
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " (",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 20,
                      "offset": 376
                    },
                    "end": {
                      "line": 7,
                      "column": 22,
                      "offset": 378
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'min'",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 22,
                      "offset": 378
                    },
                    "end": {
                      "line": 7,
                      "column": 29,
                      "offset": 385
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 29,
                      "offset": 385
                    },
                    "end": {
                      "line": 7,
                      "column": 30,
                      "offset": 386
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 7,
                  "column": 30,
                  "offset": 386
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 7,
              "column": 30,
              "offset": 386
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "max"
              },
              {
                "type": "StringLiteralType",
                "value": "min"
              },
              {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space between each cell\n(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 2,
                      "offset": 25
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0.05, 0.05]",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 2,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 39
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 17,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 17,
                  "offset": 40
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 17,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeParsablePoint"
          }
        }
      },
      {
        "title": "property",
        "name": "yAlign",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "align cells in a row with the\ntext baseline, or middle of the cell (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 68
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "baseline",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 68
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 78
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 49,
                      "offset": 78
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 50,
                  "offset": 79
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 50,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "brac",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "bracket options not including\nthe symbols (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "{}",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 14,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 18,
                      "offset": 47
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 18,
                      "offset": 47
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 19,
                  "offset": 48
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 19,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "OBJ_EqnLayout_Bracket"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 22,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Matrix",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "order",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "ArrayType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "number"
                    },
                    {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "left",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "content",
              "value": {
                "type": "NameExpression",
                "name": "TypeEquationPhrase"
              }
            },
            {
              "type": "FieldType",
              "key": "right",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fit",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "max"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "min"
                    },
                    {
                      "type": "NameExpression",
                      "name": "TypeParsablePoint"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "space",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "TypeParsablePoint"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "yAlign",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "StringLiteralType",
                      "value": "baseline"
                    },
                    {
                      "type": "StringLiteralType",
                      "value": "middle"
                    }
                  ]
                }
              }
            },
            {
              "type": "FieldType",
              "key": "brac",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "OBJ_EqnLayout_Bracket"
                }
              }
            },
            {
              "type": "FieldType",
              "key": "fullContentBounds",
              "value": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              }
            }
          ]
        },
        {
          "type": "ArrayType",
          "elements": [
            {
              "type": "NullableType",
              "expression": {
                "type": "ArrayType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  {
                    "type": "NameExpression",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "max"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "min"
                }
              ]
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "TypeParsablePoint"
              }
            },
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "baseline"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "middle"
                }
              ]
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Bracket"
              }
            },
            {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ]
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Matrix",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Matrix"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation annotation",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An annotation is an equation phrase ('annotation') which is laid out relative\nto another equation phrase ('content'). For example:",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 21
                },
                "end": {
                  "line": 4,
                  "column": 53,
                  "offset": 151
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 21
            },
            "end": {
              "line": 4,
              "column": 53,
              "offset": 151
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                 AAAA\n                 AAAA\n         CCCCCCCC\n         CCCCCCCC\n         CCCCCCCC\n         CCCCCCCC\n</pre>",
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 152
            },
            "end": {
              "line": 12,
              "column": 7,
              "offset": 280
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The options for defining how to annotate one equation phrase with another is\n",
              "position": {
                "start": {
                  "line": 14,
                  "column": 1,
                  "offset": 282
                },
                "end": {
                  "line": 15,
                  "column": 1,
                  "offset": 359
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "url": "TypeAnnotation",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "TypeAnnotation"
                }
              ],
              "position": {
                "start": {
                  "line": 15,
                  "column": 1,
                  "offset": 359
                },
                "end": {
                  "line": 15,
                  "column": 23,
                  "offset": 381
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 14,
              "column": 1,
              "offset": 282
            },
            "end": {
              "line": 15,
              "column": 23,
              "offset": 381
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Content can also be annotated with a glyph (that itself may also be\nannotated). The glyph can either encompass the content, or can be to the\ntop, bottom, left or right of the content",
              "position": {
                "start": {
                  "line": 17,
                  "column": 1,
                  "offset": 383
                },
                "end": {
                  "line": 19,
                  "column": 42,
                  "offset": 565
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 17,
              "column": 1,
              "offset": 383
            },
            "end": {
              "line": 19,
              "column": 42,
              "offset": 565
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                        Top Glyph\n                 GGGGGGGGGGGGGGGGGGGGGGG\n                 GGGGGGGGGGGGGGGGGGGGGGG     Encompassing Glyph\n                                           /\n                                         /\n       GGG       GGGGGGGGGGGGGGGGGGGGGGG        GGG\n       GGG       GGG                 GGG        GGG\n       GGG       GGG     CCCCCCC     GGG        GGG\nLeft   GGG       GGG     CCCCCCC     GGG        GGG   Right\nGlyph  GGG       GGG     CCCCCCC     GGG        GGG   Glyph\n       GGG       GGG                 GGG        GGG\n       GGG       GGGGGGGGGGGGGGGGGGGGGGG        GGG\n\n\n                 GGGGGGGGGGGGGGGGGGGGGGG\n                 GGGGGGGGGGGGGGGGGGGGGGG\n                      Bottom Glyph\n</pre>",
          "position": {
            "start": {
              "line": 21,
              "column": 1,
              "offset": 567
            },
            "end": {
              "line": 39,
              "column": 7,
              "offset": 1305
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 39,
          "column": 7,
          "offset": 1305
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 40,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "use for just one annotation",
        "lineNumber": 41,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeAnnotation"
          }
        },
        "name": "annotation"
      },
      {
        "title": "property",
        "description": "use for multiple annotations",
        "lineNumber": 42,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeAnnotation"
              }
            ]
          }
        },
        "name": "annotations"
      },
      {
        "title": "property",
        "description": "`true` means resulting size includes\nannotations (`true`)",
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "extend resulting equation phrase size by space on\ntop, right, bottom and left sides (`0`)",
        "lineNumber": 45,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "extend resulting equation phrase size by space\non top",
        "lineNumber": 47,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "extend resulting equation phrase size by\nspace on bottom",
        "lineNumber": 49,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "extend resulting equation phrase size by space\non left",
        "lineNumber": 51,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "leftSpace"
      },
      {
        "title": "property",
        "description": "extend resulting equation phrase size by\nspace on right",
        "lineNumber": 53,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "rightSpace"
      },
      {
        "title": "property",
        "description": "scale content (`1`)",
        "lineNumber": 55,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "contentScale"
      },
      {
        "title": "property",
        "description": "glyphs to annotate content with",
        "lineNumber": 56,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeGlyphs"
          }
        },
        "name": "glyphs"
      },
      {
        "title": "property",
        "description": "use full bounds of content,\noverriding any `inSize=false` properties in the content (`false`)",
        "lineNumber": 57,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "make the bounds of this phrase equal to\nthe full bounds of the content even if `fullContentBounds=false` and the\nbrackets only surround a portion of the content (`false`)",
        "lineNumber": 59,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "useFullBounds"
      },
      {
        "title": "example",
        "description": "// Simple annotation\n annotate: {\n   content: 'a',\n   annotation: {\n     content: 'b',\n     yPosition: 'top',\n     yAlign: 'bottom',\n     xPosition: 'right',\n     xAlign: 'left',\n   },\n },",
        "lineNumber": 62
      },
      {
        "title": "example",
        "description": "// Multiple Annotations\n annotate: {\n   content: 'a',\n   annotations: [\n     {\n       content: 'b',\n       xPosition: 'right',\n       yPosition: 'top',\n       xAlign: 'left',\n       yAlign: 'bottom',\n     },\n     {\n       content: 'c',\n       xPosition: 'right',\n       yPosition: 'bottom',\n       xAlign: 'left',\n       yAlign: 'top',\n     },\n   ],\n },",
        "lineNumber": 75
      },
      {
        "title": "example",
        "description": "// left glyph with annotation\neqn.addElements([\n  { bar: { symbol: 'bar', side: 'right' },\n])\neqn.addForms({\n  form1: {\n    annotate: {\n      content: 'a',\n      glyphs: {\n        left:{\n          symbol: 'bar',\n          overhang: 0.1,\n          annotation: {\n            content: 'bbb',\n            xPosition: 'right',\n            yPosition: 'bottom',\n            xAlign: 'left',\n            yAlign: 'middle',\n            scale: 0.5,\n          },\n        },\n      },\n    },\n  },\n});",
        "lineNumber": 96
      }
    ],
    "loc": {
      "start": {
        "line": 1717,
        "column": 0
      },
      "end": {
        "line": 1839,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1840,
          "column": 0
        },
        "end": {
          "line": 1854,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Simple annotation\n annotate: {\n   content: 'a',\n   annotation: {\n     content: 'b',\n     yPosition: 'top',\n     yAlign: 'bottom',\n     xPosition: 'right',\n     xAlign: 'left',\n   },\n },"
      },
      {
        "description": "// Multiple Annotations\n annotate: {\n   content: 'a',\n   annotations: [\n     {\n       content: 'b',\n       xPosition: 'right',\n       yPosition: 'top',\n       xAlign: 'left',\n       yAlign: 'bottom',\n     },\n     {\n       content: 'c',\n       xPosition: 'right',\n       yPosition: 'bottom',\n       xAlign: 'left',\n       yAlign: 'top',\n     },\n   ],\n },"
      },
      {
        "description": "// left glyph with annotation\neqn.addElements([\n  { bar: { symbol: 'bar', side: 'right' },\n])\neqn.addForms({\n  form1: {\n    annotate: {\n      content: 'a',\n      glyphs: {\n        left:{\n          symbol: 'bar',\n          overhang: 0.1,\n          annotation: {\n            content: 'bbb',\n            xPosition: 'right',\n            yPosition: 'bottom',\n            xAlign: 'left',\n            yAlign: 'middle',\n            scale: 0.5,\n          },\n        },\n      },\n    },\n  },\n});"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 40,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "annotation",
        "lineNumber": 41,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use for just one annotation",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeAnnotation"
          }
        }
      },
      {
        "title": "property",
        "name": "annotations",
        "lineNumber": 42,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use for multiple annotations",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeAnnotation"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 43,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " means resulting size includes\nannotations (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 50
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 14,
                      "offset": 50
                    },
                    "end": {
                      "line": 2,
                      "column": 20,
                      "offset": 56
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 20,
                      "offset": 56
                    },
                    "end": {
                      "line": 2,
                      "column": 21,
                      "offset": 57
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 21,
                  "offset": 57
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 21,
              "offset": 57
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 45,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "extend resulting equation phrase size by space on\ntop, right, bottom and left sides (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 36,
                      "offset": 85
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 36,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 88
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 88
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 89
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 40,
                  "offset": 89
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 40,
              "offset": 89
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 47,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "extend resulting equation phrase size by space\non top",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 7,
                      "offset": 53
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 7,
                  "offset": 53
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 7,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 49,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "extend resulting equation phrase size by\nspace on bottom",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 56
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 16,
                  "offset": 56
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 16,
              "offset": 56
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "leftSpace",
        "lineNumber": 51,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "extend resulting equation phrase size by space\non left",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 8,
                      "offset": 54
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 8,
                  "offset": 54
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 8,
              "offset": 54
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "rightSpace",
        "lineNumber": 53,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "extend resulting equation phrase size by\nspace on right",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 15,
                      "offset": 55
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 15,
                  "offset": 55
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 15,
              "offset": 55
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "contentScale",
        "lineNumber": 55,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "scale content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 16,
                      "offset": 15
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "glyphs",
        "lineNumber": 56,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "glyphs to annotate content with",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeGlyphs"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 57,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use full bounds of content,\noverriding any ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "inSize=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 16,
                      "offset": 43
                    },
                    "end": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " properties in the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 30,
                      "offset": 57
                    },
                    "end": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 58,
                      "offset": 85
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 92
                    },
                    "end": {
                      "line": 2,
                      "column": 66,
                      "offset": 93
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 66,
                  "offset": 93
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 66,
              "offset": 93
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "useFullBounds",
        "lineNumber": 59,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "make the bounds of this phrase equal to\nthe full bounds of the content even if ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "fullContentBounds=false",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and the\nbrackets only surround a portion of the content (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 65,
                      "offset": 104
                    },
                    "end": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 50,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 169
                    },
                    "end": {
                      "line": 3,
                      "column": 58,
                      "offset": 170
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 58,
                  "offset": 170
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 58,
              "offset": 170
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "OBJ_EqnLayout_Annotate",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "content",
          "value": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        {
          "type": "FieldType",
          "key": "annotation",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeAnnotation"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotations",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "TypeAnnotation"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "fullContentBounds",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "useFullBounds",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "glyphs",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeGlyphs"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "inSize",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "space",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "topSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "bottomSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "leftSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "rightSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "contentScale",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "OBJ_EqnLayout_Annotate",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "OBJ_EqnLayout_Annotate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An annotation's layout is defined by its ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "position",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 51,
                      "offset": 50
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "alignement",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 58,
                      "offset": 57
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".\nFor instance, an annotation at the top right of the content:",
              "position": {
                "start": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 130
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 61,
              "offset": 130
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                 AAAA\n                 AAAA\n         CCCCCCCC\n         CCCCCCCC\n         CCCCCCCC\n         CCCCCCCC\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 131
            },
            "end": {
              "line": 10,
              "column": 7,
              "offset": 259
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "has a ",
              "position": {
                "start": {
                  "line": 11,
                  "column": 1,
                  "offset": 260
                },
                "end": {
                  "line": 11,
                  "column": 7,
                  "offset": 266
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "position",
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 8,
                      "offset": 267
                    },
                    "end": {
                      "line": 11,
                      "column": 16,
                      "offset": 275
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 11,
                  "column": 7,
                  "offset": 266
                },
                "end": {
                  "line": 11,
                  "column": 17,
                  "offset": 276
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " relative to the content:",
              "position": {
                "start": {
                  "line": 11,
                  "column": 17,
                  "offset": 276
                },
                "end": {
                  "line": 11,
                  "column": 42,
                  "offset": 301
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 11,
              "column": 1,
              "offset": 260
            },
            "end": {
              "line": 11,
              "column": 42,
              "offset": 301
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "xPosition",
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 3,
                          "offset": 304
                        },
                        "end": {
                          "line": 12,
                          "column": 14,
                          "offset": 315
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": ",
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 14,
                          "offset": 315
                        },
                        "end": {
                          "line": 12,
                          "column": 16,
                          "offset": 317
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "'right'",
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 16,
                          "offset": 317
                        },
                        "end": {
                          "line": 12,
                          "column": 25,
                          "offset": 326
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 3,
                      "offset": 304
                    },
                    "end": {
                      "line": 12,
                      "column": 25,
                      "offset": 326
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 12,
                  "column": 1,
                  "offset": 302
                },
                "end": {
                  "line": 12,
                  "column": 25,
                  "offset": 326
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "yPosition",
                      "position": {
                        "start": {
                          "line": 13,
                          "column": 3,
                          "offset": 329
                        },
                        "end": {
                          "line": 13,
                          "column": 14,
                          "offset": 340
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": ",
                      "position": {
                        "start": {
                          "line": 13,
                          "column": 14,
                          "offset": 340
                        },
                        "end": {
                          "line": 13,
                          "column": 16,
                          "offset": 342
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "'top'",
                      "position": {
                        "start": {
                          "line": 13,
                          "column": 16,
                          "offset": 342
                        },
                        "end": {
                          "line": 13,
                          "column": 23,
                          "offset": 349
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 13,
                      "column": 3,
                      "offset": 329
                    },
                    "end": {
                      "line": 13,
                      "column": 23,
                      "offset": 349
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 13,
                  "column": 1,
                  "offset": 327
                },
                "end": {
                  "line": 13,
                  "column": 23,
                  "offset": 349
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 12,
              "column": 1,
              "offset": 302
            },
            "end": {
              "line": 13,
              "column": 23,
              "offset": 349
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "and an ",
              "position": {
                "start": {
                  "line": 15,
                  "column": 1,
                  "offset": 351
                },
                "end": {
                  "line": 15,
                  "column": 8,
                  "offset": 358
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "alignment",
                  "position": {
                    "start": {
                      "line": 15,
                      "column": 9,
                      "offset": 359
                    },
                    "end": {
                      "line": 15,
                      "column": 18,
                      "offset": 368
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 15,
                  "column": 8,
                  "offset": 358
                },
                "end": {
                  "line": 15,
                  "column": 19,
                  "offset": 369
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " relative to the annotation:",
              "position": {
                "start": {
                  "line": 15,
                  "column": 19,
                  "offset": 369
                },
                "end": {
                  "line": 15,
                  "column": 47,
                  "offset": 397
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 15,
              "column": 1,
              "offset": 351
            },
            "end": {
              "line": 15,
              "column": 47,
              "offset": 397
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "xAlign",
                      "position": {
                        "start": {
                          "line": 16,
                          "column": 3,
                          "offset": 400
                        },
                        "end": {
                          "line": 16,
                          "column": 11,
                          "offset": 408
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": ",
                      "position": {
                        "start": {
                          "line": 16,
                          "column": 11,
                          "offset": 408
                        },
                        "end": {
                          "line": 16,
                          "column": 13,
                          "offset": 410
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "'left'",
                      "position": {
                        "start": {
                          "line": 16,
                          "column": 13,
                          "offset": 410
                        },
                        "end": {
                          "line": 16,
                          "column": 21,
                          "offset": 418
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 16,
                      "column": 3,
                      "offset": 400
                    },
                    "end": {
                      "line": 16,
                      "column": 21,
                      "offset": 418
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 16,
                  "column": 1,
                  "offset": 398
                },
                "end": {
                  "line": 16,
                  "column": 21,
                  "offset": 418
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "yAlign",
                      "position": {
                        "start": {
                          "line": 17,
                          "column": 3,
                          "offset": 421
                        },
                        "end": {
                          "line": 17,
                          "column": 11,
                          "offset": 429
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": ",
                      "position": {
                        "start": {
                          "line": 17,
                          "column": 11,
                          "offset": 429
                        },
                        "end": {
                          "line": 17,
                          "column": 13,
                          "offset": 431
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "'bottom'",
                      "position": {
                        "start": {
                          "line": 17,
                          "column": 13,
                          "offset": 431
                        },
                        "end": {
                          "line": 17,
                          "column": 23,
                          "offset": 441
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 17,
                      "column": 3,
                      "offset": 421
                    },
                    "end": {
                      "line": 17,
                      "column": 23,
                      "offset": 441
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 17,
                  "column": 1,
                  "offset": 419
                },
                "end": {
                  "line": 17,
                  "column": 23,
                  "offset": 441
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 16,
              "column": 1,
              "offset": 398
            },
            "end": {
              "line": 17,
              "column": 23,
              "offset": 441
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In comparison, if ",
              "position": {
                "start": {
                  "line": 20,
                  "column": 1,
                  "offset": 444
                },
                "end": {
                  "line": 20,
                  "column": 19,
                  "offset": 462
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "yAlign",
              "position": {
                "start": {
                  "line": 20,
                  "column": 19,
                  "offset": 462
                },
                "end": {
                  "line": 20,
                  "column": 27,
                  "offset": 470
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " were equal to ",
              "position": {
                "start": {
                  "line": 20,
                  "column": 27,
                  "offset": 470
                },
                "end": {
                  "line": 20,
                  "column": 42,
                  "offset": 485
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "'top'",
              "position": {
                "start": {
                  "line": 20,
                  "column": 42,
                  "offset": 485
                },
                "end": {
                  "line": 20,
                  "column": 49,
                  "offset": 492
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ", then it would result in:",
              "position": {
                "start": {
                  "line": 20,
                  "column": 49,
                  "offset": 492
                },
                "end": {
                  "line": 20,
                  "column": 75,
                  "offset": 518
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 20,
              "column": 1,
              "offset": 444
            },
            "end": {
              "line": 20,
              "column": 75,
              "offset": 518
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n         CCCCCCCCAAAA\n         CCCCCCCCAAAA\n         CCCCCCCC\n         CCCCCCCC\n</pre>",
          "position": {
            "start": {
              "line": 21,
              "column": 1,
              "offset": 519
            },
            "end": {
              "line": 26,
              "column": 7,
              "offset": 611
            },
            "indent": [
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 26,
          "column": 7,
          "offset": 611
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 27,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "where number is\n the percentage width of the content (`'center'`)",
        "lineNumber": 28,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "xPosition"
      },
      {
        "title": "property",
        "description": "where number is the percentage height of the content (`'top'`)",
        "lineNumber": 30,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "yPosition"
      },
      {
        "title": "property",
        "description": "where number is\nthe percentage width of the annotation (`'center'`)",
        "lineNumber": 32,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "xAlign"
      },
      {
        "title": "property",
        "description": "where\nnumber is the percentage width of the annotation (`'bottom'`)",
        "lineNumber": 34,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "yAlign"
      },
      {
        "title": "property",
        "description": "annotation offset (`[0, 0]`)",
        "lineNumber": 36,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Point"
          }
        },
        "name": "offset"
      },
      {
        "title": "property",
        "description": "annotation scale (`1`)",
        "lineNumber": 37,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "(`true`)",
        "lineNumber": 38,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "inSize"
      },
      {
        "title": "property",
        "description": "(`false`)",
        "lineNumber": 39,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fullContentBounds"
      },
      {
        "title": "property",
        "description": "calling getBounds on a glyph can return a\nsuggested position, alignment and offset of an annotation with some name. If\nthis name is defined here, then `xPosition`, `yPosition`, `xAlign`, `yAlign`\nand `offset` will be overwritten with the glyph's suggestion.",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "reference"
      },
      {
        "title": "example",
        "description": "annotate: {\n   content: 'a',\n   annotation: {\n     content: 'b',\n     xPosition: 'right',\n     yPosition: 'top',\n     xAlign: 'left',\n     yAlign: 'bottom',\n     offset: [0, 0],\n     scale: 0.5,\n     inSize: true,\n     fullContentBounds: false,\n     // reference: 'root'       // only used when annotating special glyphs\n   },\n },",
        "lineNumber": 44
      }
    ],
    "loc": {
      "start": {
        "line": 1431,
        "column": 0
      },
      "end": {
        "line": 1491,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1492,
          "column": 0
        },
        "end": {
          "line": 1503,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "annotate: {\n   content: 'a',\n   annotation: {\n     content: 'b',\n     xPosition: 'right',\n     yPosition: 'top',\n     xAlign: 'left',\n     yAlign: 'bottom',\n     offset: [0, 0],\n     scale: 0.5,\n     inSize: true,\n     fullContentBounds: false,\n     // reference: 'root'       // only used when annotating special glyphs\n   },\n },"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 27,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "xPosition",
        "lineNumber": 28,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "where number is\n the percentage width of the content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 54
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'center'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 39,
                      "offset": 54
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 64
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 49,
                      "offset": 64
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 65
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 50,
                  "offset": 65
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 50,
              "offset": 65
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "yPosition",
        "lineNumber": 30,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "where number is the percentage height of the content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'top'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 55,
                      "offset": 54
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "end": {
                      "line": 1,
                      "column": 63,
                      "offset": 62
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 63,
              "offset": 62
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "xAlign",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "where number is\nthe percentage width of the annotation (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 56
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'center'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 56
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 52,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 52,
                  "offset": 67
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 52,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "yAlign",
        "lineNumber": 34,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "where\nnumber is the percentage width of the annotation (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 56
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'bottom'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 56
                    },
                    "end": {
                      "line": 2,
                      "column": 61,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 61,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 62,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 62,
                  "offset": 67
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 62,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "offset",
        "lineNumber": 36,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "annotation offset (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "[0, 0]",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Point"
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 37,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "annotation scale (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "inSize",
        "lineNumber": 38,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "fullContentBounds",
        "lineNumber": 39,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "reference",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "calling getBounds on a glyph can return a\nsuggested position, alignment and offset of an annotation with some name. If\nthis name is defined here, then ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 3,
                      "column": 33,
                      "offset": 151
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "xPosition",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 33,
                      "offset": 151
                    },
                    "end": {
                      "line": 3,
                      "column": 44,
                      "offset": 162
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 44,
                      "offset": 162
                    },
                    "end": {
                      "line": 3,
                      "column": 46,
                      "offset": 164
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "yPosition",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 46,
                      "offset": 164
                    },
                    "end": {
                      "line": 3,
                      "column": 57,
                      "offset": 175
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 57,
                      "offset": 175
                    },
                    "end": {
                      "line": 3,
                      "column": 59,
                      "offset": 177
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "xAlign",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 59,
                      "offset": 177
                    },
                    "end": {
                      "line": 3,
                      "column": 67,
                      "offset": 185
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 67,
                      "offset": 185
                    },
                    "end": {
                      "line": 3,
                      "column": 69,
                      "offset": 187
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "yAlign",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 69,
                      "offset": 187
                    },
                    "end": {
                      "line": 3,
                      "column": 77,
                      "offset": 195
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\nand ",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 77,
                      "offset": 195
                    },
                    "end": {
                      "line": 4,
                      "column": 5,
                      "offset": 200
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "offset",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 5,
                      "offset": 200
                    },
                    "end": {
                      "line": 4,
                      "column": 13,
                      "offset": 208
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " will be overwritten with the glyph's suggestion.",
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 13,
                      "offset": 208
                    },
                    "end": {
                      "line": 4,
                      "column": 62,
                      "offset": 257
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 62,
                  "offset": 257
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 62,
              "offset": 257
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeAnnotation",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "xPosition",
          "value": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        {
          "type": "FieldType",
          "key": "yPosition",
          "value": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        {
          "type": "FieldType",
          "key": "xAlign",
          "value": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "center"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        {
          "type": "FieldType",
          "key": "yAlign",
          "value": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "bottom"
              },
              {
                "type": "StringLiteralType",
                "value": "baseline"
              },
              {
                "type": "StringLiteralType",
                "value": "middle"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        {
          "type": "FieldType",
          "key": "offset",
          "value": {
            "type": "NameExpression",
            "name": "Point"
          }
        },
        {
          "type": "FieldType",
          "key": "scale",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "content",
          "value": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        {
          "type": "FieldType",
          "key": "inSize",
          "value": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        {
          "type": "FieldType",
          "key": "fullContentBounds",
          "value": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        {
          "type": "FieldType",
          "key": "reference",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeAnnotation",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeAnnotation"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A glyph can encompass (surround or overlay) an equation phrase (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "content",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 66,
                      "offset": 65
                    },
                    "end": {
                      "line": 1,
                      "column": 73,
                      "offset": 72
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "). The glyph\ncan also be annotated.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 74,
                  "offset": 73
                },
                "end": {
                  "line": 2,
                  "column": 23,
                  "offset": 108
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 23,
              "offset": 108
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "html",
          "value": "<pre>\n\n      gggggggggggggg\n      gggCCCCCCCCggg\n      gggCCCCCCCCggg\n      gggCCCCCCCCggg\n      gggCCCCCCCCggg\n      gggggggggggggg\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 109
            },
            "end": {
              "line": 12,
              "column": 7,
              "offset": 249
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 12,
          "column": 7,
          "offset": 249
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "use for one annotation only instead\nof property `annotations`",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeAnnotation"
          }
        },
        "name": "annotation"
      },
      {
        "title": "property",
        "description": "use for one or more\nannotations",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeAnnotation"
              }
            ]
          }
        },
        "name": "annotations"
      },
      {
        "title": "property",
        "description": "default space the glyph should extend beyond the\ntop, right, left and bottom sides of the content (`0`)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "space the glyph extends beyond the content top",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "space the glyph extends beyond the content\nright",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "rightSpace"
      },
      {
        "title": "property",
        "description": "space the glyph extends beyond the content\nbottom",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "space the glyph extends beyond the content\nleft",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "leftSpace"
      },
      {
        "title": "example",
        "description": "// surrounding content with a box glyph\nannotate: {\n  content: 'a',\n  glyphs: {\n    encompass: {\n      symbol: 'box',\n      space: 0.1,     // e.g. only, this will be overwritten by next props\n      topSpace: 0.1,\n      rightSpace: 0.1,\n      bottomSpace: 0.1,\n      leftSpace: 0.1,\n    },\n  },\n},",
        "lineNumber": 27
      }
    ],
    "loc": {
      "start": {
        "line": 1505,
        "column": 0
      },
      "end": {
        "line": 1547,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1548,
          "column": 0
        },
        "end": {
          "line": 1557,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// surrounding content with a box glyph\nannotate: {\n  content: 'a',\n  glyphs: {\n    encompass: {\n      symbol: 'box',\n      space: 0.1,     // e.g. only, this will be overwritten by next props\n      topSpace: 0.1,\n      rightSpace: 0.1,\n      bottomSpace: 0.1,\n      leftSpace: 0.1,\n    },\n  },\n},"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "annotation",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use for one annotation only instead\nof property ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 13,
                      "offset": 48
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "annotations",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 13,
                      "offset": 48
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 61
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeAnnotation"
          }
        }
      },
      {
        "title": "property",
        "name": "annotations",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use for one or more\nannotations",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 31
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 12,
                  "offset": 31
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 12,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeAnnotation"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default space the glyph should extend beyond the\ntop, right, left and bottom sides of the content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 99
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 51,
                      "offset": 99
                    },
                    "end": {
                      "line": 2,
                      "column": 54,
                      "offset": 102
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 54,
                      "offset": 102
                    },
                    "end": {
                      "line": 2,
                      "column": 55,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 55,
                  "offset": 103
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 55,
              "offset": 103
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space the glyph extends beyond the content top",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "rightSpace",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space the glyph extends beyond the content\nright",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 6,
                      "offset": 48
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 6,
                  "offset": 48
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 6,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space the glyph extends beyond the content\nbottom",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 7,
                      "offset": 49
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 7,
                  "offset": 49
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 7,
              "offset": 49
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "leftSpace",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "space the glyph extends beyond the content\nleft",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 5,
                      "offset": 47
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 5,
                  "offset": 47
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 5,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeEncompassGlyph",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "symbol",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotation",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeAnnotation"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotations",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "TypeAnnotation"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "space",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "topSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "rightSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "bottomSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "leftSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeEncompassGlyph",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEncompassGlyph"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A glyph can be to the left or right of an equation phrase (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "content",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ").\nThe glyph can also be annotated.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "end": {
                  "line": 2,
                  "column": 33,
                  "offset": 103
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 33,
              "offset": 103
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "html",
          "value": "<pre>\n\n      ggg   CCCCCCCC   ggg\n      ggg   CCCCCCCC   ggg\n      ggg   CCCCCCCC   ggg\n      ggg   CCCCCCCC   ggg\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 104
            },
            "end": {
              "line": 10,
              "column": 7,
              "offset": 226
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 10,
          "column": 7,
          "offset": 226
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "use for one annotation only instead\nof property `annotations`",
        "lineNumber": 12,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeAnnotation"
          }
        },
        "name": "annotation"
      },
      {
        "title": "property",
        "description": "use for one or more\nannotations",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeAnnotation"
              }
            ]
          }
        },
        "name": "annotations"
      },
      {
        "title": "property",
        "description": "horizontal space between glyph and content (`0`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "amount glyph extends above content top and\nbelow content bottom (`0`)",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "overhang"
      },
      {
        "title": "property",
        "description": "amount glyph extends above content top",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "topSpace"
      },
      {
        "title": "property",
        "description": "amount glyph extends below content bottom",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "bottomSpace"
      },
      {
        "title": "property",
        "description": "force min content height for auto\nglyph scaling",
        "lineNumber": 21,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "minContentHeight"
      },
      {
        "title": "property",
        "description": "force min content descent for auto\nglyph scaling",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "minContentDescent"
      },
      {
        "title": "property",
        "description": "force min content ascent for auto\nscaling",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "minContentAscent"
      },
      {
        "title": "property",
        "description": "force descent of glyph",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "descent"
      },
      {
        "title": "property",
        "description": "force height of glyph",
        "lineNumber": 28,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "height"
      },
      {
        "title": "property",
        "description": "offset glyph in y (`0`)",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "yOffset"
      },
      {
        "title": "property",
        "description": "`true` means only glyph is\nseparated from content by `space` and not annotations (false`)",
        "lineNumber": 30,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "annotationsOverContent"
      },
      {
        "title": "example",
        "description": "// Define glyph symbol\neqn.addElements({\n  lb: { symbol: 'squareBracket', side: 'left' },\n});\n // surrounding content with a box glyph\nannotate: {\n  content: 'a',\n  glyphs: {\n    left: {\n      symbol: 'lb',\n      space: 0.1,\n      overhang: 0.2,\n      topSpace: 0.1,\n      bottomSpace: 0.1,\n      minContentHeight: 0.3,\n      minContentDescent: 0.1,\n      descent: 0.1,\n      height: 0.3,\n      yOffset: 0,\n      annotationsOverContent: true,\n  },\n},",
        "lineNumber": 32
      }
    ],
    "loc": {
      "start": {
        "line": 1559,
        "column": 0
      },
      "end": {
        "line": 1614,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1615,
          "column": 0
        },
        "end": {
          "line": 1630,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Define glyph symbol\neqn.addElements({\n  lb: { symbol: 'squareBracket', side: 'left' },\n});\n // surrounding content with a box glyph\nannotate: {\n  content: 'a',\n  glyphs: {\n    left: {\n      symbol: 'lb',\n      space: 0.1,\n      overhang: 0.2,\n      topSpace: 0.1,\n      bottomSpace: 0.1,\n      minContentHeight: 0.3,\n      minContentDescent: 0.1,\n      descent: 0.1,\n      height: 0.3,\n      yOffset: 0,\n      annotationsOverContent: true,\n  },\n},"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "annotation",
        "lineNumber": 12,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use for one annotation only instead\nof property ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 13,
                      "offset": 48
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "annotations",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 13,
                      "offset": 48
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 61
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeAnnotation"
          }
        }
      },
      {
        "title": "property",
        "name": "annotations",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use for one or more\nannotations",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 31
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 12,
                  "offset": 31
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 12,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeAnnotation"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "horizontal space between glyph and content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "overhang",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount glyph extends above content top and\nbelow content bottom (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 23,
                      "offset": 65
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 23,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 68
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 26,
                      "offset": 68
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 69
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 27,
                  "offset": 69
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 27,
              "offset": 69
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "topSpace",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount glyph extends above content top",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "bottomSpace",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount glyph extends below content bottom",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "minContentHeight",
        "lineNumber": 21,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force min content height for auto\nglyph scaling",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 47
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 14,
                  "offset": 47
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 14,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "minContentDescent",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force min content descent for auto\nglyph scaling",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 48
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 14,
                  "offset": 48
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 14,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "minContentAscent",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force min content ascent for auto\nscaling",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 8,
                      "offset": 41
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 8,
                  "offset": 41
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 8,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "descent",
        "lineNumber": 27,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force descent of glyph",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "height",
        "lineNumber": 28,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force height of glyph",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "yOffset",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset glyph in y (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "annotationsOverContent",
        "lineNumber": 30,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " means only glyph is\nseparated from content by ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 53
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 53
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 60
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and not annotations (false`)",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 34,
                      "offset": 60
                    },
                    "end": {
                      "line": 2,
                      "column": 63,
                      "offset": 89
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 63,
                  "offset": 89
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 63,
              "offset": 89
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeLeftRightGlyph",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "symbol",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotation",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeAnnotation"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotations",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "TypeAnnotation"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "space",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "overhang",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "topSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "bottomSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "minContentHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "minContentDescent",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "minContentAscent",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "descent",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "height",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "yOffset",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotationsOverContent",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeLeftRightGlyph",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeLeftRightGlyph"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A glyph can be to the top or bottom of an equation phrase (",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "content",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ").\nThe glyph can also be annotated.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "end": {
                  "line": 2,
                  "column": 33,
                  "offset": 103
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 33,
              "offset": 103
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "html",
          "value": "<pre>\n\n         gggggggg\n         gggggggg\n\n         CCCCCCCC\n         CCCCCCCC\n         CCCCCCCC\n         CCCCCCCC\n\n         gggggggg\n         gggggggg\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 104
            },
            "end": {
              "line": 16,
              "column": 7,
              "offset": 264
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 16,
          "column": 7,
          "offset": 264
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "use for one annotation only instead\nof property `annotations`",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeAnnotation"
          }
        },
        "name": "annotation"
      },
      {
        "title": "property",
        "description": "use for one or more\nannotations",
        "lineNumber": 20,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeAnnotation"
              }
            ]
          }
        },
        "name": "annotations"
      },
      {
        "title": "property",
        "description": "vertical space between glyph and content (`0`)",
        "lineNumber": 22,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "space"
      },
      {
        "title": "property",
        "description": "amount glyph extends above content top and\nbelow content bottom (`0`)",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "overhang"
      },
      {
        "title": "property",
        "description": "force width of glyph",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "amount glyph extends beyond content left",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "leftSpace"
      },
      {
        "title": "property",
        "description": "amount glyph extends beyond content right",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "rightSpace"
      },
      {
        "title": "property",
        "description": "offset glyph in x (`0`)",
        "lineNumber": 28,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "xOffset"
      },
      {
        "title": "property",
        "description": "`true` means only glyph is\nseparated from content by `space` and not annotations (false`)",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "annotationsOverContent"
      },
      {
        "title": "example",
        "description": "// Define glyph symbol\neqn.addElements({\n  lb: { symbol: 'squareBracket', side: 'left' },\n});\n // surrounding content with a box glyph\nannotate: {\n  content: 'a',\n  glyphs: {\n    left: {\n      symbol: 'lb',\n      space: 0.1,\n      overhang: 0.2,\n      width: 0.3,\n      leftSpace: 0.1,\n      rightSpace: 0.1,\n      xOffset: 0,\n      annotationsOverContent: true,\n  },\n},",
        "lineNumber": 31
      }
    ],
    "loc": {
      "start": {
        "line": 1632,
        "column": 0
      },
      "end": {
        "line": 1683,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1684,
          "column": 0
        },
        "end": {
          "line": 1695,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Define glyph symbol\neqn.addElements({\n  lb: { symbol: 'squareBracket', side: 'left' },\n});\n // surrounding content with a box glyph\nannotate: {\n  content: 'a',\n  glyphs: {\n    left: {\n      symbol: 'lb',\n      space: 0.1,\n      overhang: 0.2,\n      width: 0.3,\n      leftSpace: 0.1,\n      rightSpace: 0.1,\n      xOffset: 0,\n      annotationsOverContent: true,\n  },\n},"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "annotation",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use for one annotation only instead\nof property ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 13,
                      "offset": 48
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "annotations",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 13,
                      "offset": 48
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 26,
                  "offset": 61
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 26,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeAnnotation"
          }
        }
      },
      {
        "title": "property",
        "name": "annotations",
        "lineNumber": 20,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use for one or more\nannotations",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 31
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 12,
                  "offset": 31
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 12,
              "offset": 31
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeAnnotation"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "space",
        "lineNumber": 22,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "vertical space between glyph and content (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "overhang",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount glyph extends above content top and\nbelow content bottom (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 23,
                      "offset": 65
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 23,
                      "offset": 65
                    },
                    "end": {
                      "line": 2,
                      "column": 26,
                      "offset": 68
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 26,
                      "offset": 68
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 69
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 27,
                  "offset": 69
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 27,
              "offset": 69
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force width of glyph",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "leftSpace",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount glyph extends beyond content left",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "rightSpace",
        "lineNumber": 27,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "amount glyph extends beyond content right",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "xOffset",
        "lineNumber": 28,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "offset glyph in x (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "end": {
                      "line": 1,
                      "column": 24,
                      "offset": 23
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "annotationsOverContent",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " means only glyph is\nseparated from content by ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 53
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "space",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 53
                    },
                    "end": {
                      "line": 2,
                      "column": 34,
                      "offset": 60
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " and not annotations (false`)",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 34,
                      "offset": 60
                    },
                    "end": {
                      "line": 2,
                      "column": 63,
                      "offset": 89
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 63,
                  "offset": 89
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 63,
              "offset": 89
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeTopBottomGlyph",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "symbol",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotation",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeAnnotation"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotations",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "TypeAnnotation"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "space",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "overhang",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "width",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "leftSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "rightSpace",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "xOffset",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "annotationsOverContent",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeTopBottomGlyph",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeTopBottomGlyph"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Object defining all the glyphs annotating some content.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 56,
                  "offset": 55
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 56,
              "offset": 55
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Multiple glyphs are ok, but only one per position.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 57
                },
                "end": {
                  "line": 3,
                  "column": 51,
                  "offset": 107
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 57
            },
            "end": {
              "line": 3,
              "column": 51,
              "offset": 107
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 51,
          "offset": 107
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEncompassGlyph"
          }
        },
        "name": "encompass"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeTopBottomGlyph"
          }
        },
        "name": "top"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeLeftRightGlyph"
          }
        },
        "name": "right"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeTopBottomGlyph"
          }
        },
        "name": "bottom"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeLeftRightGlyph"
          }
        },
        "name": "left"
      }
    ],
    "loc": {
      "start": {
        "line": 1697,
        "column": 0
      },
      "end": {
        "line": 1707,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 1708,
          "column": 0
        },
        "end": {
          "line": 1714,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "encompass",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEncompassGlyph"
          }
        }
      },
      {
        "title": "property",
        "name": "top",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeTopBottomGlyph"
          }
        }
      },
      {
        "title": "property",
        "name": "right",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeLeftRightGlyph"
          }
        }
      },
      {
        "title": "property",
        "name": "bottom",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeTopBottomGlyph"
          }
        }
      },
      {
        "title": "property",
        "name": "left",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeLeftRightGlyph"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeGlyphs",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "left",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeLeftRightGlyph"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "right",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeLeftRightGlyph"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "top",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeTopBottomGlyph"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "bottom",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeTopBottomGlyph"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "encompass",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeEncompassGlyph"
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeGlyphs",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeGlyphs"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Radical equation symbol used in ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "OBJ_EqnLayout_Root",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "OBJ_EqnLayout_Root"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 66,
              "offset": 65
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The radical symbol allows customization on how to draw the radical. Mostly\nit will not be needed, but for edge case equation layouts it may be useful.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 67
                },
                "end": {
                  "line": 4,
                  "column": 76,
                  "offset": 217
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 67
            },
            "end": {
              "line": 4,
              "column": 76,
              "offset": 217
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "html",
          "value": "<pre>\n\n  height\n  |\n  |\n  |_____________________________ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  A                             X|\n  |   startHeight              X |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   |                       X  |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   |    tickHeight        X   |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   |    |                X    |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   |____V____           X     |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   A    |    X         X      |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   |    |__X |X       X       |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   |    A |  | X     X        |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   |      |  |  X   X         |   CCCCCCCCCCCCCCCCCCCCCCC\n  |   |      |  |   X X          |   CCCCCCCCCCCCCCCCCCCCCCC\n  V___V______|__|____X           |\n             |  |    |           |\n             |  |    |           |\n  tickWidth >|--|<   |           |\n             |  |    |           |\n             |  |<-->|downWidth  |\n             |                   |\n             |<----------------->|\n                    startWidth\n</pre>",
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 219
            },
            "end": {
              "line": 32,
              "column": 7,
              "offset": 1269
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 32,
          "column": 7,
          "offset": 1269
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 34,
        "type": {
          "type": "StringLiteralType",
          "value": "radical"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 36,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "force width of content area (normally defined by content size)",
        "lineNumber": 37,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "force height of content area (normally defined by content size)",
        "lineNumber": 38,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "height"
      },
      {
        "title": "property",
        "description": "(`0.5`)",
        "lineNumber": 39,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "startWidth"
      },
      {
        "title": "property",
        "description": "(`0.5`)",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "startHeight"
      },
      {
        "title": "property",
        "description": "(`0.15`)",
        "lineNumber": 41,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NullableType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            },
            "prefix": true
          }
        },
        "name": "maxStartWidth"
      },
      {
        "title": "property",
        "description": "(`0.15`)",
        "lineNumber": 42,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NullableType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            },
            "prefix": true
          }
        },
        "name": "maxStartHeight"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "tickHeight"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 44,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "tickWidth"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 45,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "downWidth"
      },
      {
        "title": "property",
        "description": "`true` makes `startHeight`,\n`startWidth`, `tickHeight`, `tickWidth`, and `downWidth` a percentage of\nheight instead of absolute (`true`)",
        "lineNumber": 46,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "proportionalToHeight"
      },
      {
        "title": "property",
        "description": "lineWidth of down stroke (`2 x lineWidth`)",
        "lineNumber": 49,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth2"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 50,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 52,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets width of static symbol - `'first'` calculates and sets width\nbased on first use (`'first'`)",
        "lineNumber": 55,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticWidth"
      },
      {
        "title": "example",
        "description": "// Typical\neqn.addElements({\n  rad: {\n    symbol: 'radical',\n    color: [1, 0, 0, 1],\n  },\n});",
        "lineNumber": 58
      },
      {
        "title": "example",
        "description": "// All options\n eqn.addElements({\n   rad: {\n     symbol: 'radical',\n     color: [1, 0, 0, 1],\n     lineWidth: 0.01,\n     lineWidth2: 0.02,\n     width: 1.2,\n     height: 0.8,\n     startWidth: 0.04,\n     startHeight: 0.04,\n     tickHeight: 0.01,\n     tickWidth: 0.01,\n     downWidth: 0.01,\n     maxStartWidth: 0.03,\n     maxStartHeight: 0.03,\n     proportionalToHeight: false,\n     draw: 'dynamic',\n   },\n });",
        "lineNumber": 66
      }
    ],
    "loc": {
      "start": {
        "line": 438,
        "column": 0
      },
      "end": {
        "line": 525,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 526,
          "column": 0
        },
        "end": {
          "line": 543,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Typical\neqn.addElements({\n  rad: {\n    symbol: 'radical',\n    color: [1, 0, 0, 1],\n  },\n});"
      },
      {
        "description": "// All options\n eqn.addElements({\n   rad: {\n     symbol: 'radical',\n     color: [1, 0, 0, 1],\n     lineWidth: 0.01,\n     lineWidth2: 0.02,\n     width: 1.2,\n     height: 0.8,\n     startWidth: 0.04,\n     startHeight: 0.04,\n     tickHeight: 0.01,\n     tickWidth: 0.01,\n     downWidth: 0.01,\n     maxStartWidth: 0.03,\n     maxStartHeight: 0.03,\n     proportionalToHeight: false,\n     draw: 'dynamic',\n   },\n });"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 34,
        "type": {
          "type": "StringLiteralType",
          "value": "radical"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 36,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 37,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force width of content area (normally defined by content size)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 63,
                      "offset": 62
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 63,
              "offset": 62
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "height",
        "lineNumber": 38,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force height of content area (normally defined by content size)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 64,
                      "offset": 63
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 64,
                  "offset": 63
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 64,
              "offset": 63
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "startWidth",
        "lineNumber": 39,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "startHeight",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 8,
                  "offset": 7
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 8,
              "offset": 7
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "maxStartWidth",
        "lineNumber": 41,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.15",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NullableType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            },
            "prefix": true
          }
        }
      },
      {
        "title": "property",
        "name": "maxStartHeight",
        "lineNumber": 42,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.15",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NullableType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            },
            "prefix": true
          }
        }
      },
      {
        "title": "property",
        "name": "tickHeight",
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "tickWidth",
        "lineNumber": 44,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "downWidth",
        "lineNumber": 45,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "proportionalToHeight",
        "lineNumber": 46,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " makes ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "startHeight",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ",\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 28
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "startWidth",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 28
                    },
                    "end": {
                      "line": 2,
                      "column": 13,
                      "offset": 40
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 13,
                      "offset": 40
                    },
                    "end": {
                      "line": 2,
                      "column": 15,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "tickHeight",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 15,
                      "offset": 42
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 54
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 54
                    },
                    "end": {
                      "line": 2,
                      "column": 29,
                      "offset": 56
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "tickWidth",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 29,
                      "offset": 56
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ", and ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 46,
                      "offset": 73
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "downWidth",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 46,
                      "offset": 73
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 84
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " a percentage of\nheight instead of absolute (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 57,
                      "offset": 84
                    },
                    "end": {
                      "line": 3,
                      "column": 29,
                      "offset": 129
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 29,
                      "offset": 129
                    },
                    "end": {
                      "line": 3,
                      "column": 35,
                      "offset": 135
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 35,
                      "offset": 135
                    },
                    "end": {
                      "line": 3,
                      "column": 36,
                      "offset": 136
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 36,
                  "offset": 136
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 36,
              "offset": 136
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth2",
        "lineNumber": 49,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "lineWidth of down stroke (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "2 x lineWidth",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 50,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 52,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticWidth",
        "lineNumber": 55,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets width of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 75
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets width\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 49,
                      "offset": 75
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 122
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 122
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 131
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 131
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 132
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 132
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 132
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeRadical",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "width",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "height",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "startWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "startHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "proportionalToHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "maxStartWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          }
        },
        {
          "type": "FieldType",
          "key": "maxStartHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth2",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "tickWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "tickHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "downWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeRadical",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeRadical"
  },
  {
    "name": "Equation Symbols",
    "kind": "note",
    "description": {
      "type": "root",
      "children": [],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 1,
          "offset": 0
        }
      }
    },
    "path": [
      {
        "name": "Equation Symbols",
        "kind": "note"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "Equation Symbols"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Vinculum equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                         width\n      |<---------------------------------------->|\n      |                                          |\n      |                                          | ____\n      00000000000000000000000000000000000000000000   A\n      00000000000000000000000000000000000000000000   |  lineWidth\n      00000000000000000000000000000000000000000000 __V_\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 26
            },
            "end": {
              "line": 12,
              "column": 7,
              "offset": 405
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 12,
          "column": 7,
          "offset": 405
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 13,
        "type": {
          "type": "StringLiteralType",
          "value": "vinculum"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation color)",
        "lineNumber": 14,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 15,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "`'dynamic'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets width of static symbol - `'first'` calculates and sets width\nbased on first use (`'first'`)",
        "lineNumber": 18,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticWidth"
      },
      {
        "title": "example",
        "description": "eqn.addElements({\n  v: {\n    symbol: 'vinculum',\n    color: [1, 0, 0, 1],\n    lineWidth: 0.01,\n  },\n})",
        "lineNumber": 22
      }
    ],
    "loc": {
      "start": {
        "line": 53,
        "column": 0
      },
      "end": {
        "line": 83,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 84,
          "column": 0
        },
        "end": {
          "line": 90,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "eqn.addElements({\n  v: {\n    symbol: 'vinculum',\n    color: [1, 0, 0, 1],\n    lineWidth: 0.01,\n  },\n})"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 13,
        "type": {
          "type": "StringLiteralType",
          "value": "vinculum"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 14,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation color)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 15,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'dynamic'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 40
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 40
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 50
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 81
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 90
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 90
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 91
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 91
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 91
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticWidth",
        "lineNumber": 18,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets width of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 75
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets width\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 49,
                      "offset": 75
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 122
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 122
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 131
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 131
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 132
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 132
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 132
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 89,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeVinculum",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "static"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeVinculum",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeVinculum"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Box equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                                         width\n                |<--------------------------------------------------->|\n                |                                                     |\n                |                                                     |\n\n        ------- 0000000000000000000000000000000000000000000000000000000\n        A       0000000000000000000000000000000000000000000000000000000\n        |       0000                                               0000\n        |       0000                                               0000\n        |       0000                                               0000\n height |       0000                                               0000\n        |       0000                                               0000\n        |       0000                                               0000\n        |       0000                                               0000\n        |       0000                                               0000\n        |       0000000000000000000000000000000000000000000000000000000\n        V______ 0000000000000000000000000000000000000000000000000000000\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 21
            },
            "end": {
              "line": 22,
              "column": 7,
              "offset": 1162
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 22,
          "column": 7,
          "offset": 1162
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 24,
        "type": {
          "type": "StringLiteralType",
          "value": "box"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation color)",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "(`false`)",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "fill"
      },
      {
        "title": "property",
        "description": "force width instead of auto calculation",
        "lineNumber": 28,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "force height instead of auto calculationg",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "height"
      },
      {
        "title": "property",
        "description": "`'dynamic'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 30,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets width of static symbol - `'first'` calculates and sets width\nbased on first use",
        "lineNumber": 32,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticWidth"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use",
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "eqn.addElements({\n  b: {\n    symbol: 'box',\n    color: [1, 0, 0, 1],\n    lineWidth: 0.01,\n    fill: false,\n  },\n})",
        "lineNumber": 39
      }
    ],
    "loc": {
      "start": {
        "line": 92,
        "column": 0
      },
      "end": {
        "line": 140,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 141,
          "column": 0
        },
        "end": {
          "line": 150,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "eqn.addElements({\n  b: {\n    symbol: 'box',\n    color: [1, 0, 0, 1],\n    lineWidth: 0.01,\n    fill: false,\n  },\n})"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 24,
        "type": {
          "type": "StringLiteralType",
          "value": "box"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation color)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "fill",
        "lineNumber": 27,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 28,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force width instead of auto calculation",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "height",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force height instead of auto calculationg",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 30,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'dynamic'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 40
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 40
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 50
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 81
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 90
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 90
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 91
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 91
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 91
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticWidth",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets width of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 75
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets width\nbased on first use",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 49,
                      "offset": 75
                    },
                    "end": {
                      "line": 3,
                      "column": 19,
                      "offset": 120
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 19,
                  "offset": 120
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 19,
              "offset": 120
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 35,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 19,
                      "offset": 122
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 19,
                  "offset": 122
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 19,
              "offset": 122
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeBox",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "fill",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "width",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "height",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "static"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeBox",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeBox"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Arrow equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                            arrowWidth\n                        |<--------------->|\n                        |                 |\n                        |                 |\n                 -------|------- 0        |\n                 A      |      00000      |\n   arrowHeight   |      |     0000000     |\n                 |      |   00000000000   |\n                 V      | 000000000000000 |\n                 ------ 0000000000000000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              0000000\n                              |     |\n                              |     |\n                              |<--->|\n                             lineWidth\n</pre>",
          "position": {
            "start": {
              "line": 2,
              "column": 1,
              "offset": 22
            },
            "end": {
              "line": 33,
              "column": 7,
              "offset": 1230
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 33,
          "column": 7,
          "offset": 1230
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 34,
        "type": {
          "type": "StringLiteralType",
          "value": "arrow"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation color)",
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "(`'right'`)",
        "lineNumber": 36,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "up"
              },
              {
                "type": "StringLiteralType",
                "value": "down"
              },
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              }
            ]
          }
        },
        "name": "direction"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 37,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 38,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "arrowWidth"
      },
      {
        "title": "property",
        "description": "(`0.04`)",
        "lineNumber": 39,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "arrowHeight"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "`'dynamic'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 41,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "eqn.addElements({\n  a: {\n    symbol: 'arrow',\n    color: [1, 0, 0, 1],\n    direction: 'right'\n    lineWidth: 0.01,\n    arrowHeight: 0.02,\n    arrowWidth: 0.02,\n  },\n})",
        "lineNumber": 47
      }
    ],
    "loc": {
      "start": {
        "line": 152,
        "column": 0
      },
      "end": {
        "line": 210,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 211,
          "column": 0
        },
        "end": {
          "line": 219,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "eqn.addElements({\n  a: {\n    symbol: 'arrow',\n    color: [1, 0, 0, 1],\n    direction: 'right'\n    lineWidth: 0.01,\n    arrowHeight: 0.02,\n    arrowWidth: 0.02,\n  },\n})"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 34,
        "type": {
          "type": "StringLiteralType",
          "value": "arrow"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 35,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation color)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "direction",
        "lineNumber": 36,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'right'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "up"
              },
              {
                "type": "StringLiteralType",
                "value": "down"
              },
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 37,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "arrowWidth",
        "lineNumber": 38,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "arrowHeight",
        "lineNumber": 39,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.04",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 41,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'dynamic'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 40
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 40
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 50
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 50
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 81
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 81
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 90
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 90
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 91
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 91
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 91
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 43,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeArrow",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "direction",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "up"
                },
                {
                  "type": "StringLiteralType",
                  "value": "down"
                },
                {
                  "type": "StringLiteralType",
                  "value": "left"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "arrowHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "arrowWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "static"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeArrow",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeArrow"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Sum equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n         ---------- 00000000000000000000000000000000000\n         A            0000000                     000000\n         |              0000000                      000\n         |                0000000                      00\n         |                  0000000\n         |                    0000000\n         |                      0000000\n         |                        0000000\n         |                          0000000\n         |                            0000000\n         |                              0000000\n         |                                000000\n         |                                  000\n         |                                0000\n  height |                              0000\n         |                            0000   \\\n         |                          0000      \\\n         |                        0000         lineWidth\n         |                      0000\n         |                    0000\n         |                  0000\n         |                0000                          00\n         |              0000                          000|\n         |            0000                         000000|\n         V          000000000000000000000000000000000000 |\n         --------  000000000000000000000000000000000000  |\n                  |                                      |\n                  |                                      |\n                  |                 width                |\n                  |<------------------------------------>|\n</pre>",
          "position": {
            "start": {
              "line": 2,
              "column": 1,
              "offset": 20
            },
            "end": {
              "line": 33,
              "column": 7,
              "offset": 1531
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 33,
          "column": 7,
          "offset": 1531
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 34,
        "type": {
          "type": "StringLiteralType",
          "value": "sum"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation color)",
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "(`height * 0.88 / (25 * height + 15)`)",
        "lineNumber": 36,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "number of sides that make up serif curve (`5`)",
        "lineNumber": 37,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "sides"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 38,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "eqn.addElements({\n  s: {\n    symbol: 'sum',\n    color: [1, 0, 0, 1],\n    lineWidth: 0.01\n    sides: 5,\n  },\n})",
        "lineNumber": 44
      }
    ],
    "loc": {
      "start": {
        "line": 221,
        "column": 0
      },
      "end": {
        "line": 274,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 275,
          "column": 0
        },
        "end": {
          "line": 281,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "eqn.addElements({\n  s: {\n    symbol: 'sum',\n    color: [1, 0, 0, 1],\n    lineWidth: 0.01\n    sides: 5,\n  },\n})"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 34,
        "type": {
          "type": "StringLiteralType",
          "value": "sum"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 35,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation color)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 36,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "height * 0.88 / (25 * height + 15)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "sides",
        "lineNumber": 37,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of sides that make up serif curve (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 38,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeSum",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "sides",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "static"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeSum",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeSum"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Product equation symbol used in ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "OBJ_EqnLayout_ProdOf",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "OBJ_EqnLayout_ProdOf"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                                         width\n               |<--------------------------------------------------------->|\n               |                                                           |\n               |                                                           |\n               |                                                           |\n               |                          lineWidth                        |\n               |                            /                              |\n               |                           /                               |\n         ---- 00000000000000000000000000000000000000000000000000000000000000\n         A         000000000000000000000000000000000000000000000000000000\n         |           00000000000000000000000000000000000000000000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n height  |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |            00000000000                         00000000000\n         |           0000000000000                       00000000000000\n         V         00000000000000000                   000000000000000000\n         ----- 0000000000000000000000000           00000000000000000000000000\n</pre>",
          "position": {
            "start": {
              "line": 2,
              "column": 1,
              "offset": 67
            },
            "end": {
              "line": 38,
              "column": 7,
              "offset": 2582
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 38,
          "column": 7,
          "offset": 2582
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 39,
        "type": {
          "type": "StringLiteralType",
          "value": "prod"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation color)",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "(related to height)",
        "lineNumber": 41,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "number of sides that make up serif curve (`5`)",
        "lineNumber": 42,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "sides"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 45,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "eqn.addElements({\n  p: {\n    symbol: 'prod',\n    color: [1, 0, 0, 1],\n    lineWidth: 0.01\n    sides: 5,\n  },\n})",
        "lineNumber": 49
      }
    ],
    "loc": {
      "start": {
        "line": 283,
        "column": 0
      },
      "end": {
        "line": 341,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 342,
          "column": 0
        },
        "end": {
          "line": 348,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "eqn.addElements({\n  p: {\n    symbol: 'prod',\n    color: [1, 0, 0, 1],\n    lineWidth: 0.01\n    sides: 5,\n  },\n})"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 39,
        "type": {
          "type": "StringLiteralType",
          "value": "prod"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation color)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 41,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(related to height)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "sides",
        "lineNumber": 42,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of sides that make up serif curve (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 43,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 45,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeProd",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "sides",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "static"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeProd",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeProd"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Integral equation symbol used in ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "OBJ_EqnLayout_Integral",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "OBJ_EqnLayout_Integral"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "end": {
                  "line": 1,
                  "column": 70,
                  "offset": 69
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 70,
              "offset": 69
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n//     --------------------------------------------------   0000000\n//     A                                              000000011111111\n//     |                                         0000000   111111111111\n//     |                                       0000000    11111111111111\n//     |                                      0000000     11111111111111\n//     |                                     0000000       111111111111\n//     |                                   000000000         11111111\n//     |                                  000000000\n//     |                                 0000000000\n//     |    S curve gradient = k         000000000\n//     |                                0000000000\n//     |                                0000000000\n//     |                               00000000000\n//     |                              00000000000\n//     |                              000000000000\n//     |                             000000000000      lineWidth\n//   h |                     ------->000000000000<----------\n//     |                             000000000000\n//     |                             000000000000\n//     |                            000000000000\n//     |                             00000000000\n//     |                            00000000000\n//     |                            0000000000\n//     |                            0000000000\n//     |                            000000000\n//     |                           000000000\n//     |                          0000000000\n//     |      11111111           000000000\n//     |    111111111111       00000000\n//     |   11111111111111     0000000\n//     |   11111111111111   0000000\n//     |    111111111111   0000000\n//     V      111111110000000\n//     -------  0000000\n</pre>",
          "position": {
            "start": {
              "line": 2,
              "column": 1,
              "offset": 70
            },
            "end": {
              "line": 37,
              "column": 7,
              "offset": 1837
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 37,
          "column": 7,
          "offset": 1837
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 38,
        "type": {
          "type": "StringLiteralType",
          "value": "int"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation color)",
        "lineNumber": 39,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "(related to height)",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "number of sides that make up s curve (`30`)",
        "lineNumber": 41,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "sides"
      },
      {
        "title": "property",
        "description": "number of integral symbols (`1`)",
        "lineNumber": 42,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "num"
      },
      {
        "title": "property",
        "description": "`line` draws a circle through the\n symbols denoting a line integral (`generic`)",
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "line"
              },
              {
                "type": "StringLiteralType",
                "value": "generic"
              }
            ]
          }
        },
        "name": "type"
      },
      {
        "title": "property",
        "description": "width of s curve tip (related to lineWidth)",
        "lineNumber": 45,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "tipWidth"
      },
      {
        "title": "property",
        "description": "`false` to remove serifs (`true`)",
        "lineNumber": 46,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "serif"
      },
      {
        "title": "property",
        "description": "number of sides in serif circles (`10`)",
        "lineNumber": 47,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "serifSides"
      },
      {
        "title": "property",
        "description": "number of sides in line integral circle (`20`)",
        "lineNumber": 48,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineIntegralSides"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 50,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 52,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "eqn.addElements({\nint: {\n  symbol: 'int',\n  color: [0.95, 0, 0, 1],\n  lineWidth: 0.01,\n  sides: 20,\n  num: 2,\n  type: 'generic',\n  tipWidth: null,\n  serif: true,\n  serifSides: 10,\n  lineIntegralSides: 20,\n  draw: 'static',\n  staticHeight: 'first',\n},",
        "lineNumber": 56
      }
    ],
    "loc": {
      "start": {
        "line": 350,
        "column": 0
      },
      "end": {
        "line": 422,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 423,
          "column": 0
        },
        "end": {
          "line": 436,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "eqn.addElements({\nint: {\n  symbol: 'int',\n  color: [0.95, 0, 0, 1],\n  lineWidth: 0.01,\n  sides: 20,\n  num: 2,\n  type: 'generic',\n  tipWidth: null,\n  serif: true,\n  serifSides: 10,\n  lineIntegralSides: 20,\n  draw: 'static',\n  staticHeight: 'first',\n},"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 38,
        "type": {
          "type": "StringLiteralType",
          "value": "int"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 39,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation color)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(related to height)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "sides",
        "lineNumber": 41,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of sides that make up s curve (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "30",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "end": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 43,
                      "offset": 42
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "num",
        "lineNumber": 42,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of integral symbols (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "type",
        "lineNumber": 43,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "line",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " draws a circle through the\n symbols denoting a line integral (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 7,
                      "offset": 6
                    },
                    "end": {
                      "line": 2,
                      "column": 36,
                      "offset": 69
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "generic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 36,
                      "offset": 69
                    },
                    "end": {
                      "line": 2,
                      "column": 45,
                      "offset": 78
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 45,
                      "offset": 78
                    },
                    "end": {
                      "line": 2,
                      "column": 46,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 46,
                  "offset": 79
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 46,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "line"
              },
              {
                "type": "StringLiteralType",
                "value": "generic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "tipWidth",
        "lineNumber": 45,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "width of s curve tip (related to lineWidth)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 44,
                      "offset": 43
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "serif",
        "lineNumber": 46,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "false",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " to remove serifs (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "serifSides",
        "lineNumber": 47,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of sides in serif circles (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "10",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "lineIntegralSides",
        "lineNumber": 48,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of sides in line integral circle (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "20",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 50,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 52,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeIntegral",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "sides",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "tipWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "static"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "serif",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "num",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "type",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "line"
                },
                {
                  "type": "StringLiteralType",
                  "value": "generic"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "serifSides",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineIntegralSides",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeIntegral",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeIntegral"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Strike equation symbol used in ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "OBJ_EqnLayout_Strike",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "OBJ_EqnLayout_Strike"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "end": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 66,
                  "offset": 65
                },
                "end": {
                  "line": 1,
                  "column": 67,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 67,
              "offset": 66
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Four styles of strike symbol are available:",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 68
                },
                "end": {
                  "line": 3,
                  "column": 44,
                  "offset": 111
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 68
            },
            "end": {
              "line": 3,
              "column": 44,
              "offset": 111
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n\n\n         000         000\n           000     000\n             000 000\n               000                       0000000000000000\n             000 000\n           000     000\n         000         000\n              cross                         horizontal\n\n\n                     000                 000\n                   000                     000\n                 000                         000\n               000                             000\n             000                                 000\n           000                                     000\n         000                                         000\n            forward                        backward\n\n</pre>",
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 112
            },
            "end": {
              "line": 26,
              "column": 7,
              "offset": 789
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 26,
          "column": 7,
          "offset": 789
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 28,
        "type": {
          "type": "StringLiteralType",
          "value": "strike"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation default)",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "(`'cross'`)",
        "lineNumber": 30,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "cross"
              },
              {
                "type": "StringLiteralType",
                "value": "forward"
              },
              {
                "type": "StringLiteralType",
                "value": "back"
              },
              {
                "type": "StringLiteralType",
                "value": "horizontal"
              }
            ]
          }
        },
        "name": "style"
      },
      {
        "title": "property",
        "description": "(`0.015`)",
        "lineNumber": 31,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "force width of strike (normally defined by\ncontent size)",
        "lineNumber": 32,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "force height of strike (normally defined by\ncontent size)",
        "lineNumber": 34,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "height"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 36,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 38,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets width of static symbol - `'first'` calculates and sets width\nbased on first use (`'first'`)",
        "lineNumber": 41,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticWidth"
      },
      {
        "title": "example",
        "description": "// Typical\neqn.addElements({\n  s: { symbol: 'strike', style: 'forward' },\n});",
        "lineNumber": 44
      },
      {
        "title": "example",
        "description": "// All options\n eqn.addElements({\n   s: {\n     symbol: 'strike',\n     style: 'cross',\n     lineWidth: 0.01,\n     width: 0.5,\n     height: 0.5,\n     draw: 'static',\n     staticHeight: 'first',\n     staticWidth: 'first',\n   },\n });",
        "lineNumber": 49
      }
    ],
    "loc": {
      "start": {
        "line": 545,
        "column": 0
      },
      "end": {
        "line": 608,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 609,
          "column": 0
        },
        "end": {
          "line": 618,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Typical\neqn.addElements({\n  s: { symbol: 'strike', style: 'forward' },\n});"
      },
      {
        "description": "// All options\n eqn.addElements({\n   s: {\n     symbol: 'strike',\n     style: 'cross',\n     lineWidth: 0.01,\n     width: 0.5,\n     height: 0.5,\n     draw: 'static',\n     staticHeight: 'first',\n     staticWidth: 'first',\n   },\n });"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 28,
        "type": {
          "type": "StringLiteralType",
          "value": "strike"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation default)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "style",
        "lineNumber": 30,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'cross'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "cross"
              },
              {
                "type": "StringLiteralType",
                "value": "forward"
              },
              {
                "type": "StringLiteralType",
                "value": "back"
              },
              {
                "type": "StringLiteralType",
                "value": "horizontal"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 31,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.015",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force width of strike (normally defined by\ncontent size)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 56
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 14,
                  "offset": 56
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 14,
              "offset": 56
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "height",
        "lineNumber": 34,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force height of strike (normally defined by\ncontent size)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 57
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 14,
                  "offset": 57
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 14,
              "offset": 57
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 36,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 38,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticWidth",
        "lineNumber": 41,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets width of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 40,
                      "offset": 66
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 40,
                      "offset": 66
                    },
                    "end": {
                      "line": 2,
                      "column": 49,
                      "offset": 75
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets width\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 49,
                      "offset": 75
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 122
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 122
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 131
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 131
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 132
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 132
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 132
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeStrike",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "style",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "cross"
                },
                {
                  "type": "StringLiteralType",
                  "value": "forward"
                },
                {
                  "type": "StringLiteralType",
                  "value": "back"
                },
                {
                  "type": "StringLiteralType",
                  "value": "horizontal"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "width",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "height",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeStrike",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeStrike"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Bracket equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                   tipWidth\n                     ----->| |<---\n                           | |\n                           | |\n                           000\n                         0000\n                       00000\n                     000000\n                    000000\n                    000000\n       lineWidth   000000\n            ------>000000<---\n                   000000\n                   |000000\n                   |000000\n                   | 000000\n                   |   00000\n                   |     0000\n                   |       000\n                   |         |\n                   |         |\n                   |<------->|\n                      width\n</pre>",
          "position": {
            "start": {
              "line": 2,
              "column": 1,
              "offset": 24
            },
            "end": {
              "line": 26,
              "column": 7,
              "offset": 708
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 26,
          "column": 7,
          "offset": 708
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 28,
        "type": {
          "type": "StringLiteralType",
          "value": "bracket"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation default)",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "how to orient the\nbracket ('left')",
        "lineNumber": 30,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        },
        "name": "side"
      },
      {
        "title": "property",
        "description": "number of sides in bracket curve (`10`)",
        "lineNumber": 32,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "sides"
      },
      {
        "title": "property",
        "description": "(depends on height)",
        "lineNumber": 33,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "(depends on lineWidth)",
        "lineNumber": 34,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "tipWidth"
      },
      {
        "title": "property",
        "description": "force width bracket (normally depends on height)",
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 36,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 38,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'bracket', side: 'left' },\n});",
        "lineNumber": 41
      },
      {
        "title": "example",
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'bracket',\n     side: 'right',\n     sides: 20,\n     lineWidth: 0.01,\n     tipWidth: 0.05,\n     width: 0.5,\n     draw: 'static',\n     staticHeight: 'first',\n   },\n });",
        "lineNumber": 46
      }
    ],
    "loc": {
      "start": {
        "line": 620,
        "column": 0
      },
      "end": {
        "line": 680,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 681,
          "column": 0
        },
        "end": {
          "line": 690,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'bracket', side: 'left' },\n});"
      },
      {
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'bracket',\n     side: 'right',\n     sides: 20,\n     lineWidth: 0.01,\n     tipWidth: 0.05,\n     width: 0.5,\n     draw: 'static',\n     staticHeight: 'first',\n   },\n });"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 28,
        "type": {
          "type": "StringLiteralType",
          "value": "bracket"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation default)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "side",
        "lineNumber": 30,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "how to orient the\nbracket ('left')",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 17,
                      "offset": 34
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 17,
                  "offset": 34
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 17,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "sides",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of sides in bracket curve (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "10",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 33,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(depends on height)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "tipWidth",
        "lineNumber": 34,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(depends on lineWidth)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 35,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force width bracket (normally depends on height)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 36,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 38,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeBracket",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "side",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "left"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "bottom"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "sides",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "width",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "tipWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "static"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeBracket",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeBracket"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Angle bracket equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n                     width\n                  |<------->|\n                  |         |\n          --------|----- 0000\n          A       |     0000\n          |       |    0000\n          |       |   0000\n          |       |  0000\n          |         0000\n   height |        0000\n          |        0000\n          |         0000\n          |          0000\n          |           0000\n          |            0000\n          |             0000\n          V_____________ 0000\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 31
            },
            "end": {
              "line": 22,
              "column": 7,
              "offset": 509
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 22,
          "column": 7,
          "offset": 509
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 24,
        "type": {
          "type": "StringLiteralType",
          "value": "angleBracket"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation default)",
        "lineNumber": 25,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "how to orient the\nangle bracket ('left')",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        },
        "name": "side"
      },
      {
        "title": "property",
        "description": "(depends on height)",
        "lineNumber": 28,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "force width bracket (normally depends on height)",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 30,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 32,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'angleBracket', side: 'left' },\n});",
        "lineNumber": 35
      },
      {
        "title": "example",
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'angleBracket',\n     side: 'right',\n     lineWidth: 0.01,\n     width: 0.5,\n     draw: 'static',\n     staticHeight: 'first',\n   },\n });",
        "lineNumber": 40
      }
    ],
    "loc": {
      "start": {
        "line": 692,
        "column": 0
      },
      "end": {
        "line": 744,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 745,
          "column": 1
        },
        "end": {
          "line": 752,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'angleBracket', side: 'left' },\n});"
      },
      {
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'angleBracket',\n     side: 'right',\n     lineWidth: 0.01,\n     width: 0.5,\n     draw: 'static',\n     staticHeight: 'first',\n   },\n });"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 24,
        "type": {
          "type": "StringLiteralType",
          "value": "angleBracket"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 25,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation default)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "side",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "how to orient the\nangle bracket ('left')",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 23,
                      "offset": 40
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 23,
                  "offset": 40
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 23,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 28,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(depends on height)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force width bracket (normally depends on height)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 30,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeAngleBracket",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "side",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "left"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "bottom"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "width",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                },
                {
                  "type": "StringLiteralType",
                  "value": "static"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeAngleBracket",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeAngleBracket"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Brace equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n               width\n            |<------>|\n            |        |\n            |        |\n            |      000\n            |    000\n            |   000\n            |  0000\n            |  0000\n            |  0000\n            |  0000\n            |  000\n            | 000\n            000\n              000\n               000\n               0000\n               0000\n               0000\n               0000\n          - - -0000 - - - -\n         |      000        |\n         |       000       |\n         |         000     |\n          - - - - - - - - -\n                       \\\n                        \\\n                         \\\n     - - - - - - - - - - - - - - - - - - - - - - - - -\n    |       00000000000000                            |\n    |        00000000000000                           |\n    |          000000000000                 tipWidth  |\n    |            000000000000               |         |\n    |              000000000000             |         |\n    |                 0000000000000  _______V_        |\n    |                     00000000000                 |\n    |                         0000000_________        |\n    |                                       A         |\n     - - - - - - - - - - - - - - - - - - - - - - - - -\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 23
            },
            "end": {
              "line": 44,
              "column": 7,
              "offset": 1275
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 44,
          "column": 7,
          "offset": 1275
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 46,
        "type": {
          "type": "StringLiteralType",
          "value": "brace"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation default)",
        "lineNumber": 47,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "how to orient the\nbrace ('left')",
        "lineNumber": 48,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        },
        "name": "side"
      },
      {
        "title": "property",
        "description": "(depends on height)",
        "lineNumber": 50,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "(depends on lineWidth)",
        "lineNumber": 51,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "tipWidth"
      },
      {
        "title": "property",
        "description": "force width bracket (normally depends on height)",
        "lineNumber": 52,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "number of sides in curved sections (`10`)",
        "lineNumber": 53,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "sides"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 54,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 56,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'brace', side: 'left' },\n});",
        "lineNumber": 59
      },
      {
        "title": "example",
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'brace',\n     side: 'right',\n     lineWidth: 0.01,\n     tipWidth: 0.01,\n     width: 0.5,\n     draw: 'static',\n     staticHeight: 0.5,\n   },\n });",
        "lineNumber": 64
      }
    ],
    "loc": {
      "start": {
        "line": 754,
        "column": 0
      },
      "end": {
        "line": 831,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 832,
          "column": 0
        },
        "end": {
          "line": 841,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'brace', side: 'left' },\n});"
      },
      {
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'brace',\n     side: 'right',\n     lineWidth: 0.01,\n     tipWidth: 0.01,\n     width: 0.5,\n     draw: 'static',\n     staticHeight: 0.5,\n   },\n });"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 46,
        "type": {
          "type": "StringLiteralType",
          "value": "brace"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 47,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation default)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "side",
        "lineNumber": 48,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "how to orient the\nbrace ('left')",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 15,
                      "offset": 32
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 15,
                  "offset": 32
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 15,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 50,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(depends on height)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 20,
                      "offset": 19
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "tipWidth",
        "lineNumber": 51,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(depends on lineWidth)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 52,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "force width bracket (normally depends on height)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "sides",
        "lineNumber": 53,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of sides in curved sections (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "10",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 54,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 56,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeBrace",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "side",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "left"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "bottom"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "sides",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "width",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "tipWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                },
                {
                  "type": "StringLiteralType",
                  "value": "static"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeBrace",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeBrace"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Bar equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n\n       >| |<---- lineWidth\n        | |\n        | |\n        000\n        000\n        000\n        000\n        000\n        000\n        000\n        000\n        000\n        000\n        000\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 21
            },
            "end": {
              "line": 20,
              "column": 7,
              "offset": 218
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 20,
          "column": 7,
          "offset": 218
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 22,
        "type": {
          "type": "StringLiteralType",
          "value": "bar"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation default)",
        "lineNumber": 23,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "how to orient the\nbar ('left')",
        "lineNumber": 24,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        },
        "name": "side"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 26,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 27,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 29,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'bar', side: 'left' },\n});",
        "lineNumber": 32
      },
      {
        "title": "example",
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'bar',\n     side: 'right',\n     lineWidth: 0.01,\n     draw: 'static',\n     staticHeight: 0.5,\n   },\n });",
        "lineNumber": 37
      }
    ],
    "loc": {
      "start": {
        "line": 843,
        "column": 0
      },
      "end": {
        "line": 891,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 892,
          "column": 0
        },
        "end": {
          "line": 898,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'bar', side: 'left' },\n});"
      },
      {
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'bar',\n     side: 'right',\n     lineWidth: 0.01,\n     draw: 'static',\n     staticHeight: 0.5,\n   },\n });"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 22,
        "type": {
          "type": "StringLiteralType",
          "value": "bar"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 23,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation default)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "side",
        "lineNumber": 24,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "how to orient the\nbar ('left')",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 13,
                      "offset": 30
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 13,
                  "offset": 30
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 13,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 27,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 29,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeBar",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "side",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "left"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "bottom"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                },
                {
                  "type": "StringLiteralType",
                  "value": "static"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeBar",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeBar"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Square bracket equation symbol",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            },
            "indent": []
          }
        },
        {
          "type": "html",
          "value": "<pre>\n\n                           width\n                 |<--------------------->|\n                 |                       |\n           ___                              ____\n          A      0000000000000000000000000     A\n          |      0000000000000000000000000     | tipWidth\n          |      0000000000000000000000000  ___V\n          |      00000000\n          |      00000000\n          |      00000000\n          |      00000000\n height   |      00000000\n          |      00000000\n          |      00000000\n          |      00000000\n          |      00000000\n          |      00000000\n          |      0000000000000000000000000\n          |      0000000000000000000000000\n          V___   0000000000000000000000000\n\n                 |      |\n                 |      |\n                 |<---->|\n                line width\n\n</pre>",
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 32
            },
            "end": {
              "line": 31,
              "column": 7,
              "offset": 865
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 31,
          "column": 7,
          "offset": 865
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": null,
        "lineNumber": 33,
        "type": {
          "type": "StringLiteralType",
          "value": "bar"
        },
        "name": "symbol"
      },
      {
        "title": "property",
        "description": "(equation default)",
        "lineNumber": 34,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "how to orient the\nsquare bracket ('left')",
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        },
        "name": "side"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 37,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "lineWidth"
      },
      {
        "title": "property",
        "description": "(`0.01`)",
        "lineNumber": 38,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "tipWidth"
      },
      {
        "title": "property",
        "description": "(depends on lineWidth)",
        "lineNumber": 39,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "width"
      },
      {
        "title": "property",
        "description": "optional curved corner radius (`0`)",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "radius"
      },
      {
        "title": "property",
        "description": "number of sides in curve (`5`)",
        "lineNumber": 41,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "sides"
      },
      {
        "title": "property",
        "description": "`'static'` updates vertices on\nresize, `'static'` only changes scale transform (`dynamic`)",
        "lineNumber": 42,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        },
        "name": "draw"
      },
      {
        "title": "property",
        "description": "used when `draw`=`static`.\n`number` sets height of static symbol - `'first'` calculates and sets height\nbased on first use (`'first'`)",
        "lineNumber": 44,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        },
        "name": "staticHeight"
      },
      {
        "title": "example",
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'squareBracket', side: 'left' },\n});",
        "lineNumber": 47
      },
      {
        "title": "example",
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'squareBracket',\n     side: 'right',\n     lineWidth: 0.01,\n     tipWidth: 0.01,\n     width: 0.03\n     radius: 0.05,\n     sides: 10,\n     draw: 'static',\n     staticHeight: 0.5,\n   },\n });",
        "lineNumber": 52
      }
    ],
    "loc": {
      "start": {
        "line": 901,
        "column": 0
      },
      "end": {
        "line": 968,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 969,
          "column": 0
        },
        "end": {
          "line": 979,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationSymbols.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Typical\neqn.addElements({\n  lb: { symbol: 'squareBracket', side: 'left' },\n});"
      },
      {
        "description": "// All options\n eqn.addElements({\n   rb: {\n     symbol: 'squareBracket',\n     side: 'right',\n     lineWidth: 0.01,\n     tipWidth: 0.01,\n     width: 0.03\n     radius: 0.05,\n     sides: 10,\n     draw: 'static',\n     staticHeight: 0.5,\n   },\n });"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "symbol",
        "lineNumber": 33,
        "type": {
          "type": "StringLiteralType",
          "value": "bar"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 34,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(equation default)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "side",
        "lineNumber": 35,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "how to orient the\nsquare bracket ('left')",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 24,
                      "offset": 41
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 24,
                  "offset": 41
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 24,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "left"
              },
              {
                "type": "StringLiteralType",
                "value": "right"
              },
              {
                "type": "StringLiteralType",
                "value": "top"
              },
              {
                "type": "StringLiteralType",
                "value": "bottom"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "lineWidth",
        "lineNumber": 37,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "tipWidth",
        "lineNumber": 38,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0.01",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 2,
                      "offset": 1
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 9,
              "offset": 8
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "width",
        "lineNumber": 39,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "(depends on lineWidth)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 23,
                      "offset": 22
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "radius",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "optional curved corner radius (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 32,
                      "offset": 31
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "sides",
        "lineNumber": 41,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "number of sides in curve (",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "5",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "draw",
        "lineNumber": 42,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " updates vertices on\nresize, ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'static'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 39
                    },
                    "end": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " only changes scale transform (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 19,
                      "offset": 49
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dynamic",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 80
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 59,
                      "offset": 89
                    },
                    "end": {
                      "line": 2,
                      "column": 60,
                      "offset": 90
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 60,
                  "offset": 90
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 60,
              "offset": 90
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "static"
              },
              {
                "type": "StringLiteralType",
                "value": "dynamic"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "staticHeight",
        "lineNumber": 44,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "used when ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "draw",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "=",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "static",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "end": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 26,
                      "offset": 25
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "number",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " sets height of static symbol - ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 9,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 41,
                      "offset": 67
                    },
                    "end": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " calculates and sets height\nbased on first use (",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 50,
                      "offset": 76
                    },
                    "end": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "'first'",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 21,
                      "offset": 124
                    },
                    "end": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ")",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 30,
                      "offset": 133
                    },
                    "end": {
                      "line": 3,
                      "column": 31,
                      "offset": 134
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 31,
                  "offset": 134
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 31,
              "offset": 134
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "number"
              },
              {
                "type": "StringLiteralType",
                "value": "first"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeSquareBracket",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "side",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "left"
                },
                {
                  "type": "StringLiteralType",
                  "value": "right"
                },
                {
                  "type": "StringLiteralType",
                  "value": "top"
                },
                {
                  "type": "StringLiteralType",
                  "value": "bottom"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "lineWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "width",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "tipWidth",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "radius",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "sides",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "draw",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "dynamic"
                },
                {
                  "type": "StringLiteralType",
                  "value": "static"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "staticHeight",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "number"
                },
                {
                  "type": "StringLiteralType",
                  "value": "first"
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeSquareBracket",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeSquareBracket"
  },
  {
    "name": "Equation Form Types",
    "kind": "note",
    "description": {
      "type": "root",
      "children": [],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 1,
          "offset": 0
        }
      }
    },
    "path": [
      {
        "name": "Equation Form Types",
        "kind": "note"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "Equation Form Types"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An equation phrase is used to define an equation form. An equation phrase\ncan either be the entirety of the form definition, or a series of nested\nphrases.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 9,
                  "offset": 155
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 9,
              "offset": 155
            },
            "indent": [
              1,
              1
            ]
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "An object or array definition (e.g. ",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 4,
                          "offset": 160
                        },
                        "end": {
                          "line": 5,
                          "column": 40,
                          "offset": 196
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "OBJ_EqnLayout_Fraction",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "OBJ_EqnLayout_Fraction"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 40,
                          "offset": 196
                        },
                        "end": {
                          "line": 5,
                          "column": 76,
                          "offset": 232
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ")",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 76,
                          "offset": 232
                        },
                        "end": {
                          "line": 5,
                          "column": 77,
                          "offset": 233
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 4,
                      "offset": 160
                    },
                    "end": {
                      "line": 5,
                      "column": 77,
                      "offset": 233
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 157
                },
                "end": {
                  "line": 5,
                  "column": 77,
                  "offset": 233
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "A string that represents an equation element",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 4,
                          "offset": 237
                        },
                        "end": {
                          "line": 6,
                          "column": 48,
                          "offset": 281
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 4,
                      "offset": 237
                    },
                    "end": {
                      "line": 6,
                      "column": 48,
                      "offset": 281
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 234
                },
                "end": {
                  "line": 6,
                  "column": 48,
                  "offset": 281
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "An array of ",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 4,
                          "offset": 285
                        },
                        "end": {
                          "line": 7,
                          "column": 16,
                          "offset": 297
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "TypeEquationPhrase",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "TypeEquationPhrase"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 16,
                          "offset": 297
                        },
                        "end": {
                          "line": 7,
                          "column": 42,
                          "offset": 323
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 4,
                      "offset": 285
                    },
                    "end": {
                      "line": 7,
                      "column": 42,
                      "offset": 323
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 282
                },
                "end": {
                  "line": 7,
                  "column": 42,
                  "offset": 323
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 157
            },
            "end": {
              "line": 7,
              "column": 42,
              "offset": 323
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 42,
          "offset": 323
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": ":\nforms: {\n  form1: 'a'\n  form2: ['a', 'equals', 'b']\n  form3: [{\n    frac: {\n      numerator: 'a',\n      symbol: 'v',\n      denominator: '1'\n    },\n  }, 'equals', 'b'],\n  form4: [{ frac: ['a', 'v', '1'], 'equals', 'b'}],\n},",
        "lineNumber": 9
      }
    ],
    "loc": {
      "start": {
        "line": 52,
        "column": 0
      },
      "end": {
        "line": 74,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 75,
          "column": 0
        },
        "end": {
          "line": 106,
          "column": 27
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": ":\nforms: {\n  form1: 'a'\n  form2: ['a', 'equals', 'b']\n  form3: [{\n    frac: {\n      numerator: 'a',\n      symbol: 'v',\n      denominator: '1'\n    },\n  }, 'equals', 'b'],\n  form4: [{ frac: ['a', 'v', '1'], 'equals', 'b'}],\n},"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeEquationPhrase",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "NameExpression",
          "name": "string"
        },
        {
          "type": "NameExpression",
          "name": "number"
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "frac",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Fraction"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "strike",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Strike"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "box",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Box"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "root",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Root"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "brac",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Bracket"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "sub",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Subcript"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "sup",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Superscript"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "supSub",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_SuperscriptSubscript"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "topBar",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Bar"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "bottomBar",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Bar"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "annotate",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Annotate"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "topComment",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Comment"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "bottomComment",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Comment"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "pad",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Pad"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "bar",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Bar"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "scale",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Scale"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "container",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Container"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "matrix",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Matrix"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "int",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_Integral"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "sumOf",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_SumOf"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "prodOf",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_ProdOf"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "topStrike",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_StrikeComment"
              }
            }
          ]
        },
        {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "bottomStrike",
              "value": {
                "type": "NameExpression",
                "name": "OBJ_EqnLayout_StrikeComment"
              }
            }
          ]
        },
        {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Array"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            }
          ]
        },
        {
          "type": "NameExpression",
          "name": "DiagramElementPrimitive"
        },
        {
          "type": "NameExpression",
          "name": "DiagramElementCollection"
        },
        {
          "type": "NameExpression",
          "name": "Elements"
        },
        {
          "type": "NameExpression",
          "name": "Element"
        },
        {
          "type": "NameExpression",
          "name": "BaseAnnotationFunction"
        }
      ]
    },
    "path": [
      {
        "name": "TypeEquationPhrase",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEquationPhrase"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Defines how to align a form",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 28,
          "offset": 27
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 71,
        "column": 0
      },
      "end": {
        "line": 73,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 74,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "fixTo",
        "lineNumber": 75,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "DiagramElementPrimitive"
            },
            {
              "type": "NameExpression",
              "name": "DiagramElementCollection"
            },
            {
              "type": "NameExpression",
              "name": "Point"
            }
          ]
        }
      },
      {
        "title": "property",
        "name": "xAlign",
        "lineNumber": 76,
        "type": {
          "type": "NameExpression",
          "name": "TypeHAlign"
        }
      },
      {
        "title": "property",
        "name": "yAlign",
        "lineNumber": 77,
        "type": {
          "type": "NameExpression",
          "name": "TypeVAlign"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeFormAlignment",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "fixTo",
          "value": {
            "type": "UnionType",
            "elements": [
              {
                "type": "NameExpression",
                "name": "DiagramElementPrimitive"
              },
              {
                "type": "NameExpression",
                "name": "DiagramElementCollection"
              },
              {
                "type": "NameExpression",
                "name": "Point"
              }
            ]
          }
        },
        {
          "type": "FieldType",
          "key": "xAlign",
          "value": {
            "type": "NameExpression",
            "name": "TypeHAlign"
          }
        },
        {
          "type": "FieldType",
          "key": "yAlign",
          "value": {
            "type": "NameExpression",
            "name": "TypeVAlign"
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeFormAlignment",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeFormAlignment"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Duration and translation options for form animation",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 52,
          "offset": 51
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "in seconds",
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "duration"
      },
      {
        "title": "property",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Object"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeFormTranslationProperties"
              }
            ]
          }
        },
        "name": "translation"
      },
      {
        "title": "example",
        "description": "// for an equation with two of its elements named 'a' and 'b'\n{\n  duration: 1,\n  translation: {\n    a: {\n      direction: 'up',\n      style: 'curved',\n      mag: 0.5,\n    },\n    b: {\n      direction: 'down',\n      style: 'curved',\n      mag: 0.2,\n    },\n  },\n}\n// Note, not all elements need to be defined - only those that need a custom\nduration or shouldn't have a linear path",
        "lineNumber": 5
      }
    ],
    "loc": {
      "start": {
        "line": 95,
        "column": 0
      },
      "end": {
        "line": 119,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 120,
          "column": 0
        },
        "end": {
          "line": 125,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// for an equation with two of its elements named 'a' and 'b'\n{\n  duration: 1,\n  translation: {\n    a: {\n      direction: 'up',\n      style: 'curved',\n      mag: 0.5,\n    },\n    b: {\n      direction: 'down',\n      style: 'curved',\n      mag: 0.2,\n    },\n  },\n}\n// Note, not all elements need to be defined - only those that need a custom\nduration or shouldn't have a linear path"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "duration",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "in seconds",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "translation",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Object"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "TypeFormTranslationProperties"
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeFormAnimationProperties",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "duration",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          }
        },
        {
          "type": "FieldType",
          "key": "translation",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "RecordType",
              "fields": []
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeFormAnimationProperties",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeFormAnimationProperties"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Form translation properties",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 28,
          "offset": 27
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "element should move in a straight\nline, or through a curve. Default: `\"linear\"`",
        "lineNumber": 3,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "curved"
            },
            {
              "type": "StringLiteralType",
              "value": "linear"
            }
          ]
        },
        "name": "style"
      },
      {
        "title": "property",
        "description": "curve only - element should move\nthrough an up or down curve",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "up"
              },
              {
                "type": "StringLiteralType",
                "value": "down"
              }
            ]
          }
        },
        "name": "direction"
      },
      {
        "title": "property",
        "description": "the magnitude of the curve",
        "lineNumber": 7,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "mag"
      }
    ],
    "loc": {
      "start": {
        "line": 80,
        "column": 0
      },
      "end": {
        "line": 88,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 89,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "style",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "element should move in a straight\nline, or through a curve. Default: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 36,
                      "offset": 69
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "\"linear\"",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 36,
                      "offset": 69
                    },
                    "end": {
                      "line": 2,
                      "column": 46,
                      "offset": 79
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 46,
                  "offset": 79
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 46,
              "offset": 79
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "StringLiteralType",
              "value": "curved"
            },
            {
              "type": "StringLiteralType",
              "value": "linear"
            }
          ]
        }
      },
      {
        "title": "property",
        "name": "direction",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "curve only - element should move\nthrough an up or down curve",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 28,
                      "offset": 60
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 28,
                  "offset": 60
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 28,
              "offset": 60
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "up"
              },
              {
                "type": "StringLiteralType",
                "value": "down"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "mag",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the magnitude of the curve",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeFormTranslationProperties",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "style",
          "value": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "curved"
              },
              {
                "type": "StringLiteralType",
                "value": "linear"
              }
            ]
          }
        },
        {
          "type": "FieldType",
          "key": "direction",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "up"
                },
                {
                  "type": "StringLiteralType",
                  "value": "down"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "mag",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeFormTranslationProperties",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeFormTranslationProperties"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In mathematics, an equation form is a specific arrangement of an equation's\nterms and operators. Different forms will have different arrangements, that\nthat can be achieved by performing a series of operations to both sides of\nthe equation.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 14,
                  "offset": 240
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 14,
              "offset": 240
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "For instance, the equation:",
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 242
                },
                "end": {
                  "line": 6,
                  "column": 28,
                  "offset": 269
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 242
            },
            "end": {
              "line": 6,
              "column": 28,
              "offset": 269
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "a + b = c",
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 271
                },
                "end": {
                  "line": 8,
                  "column": 10,
                  "offset": 280
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 8,
              "column": 1,
              "offset": 271
            },
            "end": {
              "line": 8,
              "column": 10,
              "offset": 280
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "can be rearranged to a different form:",
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 282
                },
                "end": {
                  "line": 10,
                  "column": 39,
                  "offset": 320
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 10,
              "column": 1,
              "offset": 282
            },
            "end": {
              "line": 10,
              "column": 39,
              "offset": 320
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "a = c - b",
              "position": {
                "start": {
                  "line": 12,
                  "column": 1,
                  "offset": 322
                },
                "end": {
                  "line": 12,
                  "column": 10,
                  "offset": 331
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 12,
              "column": 1,
              "offset": 322
            },
            "end": {
              "line": 12,
              "column": 10,
              "offset": 331
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "From the diagram's perspective, a form is a specific layout of equation\nelements.",
              "position": {
                "start": {
                  "line": 14,
                  "column": 1,
                  "offset": 333
                },
                "end": {
                  "line": 15,
                  "column": 10,
                  "offset": 414
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 14,
              "column": 1,
              "offset": 333
            },
            "end": {
              "line": 15,
              "column": 10,
              "offset": 414
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This object defines a how the elements are laid out, what properties the\nelements have, and some animation properties for when animating to this form.",
              "position": {
                "start": {
                  "line": 17,
                  "column": 1,
                  "offset": 416
                },
                "end": {
                  "line": 18,
                  "column": 78,
                  "offset": 566
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 17,
              "column": 1,
              "offset": 416
            },
            "end": {
              "line": 18,
              "column": 78,
              "offset": 566
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In the ",
              "position": {
                "start": {
                  "line": 20,
                  "column": 1,
                  "offset": 568
                },
                "end": {
                  "line": 20,
                  "column": 8,
                  "offset": 575
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "Equation",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Equation"
                }
              ],
              "position": {
                "start": {
                  "line": 20,
                  "column": 8,
                  "offset": 575
                },
                "end": {
                  "line": 20,
                  "column": 24,
                  "offset": 591
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " object, forms are defined with form names, and\nsubForm names. Most of the time, the subForm name can be ignored.\nHowever, it is useful when dealing with units. Sometimes you will have a\nseries of forms you want to animate through, that will be slightly different\ndepending on the units (for example degrees vs radians). Defining one subForm\nas degrees, and a second as radians allows switching between subForms without\ncomplicating the overall equation navigation logic.",
              "position": {
                "start": {
                  "line": 20,
                  "column": 24,
                  "offset": 591
                },
                "end": {
                  "line": 26,
                  "column": 52,
                  "offset": 1062
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 20,
              "column": 1,
              "offset": 568
            },
            "end": {
              "line": 26,
              "column": 52,
              "offset": 1062
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "See the examples below for how to define subForms.",
              "position": {
                "start": {
                  "line": 28,
                  "column": 1,
                  "offset": 1064
                },
                "end": {
                  "line": 28,
                  "column": 51,
                  "offset": 1114
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 28,
              "column": 1,
              "offset": 1064
            },
            "end": {
              "line": 28,
              "column": 51,
              "offset": 1114
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "link",
              "url": "Equation#addForms",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Equation#addForms"
                }
              ],
              "position": {
                "start": {
                  "line": 30,
                  "column": 1,
                  "offset": 1116
                },
                "end": {
                  "line": 30,
                  "column": 26,
                  "offset": 1141
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 30,
                  "column": 26,
                  "offset": 1141
                },
                "end": {
                  "line": 30,
                  "column": 27,
                  "offset": 1142
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 30,
              "column": 1,
              "offset": 1116
            },
            "end": {
              "line": 30,
              "column": 27,
              "offset": 1142
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 30,
          "column": 27,
          "offset": 1142
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "the equation phrase of the form\ndefines how the elements are laid out",
        "lineNumber": 32,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        "name": "content"
      },
      {
        "title": "property",
        "description": "a scaling factor for this form",
        "lineNumber": 34,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "how the Equation's position is aligned with\nthis form",
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAlignment"
          }
        },
        "name": "alignment"
      },
      {
        "title": "property",
        "description": "subForm name - default: `\"base\"`",
        "lineNumber": 37,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "subForm"
      },
      {
        "title": "property",
        "description": "a description associated with this form -\nused in equation navigator elements (@EquationNavigator)",
        "lineNumber": 38,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "description"
      },
      {
        "title": "property",
        "description": "string modifiers for the description",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "object"
          }
        },
        "name": "modifiers"
      },
      {
        "title": "property",
        "description": "form animation\nproperties if animating forward from the previous form in a formSeries",
        "lineNumber": 41,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAnimationProperties"
          }
        },
        "name": "fromPrev"
      },
      {
        "title": "property",
        "description": "form animation\nproperties if animating backward from the next form in a formSeries",
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAnimationProperties"
          }
        },
        "name": "fromNext"
      },
      {
        "title": "property",
        "description": "animation move duration\n (fromNext and fromPrev are prioritized over this)",
        "lineNumber": 45,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAnimationProperties"
          }
        },
        "name": "duration"
      },
      {
        "title": "property",
        "description": "animation move\nstyle (fromNext and fromPrev are prioritized over this)",
        "lineNumber": 47,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormTranslationProperties"
          }
        },
        "name": "translation"
      },
      {
        "title": "property",
        "description": "properties to set in the equation element\n(@DiagramElementPrimitive) when this form is shown",
        "lineNumber": 49,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "object"
          }
        },
        "name": "elementMods"
      },
      {
        "title": "example",
        "description": "// Simple form definition of two different forms of the same equation and one\n// of the elements is colored blue in one form and red in the other\nforms: {\n  form1: {\n    content: ['a', 'plus', 'b', 'equals', 'c'],\n    elementMods: {\n      'a': { color: [0, 0, 1, 1] },\n    }\n  },\n  form2: {\n    content: ['a', 'equals', 'c', 'minus', 'b'],\n    elementMods: {\n      'a': { color: [1, 0, 0, 1] },\n    }\n  },\n}",
        "lineNumber": 52
      },
      {
        "title": "example",
        "description": "// Example using subForms all defined at once\nforms: {\n  form1: {\n    deg: ['a', 'deg'],\n    rad: ['a', 'rad'],\n  },\n}",
        "lineNumber": 70
      },
      {
        "title": "example",
        "description": "// Example using subForms all defined separately\nconst eqn = new Equation();\neqn.addForms({\n  deg: {\n    content: ['a', 'deg'],\n    subForm:'deg',\n  }\n});\neqn.addForms({\n  rad: {\n    content: ['a', 'rad'],\n    subForm:'rad',\n  }\n});",
        "lineNumber": 79
      },
      {
        "title": "example",
        "description": "// Example showing all form options\nforms: {\n  form1: {\n    content: ['a', 'b', 'c'],\n    subForm: 'deg',\n    scale: 1.2,\n    alignment: {\n      fixTo: 'b',\n      xAlign: 'center',\n      yAlign: 'bottom',\n    },\n    description: '|Form| 1 |description|',\n    modifiers: {\n      Form: html.highlight([1, 0, 0, 0]),\n    },\n    elementMods: {\n      a: {\n        color: color1,\n        isTouchable: true,\n      },\n    },\n    duration: 1,\n    translation: {\n      a: {\n        style: 'curved',\n        direction: 'up',\n        mag: 0.95,\n      },\n      b: ['curved', 'down', 0.45],\n    },\n    fromPrev: {\n      duration: null,\n      translation: {\n        a: ['curved', 'down', 0.2],\n        b: ['curved', 'down', 0.2],\n      },\n    },\n    fromNext: {\n      duration: 2,\n      translation: {\n        a: ['curved', 'down', 0.2],\n        b: ['curved', 'down', 0.2],\n      },\n    },\n  },\n}",
        "lineNumber": 94
      }
    ],
    "loc": {
      "start": {
        "line": 135,
        "column": 0
      },
      "end": {
        "line": 276,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 277,
          "column": 0
        },
        "end": {
          "line": 293,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Simple form definition of two different forms of the same equation and one\n// of the elements is colored blue in one form and red in the other\nforms: {\n  form1: {\n    content: ['a', 'plus', 'b', 'equals', 'c'],\n    elementMods: {\n      'a': { color: [0, 0, 1, 1] },\n    }\n  },\n  form2: {\n    content: ['a', 'equals', 'c', 'minus', 'b'],\n    elementMods: {\n      'a': { color: [1, 0, 0, 1] },\n    }\n  },\n}"
      },
      {
        "description": "// Example using subForms all defined at once\nforms: {\n  form1: {\n    deg: ['a', 'deg'],\n    rad: ['a', 'rad'],\n  },\n}"
      },
      {
        "description": "// Example using subForms all defined separately\nconst eqn = new Equation();\neqn.addForms({\n  deg: {\n    content: ['a', 'deg'],\n    subForm:'deg',\n  }\n});\neqn.addForms({\n  rad: {\n    content: ['a', 'rad'],\n    subForm:'rad',\n  }\n});"
      },
      {
        "description": "// Example showing all form options\nforms: {\n  form1: {\n    content: ['a', 'b', 'c'],\n    subForm: 'deg',\n    scale: 1.2,\n    alignment: {\n      fixTo: 'b',\n      xAlign: 'center',\n      yAlign: 'bottom',\n    },\n    description: '|Form| 1 |description|',\n    modifiers: {\n      Form: html.highlight([1, 0, 0, 0]),\n    },\n    elementMods: {\n      a: {\n        color: color1,\n        isTouchable: true,\n      },\n    },\n    duration: 1,\n    translation: {\n      a: {\n        style: 'curved',\n        direction: 'up',\n        mag: 0.95,\n      },\n      b: ['curved', 'down', 0.45],\n    },\n    fromPrev: {\n      duration: null,\n      translation: {\n        a: ['curved', 'down', 0.2],\n        b: ['curved', 'down', 0.2],\n      },\n    },\n    fromNext: {\n      duration: 2,\n      translation: {\n        a: ['curved', 'down', 0.2],\n        b: ['curved', 'down', 0.2],\n      },\n    },\n  },\n}"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "content",
        "lineNumber": 32,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the equation phrase of the form\ndefines how the elements are laid out",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 38,
                      "offset": 69
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 69
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 38,
              "offset": 69
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 34,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "a scaling factor for this form",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "alignment",
        "lineNumber": 35,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "how the Equation's position is aligned with\nthis form",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 10,
                      "offset": 53
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 10,
                  "offset": 53
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 10,
              "offset": 53
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAlignment"
          }
        }
      },
      {
        "title": "property",
        "name": "subForm",
        "lineNumber": 37,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "subForm name - default: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "\"base\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "description",
        "lineNumber": 38,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "a description associated with this form -\nused in equation navigator elements (@EquationNavigator)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 98
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 57,
                  "offset": 98
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 57,
              "offset": 98
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "modifiers",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "string modifiers for the description",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "object"
          }
        }
      },
      {
        "title": "property",
        "name": "fromPrev",
        "lineNumber": 41,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "form animation\nproperties if animating forward from the previous form in a formSeries",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 71,
                      "offset": 85
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 71,
                  "offset": 85
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 71,
              "offset": 85
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAnimationProperties"
          }
        }
      },
      {
        "title": "property",
        "name": "fromNext",
        "lineNumber": 43,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "form animation\nproperties if animating backward from the next form in a formSeries",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 68,
                      "offset": 82
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 68,
                  "offset": 82
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 68,
              "offset": 82
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAnimationProperties"
          }
        }
      },
      {
        "title": "property",
        "name": "duration",
        "lineNumber": 45,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "animation move duration\n (fromNext and fromPrev are prioritized over this)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 74
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 51,
                  "offset": 74
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 51,
              "offset": 74
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAnimationProperties"
          }
        }
      },
      {
        "title": "property",
        "name": "translation",
        "lineNumber": 47,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "animation move\nstyle (fromNext and fromPrev are prioritized over this)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 56,
                      "offset": 70
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 56,
                  "offset": 70
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 56,
              "offset": 70
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormTranslationProperties"
          }
        }
      },
      {
        "title": "property",
        "name": "elementMods",
        "lineNumber": 49,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "properties to set in the equation element\n(@DiagramElementPrimitive) when this form is shown",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 51,
                      "offset": 92
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 51,
                  "offset": 92
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 51,
              "offset": 92
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "object"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeEquationFormObject",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "content",
          "value": {
            "type": "NameExpression",
            "name": "TypeEquationPhrase"
          }
        },
        {
          "type": "FieldType",
          "key": "scale",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "alignment",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeFormAlignment"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "subForm",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "description",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "modifiers",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "RecordType",
              "fields": []
            }
          }
        },
        {
          "type": "FieldType",
          "key": "fromPrev",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeFormAnimationProperties"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "fromNext",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeFormAnimationProperties"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "duration",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          }
        },
        {
          "type": "FieldType",
          "key": "translation",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeFormTranslationProperties"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "elementMods",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "RecordType",
              "fields": []
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeEquationFormObject",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEquationFormObject"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A single form definition can either be:",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": true,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "an equation phrase ",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 3,
                          "offset": 43
                        },
                        "end": {
                          "line": 3,
                          "column": 22,
                          "offset": 62
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "TypeEquationPhrase",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "TypeEquationPhrase"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 22,
                          "offset": 62
                        },
                        "end": {
                          "line": 3,
                          "column": 48,
                          "offset": 88
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 3,
                      "offset": 43
                    },
                    "end": {
                      "line": 3,
                      "column": 48,
                      "offset": 88
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 41
                },
                "end": {
                  "line": 3,
                  "column": 48,
                  "offset": 88
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "or an equation form object ",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 91
                        },
                        "end": {
                          "line": 4,
                          "column": 30,
                          "offset": 118
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "TypeEquationFormObject",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "TypeEquationFormObject"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 30,
                          "offset": 118
                        },
                        "end": {
                          "line": 4,
                          "column": 60,
                          "offset": 148
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 3,
                      "offset": 91
                    },
                    "end": {
                      "line": 4,
                      "column": 60,
                      "offset": 148
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 89
                },
                "end": {
                  "line": 4,
                  "column": 60,
                  "offset": 148
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": true,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "or an object of subforms:",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 151
                        },
                        "end": {
                          "line": 5,
                          "column": 28,
                          "offset": 176
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 3,
                      "offset": 151
                    },
                    "end": {
                      "line": 5,
                      "column": 28,
                      "offset": 176
                    },
                    "indent": []
                  }
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": " {\n    subform1: (",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 3,
                          "offset": 180
                        },
                        "end": {
                          "line": 8,
                          "column": 18,
                          "offset": 200
                        },
                        "indent": [
                          3
                        ]
                      }
                    },
                    {
                      "type": "link",
                      "url": "TypeEquationPhrase",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "TypeEquationPhrase"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 18,
                          "offset": 200
                        },
                        "end": {
                          "line": 8,
                          "column": 44,
                          "offset": 226
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " | ",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 44,
                          "offset": 226
                        },
                        "end": {
                          "line": 8,
                          "column": 47,
                          "offset": 229
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "link",
                      "url": "TypeEquationFormObject",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "TypeEquationFormObject"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 47,
                          "offset": 229
                        },
                        "end": {
                          "line": 8,
                          "column": 77,
                          "offset": 259
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": "),\n    subform2: ...\n },",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 77,
                          "offset": 259
                        },
                        "end": {
                          "line": 10,
                          "column": 6,
                          "offset": 287
                        },
                        "indent": [
                          3,
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 3,
                      "offset": 180
                    },
                    "end": {
                      "line": 10,
                      "column": 6,
                      "offset": 287
                    },
                    "indent": [
                      3,
                      3,
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 149
                },
                "end": {
                  "line": 10,
                  "column": 6,
                  "offset": 287
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 41
            },
            "end": {
              "line": 10,
              "column": 6,
              "offset": 287
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 10,
          "column": 6,
          "offset": 287
        }
      }
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "TypeEquationPhrase"
            },
            {
              "type": "NameExpression",
              "name": "TypeEquationFormObject"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Object"
              },
              "applications": [
                {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "TypeEquationFormObject"
                    },
                    {
                      "type": "NameExpression",
                      "name": "TypeEquationPhrase"
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 295,
        "column": 0
      },
      "end": {
        "line": 309,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 310,
          "column": 0
        },
        "end": {
          "line": 315,
          "column": 26
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "NameExpression",
          "name": "TypeEquationPhrase"
        },
        {
          "type": "NameExpression",
          "name": "TypeEquationFormObject"
        },
        {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          },
          "applications": [
            {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NameExpression",
                  "name": "TypeEquationFormObject"
                },
                {
                  "type": "NameExpression",
                  "name": "TypeEquationPhrase"
                }
              ]
            }
          ]
        }
      ]
    },
    "name": "TypeEquationForm",
    "kind": "typedef",
    "path": [
      {
        "name": "TypeEquationForm",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEquationForm"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An object of equation forms where each key is the form name and each value\nis a form defintion ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 21,
                  "offset": 95
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "url": "TypeEquationForm",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "TypeEquationForm"
                }
              ],
              "position": {
                "start": {
                  "line": 2,
                  "column": 21,
                  "offset": 95
                },
                "end": {
                  "line": 2,
                  "column": 45,
                  "offset": 119
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 45,
              "offset": 119
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 45,
          "offset": 119
        }
      }
    },
    "tags": [
      {
        "title": "type",
        "description": null,
        "lineNumber": 4,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Object"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "TypeEquationForm"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 317,
        "column": 0
      },
      "end": {
        "line": 322,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 323,
          "column": 0
        },
        "end": {
          "line": 325,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "type": {
      "type": "TypeApplication",
      "expression": {
        "type": "NameExpression",
        "name": "Object"
      },
      "applications": [
        {
          "type": "NameExpression",
          "name": "TypeEquationForm"
        }
      ]
    },
    "name": "TypeEquationForms",
    "kind": "typedef",
    "path": [
      {
        "name": "TypeEquationForms",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEquationForms"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "When an equation form series is restarted, or cycled back to the first form\nin the series, then two special animations can be defined with this object:",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 76,
                  "offset": 151
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 76,
              "offset": 151
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "moveFrom",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 3,
                          "offset": 154
                        },
                        "end": {
                          "line": 3,
                          "column": 13,
                          "offset": 164
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": the equation will move from a location (usually another equation of the same form)",
                      "position": {
                        "start": {
                          "line": 3,
                          "column": 13,
                          "offset": 164
                        },
                        "end": {
                          "line": 3,
                          "column": 97,
                          "offset": 248
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 3,
                      "offset": 154
                    },
                    "end": {
                      "line": 3,
                      "column": 97,
                      "offset": 248
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 152
                },
                "end": {
                  "line": 3,
                  "column": 97,
                  "offset": 248
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "pulse",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 251
                        },
                        "end": {
                          "line": 4,
                          "column": 10,
                          "offset": 258
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": An element will be pulsed when the animation is finished.",
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 10,
                          "offset": 258
                        },
                        "end": {
                          "line": 4,
                          "column": 69,
                          "offset": 317
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 3,
                      "offset": 251
                    },
                    "end": {
                      "line": 4,
                      "column": 69,
                      "offset": 317
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 249
                },
                "end": {
                  "line": 4,
                  "column": 69,
                  "offset": 317
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 152
            },
            "end": {
              "line": 4,
              "column": 69,
              "offset": 317
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The default values in the pulse object are are:",
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 319
                },
                "end": {
                  "line": 6,
                  "column": 48,
                  "offset": 366
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 319
            },
            "end": {
              "line": 6,
              "column": 48,
              "offset": 366
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "duration",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 3,
                          "offset": 369
                        },
                        "end": {
                          "line": 7,
                          "column": 13,
                          "offset": 379
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": 1s",
                      "position": {
                        "start": {
                          "line": 7,
                          "column": 13,
                          "offset": 379
                        },
                        "end": {
                          "line": 7,
                          "column": 17,
                          "offset": 383
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 7,
                      "column": 3,
                      "offset": 369
                    },
                    "end": {
                      "line": 7,
                      "column": 17,
                      "offset": 383
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 367
                },
                "end": {
                  "line": 7,
                  "column": 17,
                  "offset": 383
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "scale",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 3,
                          "offset": 386
                        },
                        "end": {
                          "line": 8,
                          "column": 10,
                          "offset": 393
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": 1.1",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 10,
                          "offset": 393
                        },
                        "end": {
                          "line": 8,
                          "column": 15,
                          "offset": 398
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 3,
                      "offset": 386
                    },
                    "end": {
                      "line": 8,
                      "column": 15,
                      "offset": 398
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 384
                },
                "end": {
                  "line": 8,
                  "column": 15,
                  "offset": 398
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 367
            },
            "end": {
              "line": 8,
              "column": 15,
              "offset": 398
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 8,
          "column": 15,
          "offset": 398
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 327,
        "column": 0
      },
      "end": {
        "line": 336,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 337,
          "column": 0
        },
        "end": {
          "line": 346,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "formRestart",
        "lineNumber": 338,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "RecordType",
            "fields": [
              {
                "type": "FieldType",
                "key": "moveFrom",
                "value": {
                  "type": "OptionalType",
                  "expression": {
                    "type": "UnionType",
                    "elements": [
                      {
                        "type": "NullableType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      },
                      {
                        "type": "NameExpression",
                        "name": "DiagramElementCollection"
                      }
                    ]
                  }
                }
              },
              {
                "type": "FieldType",
                "key": "pulse",
                "value": {
                  "type": "OptionalType",
                  "expression": {
                    "type": "RecordType",
                    "fields": [
                      {
                        "type": "FieldType",
                        "key": "duration",
                        "value": {
                          "type": "OptionalType",
                          "expression": {
                            "type": "NameExpression",
                            "name": "number"
                          }
                        }
                      },
                      {
                        "type": "FieldType",
                        "key": "scale",
                        "value": {
                          "type": "OptionalType",
                          "expression": {
                            "type": "NameExpression",
                            "name": "number"
                          }
                        }
                      },
                      {
                        "type": "FieldType",
                        "key": "element",
                        "value": {
                          "type": "OptionalType",
                          "expression": {
                            "type": "NullableType",
                            "expression": {
                              "type": "NameExpression",
                              "name": "DiagramElement"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeFormRestart",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "formRestart",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "RecordType",
              "fields": [
                {
                  "type": "FieldType",
                  "key": "moveFrom",
                  "value": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "UnionType",
                      "elements": [
                        {
                          "type": "NullableType",
                          "expression": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        },
                        {
                          "type": "NameExpression",
                          "name": "DiagramElementCollection"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "FieldType",
                  "key": "pulse",
                  "value": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "RecordType",
                      "fields": [
                        {
                          "type": "FieldType",
                          "key": "duration",
                          "value": {
                            "type": "OptionalType",
                            "expression": {
                              "type": "NameExpression",
                              "name": "number"
                            }
                          }
                        },
                        {
                          "type": "FieldType",
                          "key": "scale",
                          "value": {
                            "type": "OptionalType",
                            "expression": {
                              "type": "NameExpression",
                              "name": "number"
                            }
                          }
                        },
                        {
                          "type": "FieldType",
                          "key": "element",
                          "value": {
                            "type": "OptionalType",
                            "expression": {
                              "type": "NullableType",
                              "expression": {
                                "type": "NameExpression",
                                "name": "DiagramElement"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeFormRestart",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeFormRestart"
  },
  {
    "name": "Equation Option Types",
    "kind": "note",
    "description": {
      "type": "root",
      "children": [],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 1,
          "offset": 0
        }
      }
    },
    "path": [
      {
        "name": "Equation Option Types",
        "kind": "note"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "Equation Option Types"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Options objects to construct an ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "Equation",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Equation"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " class. All properties are optional.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "end": {
                  "line": 1,
                  "column": 85,
                  "offset": 84
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 85,
              "offset": 84
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 85,
          "offset": 84
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "default: [0.5, 0.5, 0.5, 1]",
        "lineNumber": 3,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "default: 0.7",
        "lineNumber": 4,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "scale"
      },
      {
        "title": "property",
        "description": "default: {}",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationElements"
          }
        },
        "name": "elements"
      },
      {
        "title": "property",
        "description": "default:\n{ fixTo: new {@link Point}(0, 0), xAlign: 'left', yAlign: 'baseline}",
        "lineNumber": 6,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAlignment"
          }
        },
        "name": "defaultFormAlignment"
      },
      {
        "title": "property",
        "description": "default: {}",
        "lineNumber": 8,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationForms"
          }
        },
        "name": "forms"
      },
      {
        "title": "property",
        "description": "an object\nwith each key being a form series name, and each value an array for form\nnames. If defined as an array, then a form series object is created where\nthe form series name is 'base'. Default: {}",
        "lineNumber": 9,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "applications": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        "name": "formSeries"
      },
      {
        "title": "property",
        "description": "If more than one form series is\ndefined, then a default must be chosen to be the first current one. Default:\nfirst form defined",
        "lineNumber": 13,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "defaultFormSeries"
      },
      {
        "title": "property",
        "description": "default: null",
        "lineNumber": 16,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormRestart"
          }
        },
        "name": "formRestart"
      },
      {
        "title": "property",
        "description": "default {@link DiagramFont}('Times\nNew Roman', 'normal', 0.2, '200', 'left', 'alphabetic', color)",
        "lineNumber": 17,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "DiagramFont"
          }
        },
        "name": "fontMath"
      },
      {
        "title": "property",
        "description": "default: new {@link Point}(0, 0)",
        "lineNumber": 19,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Point"
          }
        },
        "name": "position"
      }
    ],
    "loc": {
      "start": {
        "line": 348,
        "column": 0
      },
      "end": {
        "line": 368,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 369,
          "column": 0
        },
        "end": {
          "line": 380,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "color",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                },
                {
                  "type": "linkReference",
                  "identifier": "0.5, 0.5, 0.5, 1",
                  "referenceType": "shortcut",
                  "children": [
                    {
                      "type": "text",
                      "value": "0.5, 0.5, 0.5, 1",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 11,
                          "offset": 10
                        },
                        "end": {
                          "line": 1,
                          "column": 27,
                          "offset": 26
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "TypeApplication",
            "expression": {
              "type": "NameExpression",
              "name": "Array"
            },
            "applications": [
              {
                "type": "NameExpression",
                "name": "number"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "scale",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default: 0.7",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "elements",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default: {}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationElements"
          }
        }
      },
      {
        "title": "property",
        "name": "defaultFormAlignment",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default:\n{ fixTo: new ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 14,
                      "offset": 22
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "link",
                  "url": "Point",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "Point"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 14,
                      "offset": 22
                    },
                    "end": {
                      "line": 2,
                      "column": 27,
                      "offset": 35
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "(0, 0), xAlign: 'left', yAlign: 'baseline}",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 27,
                      "offset": 35
                    },
                    "end": {
                      "line": 2,
                      "column": 69,
                      "offset": 77
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 69,
                  "offset": 77
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 69,
              "offset": 77
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormAlignment"
          }
        }
      },
      {
        "title": "property",
        "name": "forms",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default: {}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeEquationForms"
          }
        }
      },
      {
        "title": "property",
        "name": "formSeries",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "an object\nwith each key being a form series name, and each value an array for form\nnames. If defined as an array, then a form series object is created where\nthe form series name is 'base'. Default: {}",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 4,
                      "column": 44,
                      "offset": 200
                    },
                    "indent": [
                      1,
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 4,
                  "column": 44,
                  "offset": 200
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 4,
              "column": 44,
              "offset": 200
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                },
                "applications": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "defaultFormSeries",
        "lineNumber": 13,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If more than one form series is\ndefined, then a default must be chosen to be the first current one. Default:\nfirst form defined",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 3,
                      "column": 19,
                      "offset": 127
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 19,
                  "offset": 127
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 19,
              "offset": 127
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "formRestart",
        "lineNumber": 16,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default: null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "TypeFormRestart"
          }
        }
      },
      {
        "title": "property",
        "name": "fontMath",
        "lineNumber": 17,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "url": "DiagramFont",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "DiagramFont"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 9,
                      "offset": 8
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "('Times\nNew Roman', 'normal', 0.2, '200', 'left', 'alphabetic', color)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "end": {
                      "line": 2,
                      "column": 63,
                      "offset": 97
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 63,
                  "offset": 97
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 63,
              "offset": 97
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "DiagramFont"
          }
        }
      },
      {
        "title": "property",
        "name": "position",
        "lineNumber": 19,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default: new ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "url": "Point",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "Point"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "(0, 0)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "Point"
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeEquationOptions",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "color",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "scale",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "elements",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeEquationElements"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "defaultFormAlignment",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeFormAlignment"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "forms",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeEquationForms"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "formSeries",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  ]
                },
                {
                  "type": "RecordType",
                  "fields": []
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "defaultFormSeries",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "formRestart",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "TypeFormRestart"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "fontMath",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "DiagramFont"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "position",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "Point"
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeEquationOptions",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEquationOptions"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Options object for ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "Equation#goToForm",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Equation#goToForm"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Often, ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 47
                },
                "end": {
                  "line": 3,
                  "column": 8,
                  "offset": 54
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "goToForm",
              "position": {
                "start": {
                  "line": 3,
                  "column": 8,
                  "offset": 54
                },
                "end": {
                  "line": 3,
                  "column": 18,
                  "offset": 64
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is called to animate from a shown form to a desired form.\nTherefore there will be some equation elements that:",
              "position": {
                "start": {
                  "line": 3,
                  "column": 18,
                  "offset": 64
                },
                "end": {
                  "line": 4,
                  "column": 53,
                  "offset": 175
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 47
            },
            "end": {
              "line": 4,
              "column": 53,
              "offset": 175
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Are currently shown, but need to be hidden as they are not in the desired form",
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 178
                        },
                        "end": {
                          "line": 5,
                          "column": 81,
                          "offset": 256
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 3,
                      "offset": 178
                    },
                    "end": {
                      "line": 5,
                      "column": 81,
                      "offset": 256
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 176
                },
                "end": {
                  "line": 5,
                  "column": 81,
                  "offset": 256
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Are currently shown, are in the desired form, and need to be moved to the\ncorrect layout position for the desired form",
                      "position": {
                        "start": {
                          "line": 6,
                          "column": 3,
                          "offset": 259
                        },
                        "end": {
                          "line": 7,
                          "column": 47,
                          "offset": 379
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 6,
                      "column": 3,
                      "offset": 259
                    },
                    "end": {
                      "line": 7,
                      "column": 47,
                      "offset": 379
                    },
                    "indent": [
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 257
                },
                "end": {
                  "line": 7,
                  "column": 47,
                  "offset": 379
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Are currently hidden and need to be shown in the desired form",
                      "position": {
                        "start": {
                          "line": 8,
                          "column": 3,
                          "offset": 382
                        },
                        "end": {
                          "line": 8,
                          "column": 64,
                          "offset": 443
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 3,
                      "offset": 382
                    },
                    "end": {
                      "line": 8,
                      "column": 64,
                      "offset": 443
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 380
                },
                "end": {
                  "line": 8,
                  "column": 64,
                  "offset": 443
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 176
            },
            "end": {
              "line": 8,
              "column": 64,
              "offset": 443
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The order that elements are shown, hidden and moved is defined by the\n",
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 445
                },
                "end": {
                  "line": 11,
                  "column": 1,
                  "offset": 515
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "animate",
              "position": {
                "start": {
                  "line": 11,
                  "column": 1,
                  "offset": 515
                },
                "end": {
                  "line": 11,
                  "column": 10,
                  "offset": 524
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " property:",
              "position": {
                "start": {
                  "line": 11,
                  "column": 10,
                  "offset": 524
                },
                "end": {
                  "line": 11,
                  "column": 20,
                  "offset": 534
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 10,
              "column": 1,
              "offset": 445
            },
            "end": {
              "line": 11,
              "column": 20,
              "offset": 534
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "'move'",
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 3,
                          "offset": 537
                        },
                        "end": {
                          "line": 12,
                          "column": 11,
                          "offset": 545
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Dissolve out elements to hide, move existing elements to new,\ndissolve in elements that need to be shown",
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 11,
                          "offset": 545
                        },
                        "end": {
                          "line": 13,
                          "column": 43,
                          "offset": 651
                        },
                        "indent": [
                          1
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 3,
                      "offset": 537
                    },
                    "end": {
                      "line": 13,
                      "column": 43,
                      "offset": 651
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 12,
                  "column": 1,
                  "offset": 535
                },
                "end": {
                  "line": 13,
                  "column": 43,
                  "offset": 651
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "'dissolveInThenMove'",
                      "position": {
                        "start": {
                          "line": 14,
                          "column": 3,
                          "offset": 654
                        },
                        "end": {
                          "line": 14,
                          "column": 25,
                          "offset": 676
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Dissolve out the elements to hide, dissolve in the\nelements that need to be shown in the correct locations of the form, then\nmove existing elements to their correct locations",
                      "position": {
                        "start": {
                          "line": 14,
                          "column": 25,
                          "offset": 676
                        },
                        "end": {
                          "line": 16,
                          "column": 50,
                          "offset": 852
                        },
                        "indent": [
                          1,
                          1
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 14,
                      "column": 3,
                      "offset": 654
                    },
                    "end": {
                      "line": 16,
                      "column": 50,
                      "offset": 852
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 14,
                  "column": 1,
                  "offset": 652
                },
                "end": {
                  "line": 16,
                  "column": 50,
                  "offset": 852
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "'dissolve'",
                      "position": {
                        "start": {
                          "line": 17,
                          "column": 3,
                          "offset": 855
                        },
                        "end": {
                          "line": 17,
                          "column": 15,
                          "offset": 867
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Dissolve out the entire current form, and then dissolve in the entire new form",
                      "position": {
                        "start": {
                          "line": 17,
                          "column": 15,
                          "offset": 867
                        },
                        "end": {
                          "line": 17,
                          "column": 95,
                          "offset": 947
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 17,
                      "column": 3,
                      "offset": 855
                    },
                    "end": {
                      "line": 17,
                      "column": 95,
                      "offset": 947
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 17,
                  "column": 1,
                  "offset": 853
                },
                "end": {
                  "line": 17,
                  "column": 95,
                  "offset": 947
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "'moveFrom'",
                      "position": {
                        "start": {
                          "line": 18,
                          "column": 3,
                          "offset": 950
                        },
                        "end": {
                          "line": 18,
                          "column": 15,
                          "offset": 962
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Shows the desired form at the position defined in the\nformRestart property of ",
                      "position": {
                        "start": {
                          "line": 18,
                          "column": 15,
                          "offset": 962
                        },
                        "end": {
                          "line": 19,
                          "column": 25,
                          "offset": 1042
                        },
                        "indent": [
                          1
                        ]
                      }
                    },
                    {
                      "type": "link",
                      "url": "TypeEquationOptions",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "TypeEquationOptions"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 19,
                          "column": 25,
                          "offset": 1042
                        },
                        "end": {
                          "line": 19,
                          "column": 52,
                          "offset": 1069
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", then moves it to the\ncurrent location",
                      "position": {
                        "start": {
                          "line": 19,
                          "column": 52,
                          "offset": 1069
                        },
                        "end": {
                          "line": 20,
                          "column": 17,
                          "offset": 1108
                        },
                        "indent": [
                          1
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 18,
                      "column": 3,
                      "offset": 950
                    },
                    "end": {
                      "line": 20,
                      "column": 17,
                      "offset": 1108
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 18,
                  "column": 1,
                  "offset": 948
                },
                "end": {
                  "line": 20,
                  "column": 17,
                  "offset": 1108
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "'pulse'",
                      "position": {
                        "start": {
                          "line": 21,
                          "column": 3,
                          "offset": 1111
                        },
                        "end": {
                          "line": 21,
                          "column": 12,
                          "offset": 1120
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Same as ",
                      "position": {
                        "start": {
                          "line": 21,
                          "column": 12,
                          "offset": 1120
                        },
                        "end": {
                          "line": 21,
                          "column": 22,
                          "offset": 1130
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "'dissolve'",
                      "position": {
                        "start": {
                          "line": 21,
                          "column": 22,
                          "offset": 1130
                        },
                        "end": {
                          "line": 21,
                          "column": 34,
                          "offset": 1142
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", but once finished will pulse the element\ndefined in the pulse object in the formRestart property of ",
                      "position": {
                        "start": {
                          "line": 21,
                          "column": 34,
                          "offset": 1142
                        },
                        "end": {
                          "line": 22,
                          "column": 61,
                          "offset": 1245
                        },
                        "indent": [
                          2
                        ]
                      }
                    },
                    {
                      "type": "link",
                      "url": "TypeEquationOptions",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "TypeEquationOptions"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 22,
                          "column": 61,
                          "offset": 1245
                        },
                        "end": {
                          "line": 22,
                          "column": 88,
                          "offset": 1272
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 21,
                      "column": 3,
                      "offset": 1111
                    },
                    "end": {
                      "line": 22,
                      "column": 88,
                      "offset": 1272
                    },
                    "indent": [
                      2
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 21,
                  "column": 1,
                  "offset": 1109
                },
                "end": {
                  "line": 22,
                  "column": 88,
                  "offset": 1272
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 12,
              "column": 1,
              "offset": 535
            },
            "end": {
              "line": 22,
              "column": 88,
              "offset": 1272
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "If a form is already animating, then the ",
              "position": {
                "start": {
                  "line": 24,
                  "column": 1,
                  "offset": 1274
                },
                "end": {
                  "line": 24,
                  "column": 42,
                  "offset": 1315
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "ifAnimating",
              "position": {
                "start": {
                  "line": 24,
                  "column": 42,
                  "offset": 1315
                },
                "end": {
                  "line": 24,
                  "column": 55,
                  "offset": 1328
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " property will define\nthe behavior of the animation:",
              "position": {
                "start": {
                  "line": 24,
                  "column": 55,
                  "offset": 1328
                },
                "end": {
                  "line": 25,
                  "column": 31,
                  "offset": 1380
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 24,
              "column": 1,
              "offset": 1274
            },
            "end": {
              "line": 25,
              "column": 31,
              "offset": 1380
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "cancelGoTo: true",
                      "position": {
                        "start": {
                          "line": 26,
                          "column": 3,
                          "offset": 1383
                        },
                        "end": {
                          "line": 26,
                          "column": 21,
                          "offset": 1401
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 26,
                          "column": 21,
                          "offset": 1401
                        },
                        "end": {
                          "line": 26,
                          "column": 23,
                          "offset": 1403
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "skipToTarget: true",
                      "position": {
                        "start": {
                          "line": 26,
                          "column": 23,
                          "offset": 1403
                        },
                        "end": {
                          "line": 26,
                          "column": 43,
                          "offset": 1423
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Current animation will skip to\nthe end, and current goTo call will be cancelled",
                      "position": {
                        "start": {
                          "line": 26,
                          "column": 43,
                          "offset": 1423
                        },
                        "end": {
                          "line": 27,
                          "column": 51,
                          "offset": 1506
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 26,
                      "column": 3,
                      "offset": 1383
                    },
                    "end": {
                      "line": 27,
                      "column": 51,
                      "offset": 1506
                    },
                    "indent": [
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 26,
                  "column": 1,
                  "offset": 1381
                },
                "end": {
                  "line": 27,
                  "column": 51,
                  "offset": 1506
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "cancelGoTo: true",
                      "position": {
                        "start": {
                          "line": 28,
                          "column": 3,
                          "offset": 1509
                        },
                        "end": {
                          "line": 28,
                          "column": 21,
                          "offset": 1527
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 28,
                          "column": 21,
                          "offset": 1527
                        },
                        "end": {
                          "line": 28,
                          "column": 23,
                          "offset": 1529
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "skipToTarget: false",
                      "position": {
                        "start": {
                          "line": 28,
                          "column": 23,
                          "offset": 1529
                        },
                        "end": {
                          "line": 28,
                          "column": 44,
                          "offset": 1550
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Current animation will stop in\nits current state, and current goTo call will be cancelled",
                      "position": {
                        "start": {
                          "line": 28,
                          "column": 44,
                          "offset": 1550
                        },
                        "end": {
                          "line": 29,
                          "column": 61,
                          "offset": 1643
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 28,
                      "column": 3,
                      "offset": 1509
                    },
                    "end": {
                      "line": 29,
                      "column": 61,
                      "offset": 1643
                    },
                    "indent": [
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 28,
                  "column": 1,
                  "offset": 1507
                },
                "end": {
                  "line": 29,
                  "column": 61,
                  "offset": 1643
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "cancelGoTo: false",
                      "position": {
                        "start": {
                          "line": 30,
                          "column": 3,
                          "offset": 1646
                        },
                        "end": {
                          "line": 30,
                          "column": 22,
                          "offset": 1665
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 30,
                          "column": 22,
                          "offset": 1665
                        },
                        "end": {
                          "line": 30,
                          "column": 24,
                          "offset": 1667
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "skipToTarget: true",
                      "position": {
                        "start": {
                          "line": 30,
                          "column": 24,
                          "offset": 1667
                        },
                        "end": {
                          "line": 30,
                          "column": 44,
                          "offset": 1687
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Current animation will skip to\nthe end, and current goTo call will then be executed",
                      "position": {
                        "start": {
                          "line": 30,
                          "column": 44,
                          "offset": 1687
                        },
                        "end": {
                          "line": 31,
                          "column": 55,
                          "offset": 1774
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 30,
                      "column": 3,
                      "offset": 1646
                    },
                    "end": {
                      "line": 31,
                      "column": 55,
                      "offset": 1774
                    },
                    "indent": [
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 30,
                  "column": 1,
                  "offset": 1644
                },
                "end": {
                  "line": 31,
                  "column": 55,
                  "offset": 1774
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "inlineCode",
                      "value": "cancelGoTo: false",
                      "position": {
                        "start": {
                          "line": 32,
                          "column": 3,
                          "offset": 1777
                        },
                        "end": {
                          "line": 32,
                          "column": 22,
                          "offset": 1796
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ", ",
                      "position": {
                        "start": {
                          "line": 32,
                          "column": 22,
                          "offset": 1796
                        },
                        "end": {
                          "line": 32,
                          "column": 24,
                          "offset": 1798
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "skipToTarget: false",
                      "position": {
                        "start": {
                          "line": 32,
                          "column": 24,
                          "offset": 1798
                        },
                        "end": {
                          "line": 32,
                          "column": 45,
                          "offset": 1819
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": ": Current animation will stop in\nits current state, and current goTo call will be executed",
                      "position": {
                        "start": {
                          "line": 32,
                          "column": 45,
                          "offset": 1819
                        },
                        "end": {
                          "line": 33,
                          "column": 60,
                          "offset": 1911
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 32,
                      "column": 3,
                      "offset": 1777
                    },
                    "end": {
                      "line": 33,
                      "column": 60,
                      "offset": 1911
                    },
                    "indent": [
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 32,
                  "column": 1,
                  "offset": 1775
                },
                "end": {
                  "line": 33,
                  "column": 60,
                  "offset": 1911
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 26,
              "column": 1,
              "offset": 1381
            },
            "end": {
              "line": 33,
              "column": 60,
              "offset": 1911
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 33,
          "column": 60,
          "offset": 1911
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "form name to goto",
        "lineNumber": 35,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "name"
      },
      {
        "title": "property",
        "description": "form index to goto (can be used instead of name)",
        "lineNumber": 36,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "index"
      },
      {
        "title": "property",
        "description": "default: `\"dissolve\"`",
        "lineNumber": 37,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "move"
              },
              {
                "type": "StringLiteralType",
                "value": "dissolve"
              },
              {
                "type": "StringLiteralType",
                "value": "moveFrom"
              },
              {
                "type": "StringLiteralType",
                "value": "pulse"
              },
              {
                "type": "StringLiteralType",
                "value": "dissolveInThenMove"
              }
            ]
          }
        },
        "name": "animate"
      },
      {
        "title": "property",
        "description": "delay before goto start. Default: `0`",
        "lineNumber": 39,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "delay"
      },
      {
        "title": "property",
        "description": "Default: 0.4 of duration, or 0.4s if\nno duration",
        "lineNumber": 40,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "dissolveOutTime"
      },
      {
        "title": "property",
        "description": "animation duration. Default: `null`",
        "lineNumber": 42,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "duration"
      },
      {
        "title": "property",
        "description": "time between dissolve out and dissolve in\nwhen animating with `dissolve` or `pulse`. Default: 0.2 of duration, or 0.2s\nif no duration",
        "lineNumber": 43,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "blankTime"
      },
      {
        "title": "property",
        "description": "Default: 0.4 of duration, or 0.4s if\nno duration",
        "lineNumber": 46,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        "name": "dissolveInTime"
      },
      {
        "title": "property",
        "description": "use duration from the form\ndefinition {@link TypeEquationFormObject}. Default: `true`",
        "lineNumber": 48,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        },
        "name": "prioritizeFormDuration"
      },
      {
        "title": "property",
        "description": "prioritze *fromPrev* or\n*fromNext* duration from the form definition. {@link TypeEquationFormObject}\nDefault: `null`",
        "lineNumber": 50,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "fromPrev"
              },
              {
                "type": "StringLiteralType",
                "value": "fromNext"
              }
            ]
          }
        },
        "name": "fromWhere"
      },
      {
        "title": "property",
        "description": "behavior for if currently animating between forms. Default:\n`skipToTarget: true`, `cancelGoTo: true`",
        "lineNumber": 53,
        "type": null,
        "errors": [
          "unexpected token"
        ],
        "name": "ifAnimating"
      },
      {
        "title": "property",
        "description": "call when goto finished",
        "lineNumber": 56,
        "type": null,
        "errors": [
          "not reach to EOF"
        ],
        "name": "callback"
      }
    ],
    "loc": {
      "start": {
        "line": 382,
        "column": 0
      },
      "end": {
        "line": 439,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 440,
          "column": 0
        },
        "end": {
          "line": 456,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "name",
        "lineNumber": 35,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "form name to goto",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "index",
        "lineNumber": 36,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "form index to goto (can be used instead of name)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "animate",
        "lineNumber": 37,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "default: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "\"dissolve\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "move"
              },
              {
                "type": "StringLiteralType",
                "value": "dissolve"
              },
              {
                "type": "StringLiteralType",
                "value": "moveFrom"
              },
              {
                "type": "StringLiteralType",
                "value": "pulse"
              },
              {
                "type": "StringLiteralType",
                "value": "dissolveInThenMove"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "delay",
        "lineNumber": 39,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "delay before goto start. Default: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "0",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "dissolveOutTime",
        "lineNumber": 40,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Default: 0.4 of duration, or 0.4s if\nno duration",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 48
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 12,
                  "offset": 48
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 12,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "duration",
        "lineNumber": 42,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "animation duration. Default: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "end": {
                      "line": 1,
                      "column": 36,
                      "offset": 35
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "blankTime",
        "lineNumber": 43,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "time between dissolve out and dissolve in\nwhen animating with ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 21,
                      "offset": 62
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "dissolve",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 21,
                      "offset": 62
                    },
                    "end": {
                      "line": 2,
                      "column": 31,
                      "offset": 72
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 31,
                      "offset": 72
                    },
                    "end": {
                      "line": 2,
                      "column": 35,
                      "offset": 76
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "pulse",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 35,
                      "offset": 76
                    },
                    "end": {
                      "line": 2,
                      "column": 42,
                      "offset": 83
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ". Default: 0.2 of duration, or 0.2s\nif no duration",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 42,
                      "offset": 83
                    },
                    "end": {
                      "line": 3,
                      "column": 15,
                      "offset": 133
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 15,
                  "offset": 133
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 15,
              "offset": 133
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "dissolveInTime",
        "lineNumber": 46,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Default: 0.4 of duration, or 0.4s if\nno duration",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 48
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 12,
                  "offset": 48
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 12,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "number"
          }
        }
      },
      {
        "title": "property",
        "name": "prioritizeFormDuration",
        "lineNumber": 48,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "use duration from the form\ndefinition ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 12,
                      "offset": 38
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "link",
                  "url": "TypeEquationFormObject",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "TypeEquationFormObject"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 12,
                      "offset": 38
                    },
                    "end": {
                      "line": 2,
                      "column": 42,
                      "offset": 68
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ". Default: ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 42,
                      "offset": 68
                    },
                    "end": {
                      "line": 2,
                      "column": 53,
                      "offset": 79
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "true",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 53,
                      "offset": 79
                    },
                    "end": {
                      "line": 2,
                      "column": 59,
                      "offset": 85
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 59,
                  "offset": 85
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 59,
              "offset": 85
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      },
      {
        "title": "property",
        "name": "fromWhere",
        "lineNumber": 50,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "prioritze ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "fromPrev",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 12,
                          "offset": 11
                        },
                        "end": {
                          "line": 1,
                          "column": 20,
                          "offset": 19
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " or\n",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "end": {
                      "line": 2,
                      "column": 1,
                      "offset": 24
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "emphasis",
                  "children": [
                    {
                      "type": "text",
                      "value": "fromNext",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 2,
                          "offset": 25
                        },
                        "end": {
                          "line": 2,
                          "column": 10,
                          "offset": 33
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 1,
                      "offset": 24
                    },
                    "end": {
                      "line": 2,
                      "column": 11,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": " duration from the form definition. ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 11,
                      "offset": 34
                    },
                    "end": {
                      "line": 2,
                      "column": 47,
                      "offset": 70
                    },
                    "indent": []
                  }
                },
                {
                  "type": "link",
                  "url": "TypeEquationFormObject",
                  "title": null,
                  "jsdoc": true,
                  "children": [
                    {
                      "type": "text",
                      "value": "TypeEquationFormObject"
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 47,
                      "offset": 70
                    },
                    "end": {
                      "line": 2,
                      "column": 77,
                      "offset": 100
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "\nDefault: ",
                  "position": {
                    "start": {
                      "line": 2,
                      "column": 77,
                      "offset": 100
                    },
                    "end": {
                      "line": 3,
                      "column": 10,
                      "offset": 110
                    },
                    "indent": [
                      1
                    ]
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "null",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 10,
                      "offset": 110
                    },
                    "end": {
                      "line": 3,
                      "column": 16,
                      "offset": 116
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 16,
                  "offset": 116
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 16,
              "offset": 116
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "UnionType",
            "elements": [
              {
                "type": "StringLiteralType",
                "value": "fromPrev"
              },
              {
                "type": "StringLiteralType",
                "value": "fromNext"
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "ifAnimating",
        "lineNumber": 451,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "RecordType",
            "fields": [
              {
                "type": "FieldType",
                "key": "cancelGoTo",
                "value": {
                  "type": "OptionalType",
                  "expression": {
                    "type": "NameExpression",
                    "name": "boolean"
                  }
                }
              },
              {
                "type": "FieldType",
                "key": "skipToTarget",
                "value": {
                  "type": "OptionalType",
                  "expression": {
                    "type": "NameExpression",
                    "name": "boolean"
                  }
                }
              }
            ]
          }
        }
      },
      {
        "title": "property",
        "name": "callback",
        "lineNumber": 455,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NullableType",
            "expression": {
              "type": "FunctionType",
              "params": [],
              "result": {
                "type": "VoidLiteral"
              }
            }
          }
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeEquationGoToFormOptions",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "name",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "index",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "animate",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "StringLiteralType",
                  "value": "move"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dissolve"
                },
                {
                  "type": "StringLiteralType",
                  "value": "moveFrom"
                },
                {
                  "type": "StringLiteralType",
                  "value": "pulse"
                },
                {
                  "type": "StringLiteralType",
                  "value": "dissolveInThenMove"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "delay",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "dissolveOutTime",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "duration",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NullableType",
              "expression": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          }
        },
        {
          "type": "FieldType",
          "key": "dissolveInTime",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "blankTime",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "number"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "prioritizeFormDuration",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "boolean"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "fromWhere",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "UnionType",
              "elements": [
                {
                  "type": "NullableType",
                  "expression": {
                    "type": "StringLiteralType",
                    "value": "fromPrev"
                  }
                },
                {
                  "type": "StringLiteralType",
                  "value": "fromNext"
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "ifAnimating",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "RecordType",
              "fields": [
                {
                  "type": "FieldType",
                  "key": "cancelGoTo",
                  "value": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "boolean"
                    }
                  }
                },
                {
                  "type": "FieldType",
                  "key": "skipToTarget",
                  "value": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "boolean"
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "type": "FieldType",
          "key": "callback",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NullableType",
              "expression": {
                "type": "FunctionType",
                "params": [],
                "result": {
                  "type": "VoidLiteral"
                }
              }
            }
          }
        }
      ]
    },
    "path": [
      {
        "name": "TypeEquationGoToFormOptions",
        "kind": "typedef"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "TypeEquationGoToFormOptions"
  },
  {
    "name": "Equations",
    "kind": "note",
    "description": {
      "type": "root",
      "children": [],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 1,
          "offset": 0
        }
      }
    },
    "path": [
      {
        "name": "Equations",
        "kind": "note"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "namespace": "Equations"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An Equation is a collection of elements that can be arranged into different\nforms.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 7,
                  "offset": 82
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 7,
              "offset": 82
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 7,
          "offset": 82
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": null,
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationOptions"
        },
        "name": "options"
      },
      {
        "title": "example",
        "description": "// Create with options object\neqn = new Equation({\n   elements: {\n     a: 'a',\n     b: 'b',\n     c: 'c',\n     equals: ' = ',\n     plus: ' + ',\n   },\n   forms: {\n     base: ['a', 'equals', 'b', 'plus', 'c'],\n   },\n);",
        "lineNumber": 4
      },
      {
        "title": "example",
        "description": "// Create with methods\neqn = new Equation();\neqn.addElements({\n   a: 'a',\n   b: 'b',\n   c: 'c',\n   equals: ' = ',\n   plus: ' + ',\n });\n eqn.addForms({\n   base: ['a', 'equals', 'b', 'plus', 'c'],\n });",
        "lineNumber": 18
      }
    ],
    "loc": {
      "start": {
        "line": 464,
        "column": 0
      },
      "end": {
        "line": 495,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 496,
          "column": 0
        },
        "end": {
          "line": 1725,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
    },
    "augments": [
      {
        "title": "augments",
        "name": "DiagramElementCollection"
      }
    ],
    "examples": [
      {
        "description": "// Create with options object\neqn = new Equation({\n   elements: {\n     a: 'a',\n     b: 'b',\n     c: 'c',\n     equals: ' = ',\n     plus: ' + ',\n   },\n   forms: {\n     base: ['a', 'equals', 'b', 'plus', 'c'],\n   },\n);"
      },
      {
        "description": "// Create with methods\neqn = new Equation();\neqn.addElements({\n   a: 'a',\n   b: 'b',\n   c: 'c',\n   equals: ' = ',\n   plus: ' + ',\n });\n eqn.addForms({\n   base: ['a', 'equals', 'b', 'plus', 'c'],\n });"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "shapes",
        "lineNumber": 554,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "param",
        "name": "options",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "TypeEquationOptions"
        },
        "default": "{}"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "Equation",
    "kind": "class",
    "path": [
      {
        "name": "Equation",
        "kind": "class"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Equation parameters and functions",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 34,
                "offset": 33
              }
            }
          },
          "tags": [
            {
              "title": "property",
              "description": "equation functions",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "EquationFunctions"
              },
              "name": "functions"
            }
          ],
          "loc": {
            "start": {
              "line": 497,
              "column": 2
            },
            "end": {
              "line": 500,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 501,
                "column": 2
              },
              "end": {
                "line": 545,
                "column": 4
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "functions",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "equation functions",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 19,
                            "offset": 18
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "EquationFunctions"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "eqn",
          "kind": "member",
          "memberof": "Equation",
          "scope": "instance",
          "type": {
            "type": "RecordType",
            "fields": [
              {
                "type": "FieldType",
                "key": "forms",
                "value": {
                  "type": "RecordType",
                  "fields": []
                }
              },
              {
                "type": "FieldType",
                "key": "functions",
                "value": {
                  "type": "NameExpression",
                  "name": "EquationFunctions"
                }
              },
              {
                "type": "FieldType",
                "key": "symbols",
                "value": {
                  "type": "NameExpression",
                  "name": "EquationSymbols"
                }
              },
              {
                "type": "FieldType",
                "key": "currentForm",
                "value": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              {
                "type": "FieldType",
                "key": "currentSubForm",
                "value": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              {
                "type": "FieldType",
                "key": "fontMath",
                "value": {
                  "type": "NameExpression",
                  "name": "DiagramFont"
                }
              },
              {
                "type": "FieldType",
                "key": "scale",
                "value": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              {
                "type": "FieldType",
                "key": "subFormPriority",
                "value": {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  ]
                }
              },
              {
                "type": "FieldType",
                "key": "formSeries",
                "value": {
                  "type": "RecordType",
                  "fields": []
                }
              },
              {
                "type": "FieldType",
                "key": "currentFormSeries",
                "value": {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  ]
                }
              },
              {
                "type": "FieldType",
                "key": "currentFormSeriesName",
                "value": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              {
                "type": "FieldType",
                "key": "defaultFormAlignment",
                "value": {
                  "type": "RecordType",
                  "fields": [
                    {
                      "type": "FieldType",
                      "key": "fixTo",
                      "value": {
                        "type": "UnionType",
                        "elements": [
                          {
                            "type": "NameExpression",
                            "name": "DiagramElementPrimitive"
                          },
                          {
                            "type": "NameExpression",
                            "name": "DiagramElementCollection"
                          },
                          {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        ]
                      }
                    },
                    {
                      "type": "FieldType",
                      "key": "xAlign",
                      "value": {
                        "type": "NameExpression",
                        "name": "TypeHAlign"
                      }
                    },
                    {
                      "type": "FieldType",
                      "key": "yAlign",
                      "value": {
                        "type": "NameExpression",
                        "name": "TypeVAlign"
                      }
                    }
                  ]
                }
              },
              {
                "type": "FieldType",
                "key": "isAnimating",
                "value": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              {
                "type": "FieldType",
                "key": "descriptionElement",
                "value": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "DiagramElementPrimitive"
                    },
                    {
                      "type": "NullLiteral"
                    }
                  ]
                }
              },
              {
                "type": "FieldType",
                "key": "descriptionPosition",
                "value": {
                  "type": "NameExpression",
                  "name": "Point"
                }
              },
              {
                "type": "FieldType",
                "key": "formRestart",
                "value": {
                  "type": "NullableType",
                  "expression": {
                    "type": "RecordType",
                    "fields": [
                      {
                        "type": "FieldType",
                        "key": "moveFrom",
                        "value": {
                          "type": "OptionalType",
                          "expression": {
                            "type": "UnionType",
                            "elements": [
                              {
                                "type": "NameExpression",
                                "name": "Point"
                              },
                              {
                                "type": "NameExpression",
                                "name": "DiagramElementCollection"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "FieldType",
                        "key": "pulse",
                        "value": {
                          "type": "OptionalType",
                          "expression": {
                            "type": "RecordType",
                            "fields": [
                              {
                                "type": "FieldType",
                                "key": "duration",
                                "value": {
                                  "type": "NameExpression",
                                  "name": "number"
                                }
                              },
                              {
                                "type": "FieldType",
                                "key": "scale",
                                "value": {
                                  "type": "NameExpression",
                                  "name": "number"
                                }
                              },
                              {
                                "type": "FieldType",
                                "key": "element",
                                "value": {
                                  "type": "NameExpression",
                                  "name": "DiagramElement"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "eqn",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#eqn"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set the current form series to 'name'",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 38,
                "offset": 37
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 657,
              "column": 2
            },
            "end": {
              "line": 659,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 660,
                "column": 2
              },
              "end": {
                "line": 665,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "name",
              "lineNumber": 660,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setFormSeries",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "setFormSeries",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#setFormSeries"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current form series name",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 33,
                "offset": 32
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 667,
              "column": 2
            },
            "end": {
              "line": 669,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 670,
                "column": 2
              },
              "end": {
                "line": 672,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getFormSeries",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "getFormSeries",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#getFormSeries"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add elements to equation.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 26,
                        "offset": 25
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 26,
                    "offset": 25
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 26,
                "offset": 25
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 825,
              "column": 2
            },
            "end": {
              "line": 827,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 828,
                "column": 2
              },
              "end": {
                "line": 874,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "elems",
              "lineNumber": 829,
              "type": {
                "type": "NameExpression",
                "name": "TypeEquationElements"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "addElements",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "addElements",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#addElements"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add forms to equation.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 23,
                        "offset": 22
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 23,
                    "offset": 22
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 23,
                "offset": 22
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 929,
              "column": 2
            },
            "end": {
              "line": 931,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 932,
                "column": 2
              },
              "end": {
                "line": 1013,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "forms",
              "lineNumber": 932,
              "type": {
                "type": "NameExpression",
                "name": "TypeEquationForms"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "addForms",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "addForms",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#addForms"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the current equation form",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 30,
                "offset": 29
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 1255,
              "column": 2
            },
            "end": {
              "line": 1257,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1258,
                "column": 2
              },
              "end": {
                "line": 1266,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NullableType",
                "expression": {
                  "type": "NameExpression",
                  "name": "EquationForm"
                }
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getCurrentForm",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "getCurrentForm",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#getCurrentForm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set current equation form - Note, this does not show the form.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 63,
                        "offset": 62
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 63,
                    "offset": 62
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 63,
                "offset": 62
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 1280,
              "column": 2
            },
            "end": {
              "line": 1282,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1283,
                "column": 2
              },
              "end": {
                "line": 1300,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "formOrName",
              "lineNumber": 1284,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "EquationForm"
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "subForm",
              "lineNumber": 1285,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "default": "'base'"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "setCurrentForm",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "setCurrentForm",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#setCurrentForm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Show equation form",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 19,
                        "offset": 18
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 19,
                    "offset": 18
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 19,
                "offset": 18
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 1302,
              "column": 2
            },
            "end": {
              "line": 1304,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1305,
                "column": 2
              },
              "end": {
                "line": 1319,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "formOrName",
              "lineNumber": 1306,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "EquationForm"
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "subForm",
              "lineNumber": 1307,
              "type": {
                "type": "NullableType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "default": "null"
            },
            {
              "title": "param",
              "name": "animationStop",
              "lineNumber": 1308,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "default": "true"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "showForm",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "showForm",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#showForm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get an equation form object from a form name",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 45,
                        "offset": 44
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 45,
                    "offset": 44
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 45,
                "offset": 44
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 1321,
              "column": 2
            },
            "end": {
              "line": 1323,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1324,
                "column": 2
              },
              "end": {
                "line": 1346,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "formOrName",
              "lineNumber": 1325,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  {
                    "type": "NameExpression",
                    "name": "EquationForm"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "subForm",
              "lineNumber": 1326,
              "type": {
                "type": "NullableType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NullLiteral"
                  },
                  {
                    "type": "NameExpression",
                    "name": "EquationForm"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "getForm",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "getForm",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#getForm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Start an animation to an equation form",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 1348,
              "column": 2
            },
            "end": {
              "line": 1350,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1351,
                "column": 2
              },
              "end": {
                "line": 1555,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "optionsIn",
              "lineNumber": 1351,
              "type": {
                "type": "NameExpression",
                "name": "TypeEquationGoToFormOptions"
              },
              "default": "{}"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "goToForm",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "goToForm",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#goToForm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Animate to previous form in the current form series",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 52,
                "offset": 51
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 1566,
              "column": 2
            },
            "end": {
              "line": 1568,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1569,
                "column": 2
              },
              "end": {
                "line": 1584,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "duration",
              "lineNumber": 1569,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  {
                    "type": "NullLiteral"
                  }
                ]
              },
              "default": "null"
            },
            {
              "title": "param",
              "name": "delay",
              "lineNumber": 1569,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "default": "0"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "prevForm",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "prevForm",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#prevForm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Animate to next form in the current form series",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 48,
                        "offset": 47
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 48,
                    "offset": 47
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 48,
                "offset": 47
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 1586,
              "column": 2
            },
            "end": {
              "line": 1588,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1589,
                "column": 2
              },
              "end": {
                "line": 1619,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "duration",
              "lineNumber": 1589,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  {
                    "type": "NullLiteral"
                  }
                ]
              },
              "default": "null"
            },
            {
              "title": "param",
              "name": "delay",
              "lineNumber": 1589,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "default": "0"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "nextForm",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "nextForm",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#nextForm"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Start from previous form and animate to current form",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 53,
                    "offset": 52
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 53,
                "offset": 52
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 1621,
              "column": 2
            },
            "end": {
              "line": 1623,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1624,
                "column": 2
              },
              "end": {
                "line": 1644,
                "column": 3
              }
            },
            "file": "/opt/app/src/js/diagram/DiagramElements/Equation/Equation.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "duration",
              "lineNumber": 1624,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "name": "replayCurrentForm",
          "kind": "function",
          "memberof": "Equation",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Equation",
              "kind": "class"
            },
            {
              "name": "replayCurrentForm",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Equation#replayCurrentForm"
        }
      ],
      "events": [],
      "static": []
    },
    "namespace": "Equation"
  },
  {
    "name": "tools",
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "These are generic tools",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 24,
          "offset": 23
        }
      }
    },
    "children": [
      {
        "name": "g2",
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "2D geometry tools",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "children": [
          "Point",
          "Rect"
        ],
        "kind": "note",
        "path": [
          {
            "name": "g2",
            "kind": "note"
          }
        ],
        "members": {
          "global": [],
          "inner": [],
          "instance": [],
          "events": [],
          "static": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Point class",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 12,
                            "offset": 11
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 12,
                        "offset": 11
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 12,
                    "offset": 11
                  }
                }
              },
              "tags": [],
              "loc": {
                "start": {
                  "line": 104,
                  "column": 0
                },
                "end": {
                  "line": 107,
                  "column": 3
                }
              },
              "context": {
                "loc": {
                  "start": {
                    "line": 108,
                    "column": 0
                  },
                  "end": {
                    "line": 495,
                    "column": 1
                  }
                },
                "file": "/opt/app/src/js/tools/g2.js"
              },
              "augments": [],
              "examples": [],
              "implements": [],
              "params": [
                {
                  "title": "param",
                  "name": "x",
                  "lineNumber": 3,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "x coordinate of point",
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 22,
                                "offset": 21
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 22,
                        "offset": 21
                      }
                    }
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  }
                },
                {
                  "title": "param",
                  "name": "y",
                  "lineNumber": 4,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "y coordinate of point",
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 22,
                                "offset": 21
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 22,
                        "offset": 21
                      }
                    }
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  }
                }
              ],
              "properties": [],
              "returns": [],
              "sees": [],
              "throws": [],
              "todos": [],
              "yields": [],
              "constructorComment": {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Constructor",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 12,
                              "offset": 11
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 12,
                          "offset": 11
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    }
                  }
                },
                "tags": [
                  {
                    "title": "constructor",
                    "description": null,
                    "lineNumber": 2,
                    "type": null,
                    "name": null
                  },
                  {
                    "title": "param",
                    "description": "x coordinate of point",
                    "lineNumber": 3,
                    "type": null,
                    "name": "x"
                  },
                  {
                    "title": "param",
                    "description": "y coordinate of point",
                    "lineNumber": 4,
                    "type": null,
                    "name": "y"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 132,
                    "column": 2
                  },
                  "end": {
                    "line": 137,
                    "column": 5
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 138,
                      "column": 2
                    },
                    "end": {
                      "line": 142,
                      "column": 3
                    }
                  },
                  "file": "/opt/app/src/js/tools/g2.js",
                  "sortKey": "!/opt/app/src/index.js:00000000!/opt/app/src/js/tools/g2.js 00000138",
                  "code": "{\n  /**\n   * x value of point\n  */\n  x: number;\n\n  /** y value of point */\n  y: number;\n  _type: 'point';\n\n  /**\n   * Return a point at (0, 0)\n   */\n  static zero(): Point {\n    return new Point(0, 0);\n  }\n\n  /**\n   * Return a point at (1, 1)\n   */\n  static Unity(): Point {\n    return new Point(1, 1);\n  }\n\n  /**\n   * Constructor\n   * @constructor\n   * @param x x coordinate of point\n   * @param y y coordinate of point\n   */\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    this._type = 'point';\n  }\n\n  /**\n   * Return a duplicate of the {@link Point} object\n   */\n  _dup(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * Scale x and y values of point by scalar\n   * @example\n   * p = new Point(1, 1);\n   * s = p.scale(3);\n   * // s = Point{x: 3, y: 3};\n   */\n  scale(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Subtract (x, y) values or a {@link Point} and return the difference as a new {@link Point}\n   * @example\n   * p = new Point(3, 3);\n   * d = p.sub(1, 1)\n   * // d = Point{x: 2, y: 2}\n   *\n   * p = new Point(3, 3);\n   * q = new Point(1, 1);\n   * d = p.sub(q)\n   * // d = Point{x: 2, y: 2}\n   */\n  sub(pointOrX: Point | number, y: number = 0): Point {\n    if (pointOrX instanceof Point) {\n      return new Point(this.x - pointOrX.x, this.y - pointOrX.y);\n    }\n    return new Point(this.x - pointOrX, this.y - y);\n  }\n\n  /**\n   * Add (x, y) values or a {@link Point} and return the sum as a new {@link Point}\n   * @example\n   * p = new Point(3, 3);\n   * d = p.add(1, 1)\n   * // d = Point{x: 4, y: 4}\n   *\n   * p = new Point(3, 3);\n   * q = new Point(1, 1);\n   * d = p.add(q)\n   * // d = Point{x: 4, y: 4}\n   */\n  add(pointOrX: Point | number, y: number = 0): Point {\n    if (pointOrX instanceof Point) {\n      return new Point(this.x + pointOrX.x, this.y + pointOrX.y);\n    }\n    return new Point(this.x + pointOrX, this.y + y);\n  }\n\n  /**\n   * Return the distance between the point and the origin\n   * @example\n   * p = new Point(1, 1);\n   * d = p.distance();\n   * // d = 1.4142135623730951\n   */\n  distance(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * Return a new point with (x, y) values rounded to some precision\n   * @example\n   * p = new Point(1.234, 1.234);\n   * q = p.round(2);\n   * // q = Point{x: 1.23, y: 1.23}\n   */\n  round(precision: number = 8): Point {\n    return new Point(roundNum(this.x, precision), roundNum(this.y, precision));\n  }\n\n  /**\n   * Return a new point that is clipped to min and max values from the origin.\n   *\n   * Use a point as a parameter to define different (x, y) min/max values,\n   * a number to define the same (x, y) min/max values, or null to have no\n   * min/max values.\n   * @example\n   * p = new Point(2, 2);\n   * q = p.clip(1, 1);\n   * // q = Point{x: 1, y: 1}\n   *\n   * p = new Point(2, 2);\n   * q = p.clip(1, null);\n   * // q = Point{x: 1, y: 2}\n   *\n   * p = new Point(-2, -2);\n   * minClip = new Point(-1, -1.5);\n   * q = p.clip(minClip, null);\n   * // q = Point{x: -1, y: -1.5}\n   */\n  clip(min: Point | number | null, max: Point | number | null): Point {\n    let minX;\n    let minY;\n    let maxX;\n    let maxY;\n    if (min instanceof Point) {\n      minX = min.x;\n      minY = min.y;\n    } else {\n      minX = min;\n      minY = min;\n    }\n    if (max instanceof Point) {\n      maxX = max.x;\n      maxY = max.y;\n    } else {\n      maxX = max;\n      maxY = max;\n    }\n    const x = clipValue(this.x, minX, maxX);\n    const y = clipValue(this.y, minY, maxY);\n    return new Point(x, y);\n  }\n\n  /**\n   * Transform the point with a 3x3 matrix (2 dimensional transform)\n   * @example\n   * // Transform a point with a (2, 2) translation then 90º rotation\n   * p = new Point(1, 1);\n   * m = new Transform().translate(2, 2).rotate(Math.PI / 2).matrix();\n   * // m = [0, -1, -2, 1, 0, 2, 0, 0, 1]\n   * q = p.transformBy(m)\n   * // q = Point{x: -3, y: 3}\n   */\n  transformBy(matrix: Array<number>): Point {\n    const transformedPoint = m2.transform(matrix, this.x, this.y);\n    return new Point(transformedPoint[0], transformedPoint[1]);\n  }\n\n  quadraticBezier(p1: Point, p2: Point, t: number) {\n    const bx = quadraticBezier(this.x, p1.x, p2.x, t);\n    const by = quadraticBezier(this.y, p1.y, p2.y, t);\n    return new Point(bx, by);\n  }\n\n  /**\n   * Rotate a point some angle around a center point\n   * @param angle - in radians\n   * @example\n   * // Rotate a point around the origin\n   * p = new Point(1, 0);\n   * q = p.rotate(Math.PI)\n   * // q = Point{x: -1, y: 0}\n   *\n   * // Rotate a point around (1, 1)\n   * p = new Point(2, 1);\n   * q = p.rotate(Math.PI, new Point(1, 1))\n   * // q = Point{x: 0, y: 1}\n   */\n  rotate(angle: number, center?: Point = new Point(0, 0)): Point {\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const matrix = [c, -s,\n                    s, c]; // eslint-disable-line indent\n    const centerPoint = center;\n    const pt = this.sub(centerPoint);\n    return new Point(\n      matrix[0] * pt.x + matrix[1] * pt.y + centerPoint.x,\n      matrix[2] * pt.x + matrix[3] * pt.y + centerPoint.y\n    );\n  }\n\n  /* eslint-enable comma-dangle */\n\n  /**\n   * Compare two points for equality to some precision\n   * @example\n   * p = new Point(1.123, 1.123);\n   * q = new Point(1.124, 1.124);\n   * p.isEqualTo(q)\n   * // false\n   *\n   * p.isEqualTo(q, 2)\n   * // true\n   */\n  isEqualTo(p: Point, precision?: number = 8) {\n    let pr = this;\n    let qr = p;\n\n    if (typeof precision === 'number') {\n      pr = this.round(precision);\n      qr = qr.round(precision);\n    }\n    if (pr.x === qr.x && pr.y === qr.y) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Compare two points for unequality to some precision\n   * @example\n   * p = new Point(1.123, 1.123);\n   * q = new Point(1.124, 1.124);\n   * p.isNotEqualTo(q)\n   * // true\n   *\n   * p.isNotEqualTo(q, 2)\n   * // false\n   */\n  isNotEqualTo(p: Point, precision?: number) {\n    return !this.isEqualTo(p, precision);\n  }\n\n  /* eslint-disable no-use-before-define */\n  isOnLine(l: Line, precision?: number) {\n    return l.hasPointOn(this, precision);\n  }\n\n  getShaddowOnLine(l: Line, precision: number = 8) {\n    const shaddow = new Line(this, 1, l.angle() + Math.PI / 2);\n    const { intersect } = shaddow.intersectsWith(l);\n    // console.log(intersect, inLine, onLine, )\n    if (intersect != null && intersect.isOnLine(l, precision)) {\n      return intersect;\n    }\n    return null;\n  }\n\n  shaddowIsOnLine(l: Line, precision: number = 8) {\n    const intersect = this.getShaddowOnLine(l, precision);\n    if (intersect != null) {\n      return true;\n    }\n    return false;\n  }\n\n  isOnUnboundLine(l: Line, precision?: number) {\n    return l.hasPointAlong(this, precision);\n  }\n\n  /* eslint-enable no-use-before-define */\n  // console(text?: string) {\n  //   Console(`${text || ''} + ${this.x}, ${this.y}`);\n  // }\n\n  static isLeft(p0: Point, p1: Point, p2: Point) {\n    return (\n      (p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y)\n    );\n  }\n\n  isInPolygon(polygonVertices: Array<Point>) {\n    let windingNumber = 0;\n    let n = polygonVertices.length - 1;\n    const v = polygonVertices.slice();\n    const p = this;\n    let popLastPoint = false;\n    // polygonVertices needs to have the last vertex the same as the first vertex\n    if (v[0].isNotEqualTo(v[n])) {\n      v.push(v[0]);\n      popLastPoint = true;\n      n += 1;\n    }\n    for (let i = 0; i < n; i += 1) {\n      if (v[i].y <= p.y) {\n        if (v[i + 1].y > p.y) {                // an upward crossing\n          if (Point.isLeft(v[i], v[i + 1], p) > 0) { // P left of  edge\n            windingNumber += 1;                // have  a valid up intersect\n          }\n        }\n      } else if (v[i + 1].y <= p.y) {           // start y > P.y (no test needed)\n        // a downward crossing\n        if (Point.isLeft(v[i], v[i + 1], p) < 0) {    // P right of  edge\n          windingNumber -= 1;      // have  a valid down intersect\n        }\n      }\n    }\n    if (popLastPoint) {\n      v.pop();\n    }\n    if (windingNumber === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  isOnPolygon(polygonVertices: Array<Point>) {\n    let popLastPoint = false;\n    const p = this;\n    let n = polygonVertices.length - 1;   // Number of sides\n    const v = polygonVertices.slice();\n\n    // polygonVertices needs to have the last vertex the same as the first vertex\n    if (v[0].isNotEqualTo(v[n])) {\n      v.push(v[0]);\n      popLastPoint = true;\n      n += 1;\n    }\n\n    for (let i = 0; i < n; i += 1) {\n      // if(p.isEqualTo(v[i])) {\n      //   return true;\n      // }\n      /* eslint-disable-next-line  no-use-before-define */\n      const l = line(v[i], v[i + 1]);\n      if (p.isOnLine(l)) {\n        if (popLastPoint) {\n          v.pop();\n        }\n        return true;\n      }\n    }\n    if (p.isInPolygon(polygonVertices)) {\n      if (popLastPoint) {\n        v.pop();\n      }\n      return true;\n    }\n\n    if (popLastPoint) {\n      v.pop();\n    }\n    return false;\n  }\n\n  toPolar() {\n    return {\n      mag: Math.sqrt(this.x ** 2 + this.y ** 2),\n      angle: Math.atan2(this.y, this.x),\n    };\n  }\n\n  toDelta(\n    delta: Point,\n    percent: number,\n    translationStyle: 'linear' | 'curved' = 'linear',\n    // eslint-disable-next-line no-use-before-define\n    translationOptions: pathOptionsType = {\n      rot: 1,\n      magnitude: 0.5,\n      offset: 0.5,\n      controlPoint: null,\n      direction: '',\n    },\n  ) {                 // eslint-disable-next-line no-use-before-define\n    const pathPoint = translationPath(\n      translationStyle,\n      this._dup(), delta, percent,\n      translationOptions,\n    );\n    return pathPoint;\n  }\n}"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "x",
                    "lineNumber": 3,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "x coordinate of point",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 22,
                                  "offset": 21
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 22,
                              "offset": 21
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 22,
                          "offset": 21
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "y",
                    "lineNumber": 4,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "y coordinate of point",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 22,
                                  "offset": 21
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 22,
                              "offset": 21
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 22,
                          "offset": 21
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "kind": "class"
              },
              "name": "Point",
              "kind": "class",
              "path": [
                {
                  "name": "Point",
                  "kind": "class"
                }
              ],
              "members": {
                "global": [],
                "inner": [],
                "instance": [
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "x value of point",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 17,
                                  "offset": 16
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 17,
                              "offset": 16
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 17,
                          "offset": 16
                        }
                      }
                    },
                    "tags": [],
                    "loc": {
                      "start": {
                        "line": 109,
                        "column": 2
                      },
                      "end": {
                        "line": 111,
                        "column": 4
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 112,
                          "column": 2
                        },
                        "end": {
                          "line": 112,
                          "column": 12
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [],
                    "implements": [],
                    "params": [],
                    "properties": [],
                    "returns": [],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "x",
                    "kind": "member",
                    "memberof": "Point",
                    "scope": "instance",
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    },
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "x",
                        "kind": "member",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#x"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "y value of point",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 17,
                                  "offset": 16
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 17,
                              "offset": 16
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 17,
                          "offset": 16
                        }
                      }
                    },
                    "tags": [],
                    "loc": {
                      "start": {
                        "line": 114,
                        "column": 2
                      },
                      "end": {
                        "line": 114,
                        "column": 25
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 115,
                          "column": 2
                        },
                        "end": {
                          "line": 115,
                          "column": 12
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [],
                    "implements": [],
                    "params": [],
                    "properties": [],
                    "returns": [],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "y",
                    "kind": "member",
                    "memberof": "Point",
                    "scope": "instance",
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    },
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "y",
                        "kind": "member",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#y"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Return a duplicate of the ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 27,
                                  "offset": 26
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "link",
                              "url": "Point",
                              "title": null,
                              "jsdoc": true,
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Point"
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 27,
                                  "offset": 26
                                },
                                "end": {
                                  "line": 1,
                                  "column": 40,
                                  "offset": 39
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": " object",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 40,
                                  "offset": 39
                                },
                                "end": {
                                  "line": 1,
                                  "column": 47,
                                  "offset": 46
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 47,
                              "offset": 46
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 47,
                          "offset": 46
                        }
                      }
                    },
                    "tags": [],
                    "loc": {
                      "start": {
                        "line": 144,
                        "column": 2
                      },
                      "end": {
                        "line": 146,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 147,
                          "column": 2
                        },
                        "end": {
                          "line": 149,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [],
                    "implements": [],
                    "params": [],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "_dup",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "_dup",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#_dup"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Scale x and y values of point by scalar",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 40,
                                  "offset": 39
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 40,
                              "offset": 39
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 40,
                          "offset": 39
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "p = new Point(1, 1);\ns = p.scale(3);\n// s = Point{x: 3, y: 3};",
                        "lineNumber": 2
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 151,
                        "column": 2
                      },
                      "end": {
                        "line": 157,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 158,
                          "column": 2
                        },
                        "end": {
                          "line": 160,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "p = new Point(1, 1);\ns = p.scale(3);\n// s = Point{x: 3, y: 3};"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "scalar",
                        "lineNumber": 158,
                        "type": {
                          "type": "NameExpression",
                          "name": "number"
                        }
                      }
                    ],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "scale",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "scale",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#scale"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Subtract (x, y) values or a ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 29,
                                  "offset": 28
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "link",
                              "url": "Point",
                              "title": null,
                              "jsdoc": true,
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Point"
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 29,
                                  "offset": 28
                                },
                                "end": {
                                  "line": 1,
                                  "column": 42,
                                  "offset": 41
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": " and return the difference as a new ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 42,
                                  "offset": 41
                                },
                                "end": {
                                  "line": 1,
                                  "column": 78,
                                  "offset": 77
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "link",
                              "url": "Point",
                              "title": null,
                              "jsdoc": true,
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Point"
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 78,
                                  "offset": 77
                                },
                                "end": {
                                  "line": 1,
                                  "column": 91,
                                  "offset": 90
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 91,
                              "offset": 90
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 91,
                          "offset": 90
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "p = new Point(3, 3);\nd = p.sub(1, 1)\n// d = Point{x: 2, y: 2}\n\np = new Point(3, 3);\nq = new Point(1, 1);\nd = p.sub(q)\n// d = Point{x: 2, y: 2}",
                        "lineNumber": 2
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 162,
                        "column": 2
                      },
                      "end": {
                        "line": 173,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 174,
                          "column": 2
                        },
                        "end": {
                          "line": 179,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "p = new Point(3, 3);\nd = p.sub(1, 1)\n// d = Point{x: 2, y: 2}\n\np = new Point(3, 3);\nq = new Point(1, 1);\nd = p.sub(q)\n// d = Point{x: 2, y: 2}"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "pointOrX",
                        "lineNumber": 174,
                        "type": {
                          "type": "UnionType",
                          "elements": [
                            {
                              "type": "NameExpression",
                              "name": "Point"
                            },
                            {
                              "type": "NameExpression",
                              "name": "number"
                            }
                          ]
                        }
                      },
                      {
                        "title": "param",
                        "name": "y",
                        "lineNumber": 174,
                        "type": {
                          "type": "NameExpression",
                          "name": "number"
                        },
                        "default": "0"
                      }
                    ],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "sub",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "sub",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#sub"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Add (x, y) values or a ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 24,
                                  "offset": 23
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "link",
                              "url": "Point",
                              "title": null,
                              "jsdoc": true,
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Point"
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 24,
                                  "offset": 23
                                },
                                "end": {
                                  "line": 1,
                                  "column": 37,
                                  "offset": 36
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "text",
                              "value": " and return the sum as a new ",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 37,
                                  "offset": 36
                                },
                                "end": {
                                  "line": 1,
                                  "column": 66,
                                  "offset": 65
                                },
                                "indent": []
                              }
                            },
                            {
                              "type": "link",
                              "url": "Point",
                              "title": null,
                              "jsdoc": true,
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Point"
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 66,
                                  "offset": 65
                                },
                                "end": {
                                  "line": 1,
                                  "column": 79,
                                  "offset": 78
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 79,
                              "offset": 78
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 79,
                          "offset": 78
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "p = new Point(3, 3);\nd = p.add(1, 1)\n// d = Point{x: 4, y: 4}\n\np = new Point(3, 3);\nq = new Point(1, 1);\nd = p.add(q)\n// d = Point{x: 4, y: 4}",
                        "lineNumber": 2
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 181,
                        "column": 2
                      },
                      "end": {
                        "line": 192,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 193,
                          "column": 2
                        },
                        "end": {
                          "line": 198,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "p = new Point(3, 3);\nd = p.add(1, 1)\n// d = Point{x: 4, y: 4}\n\np = new Point(3, 3);\nq = new Point(1, 1);\nd = p.add(q)\n// d = Point{x: 4, y: 4}"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "pointOrX",
                        "lineNumber": 193,
                        "type": {
                          "type": "UnionType",
                          "elements": [
                            {
                              "type": "NameExpression",
                              "name": "Point"
                            },
                            {
                              "type": "NameExpression",
                              "name": "number"
                            }
                          ]
                        }
                      },
                      {
                        "title": "param",
                        "name": "y",
                        "lineNumber": 193,
                        "type": {
                          "type": "NameExpression",
                          "name": "number"
                        },
                        "default": "0"
                      }
                    ],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "add",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "add",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#add"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Return the distance between the point and the origin",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 53,
                                  "offset": 52
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 53,
                              "offset": 52
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 53,
                          "offset": 52
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "p = new Point(1, 1);\nd = p.distance();\n// d = 1.4142135623730951",
                        "lineNumber": 2
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 200,
                        "column": 2
                      },
                      "end": {
                        "line": 206,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 207,
                          "column": 2
                        },
                        "end": {
                          "line": 209,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "p = new Point(1, 1);\nd = p.distance();\n// d = 1.4142135623730951"
                      }
                    ],
                    "implements": [],
                    "params": [],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "number"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "distance",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "distance",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#distance"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Return a new point with (x, y) values rounded to some precision",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 64,
                                  "offset": 63
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 64,
                              "offset": 63
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 64,
                          "offset": 63
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "p = new Point(1.234, 1.234);\nq = p.round(2);\n// q = Point{x: 1.23, y: 1.23}",
                        "lineNumber": 2
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 211,
                        "column": 2
                      },
                      "end": {
                        "line": 217,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 218,
                          "column": 2
                        },
                        "end": {
                          "line": 220,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "p = new Point(1.234, 1.234);\nq = p.round(2);\n// q = Point{x: 1.23, y: 1.23}"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "precision",
                        "lineNumber": 218,
                        "type": {
                          "type": "NameExpression",
                          "name": "number"
                        },
                        "default": "8"
                      }
                    ],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "round",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "round",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#round"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Return a new point that is clipped to min and max values from the origin.",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 74,
                                  "offset": 73
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 74,
                              "offset": 73
                            },
                            "indent": []
                          }
                        },
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Use a point as a parameter to define different (x, y) min/max values,\na number to define the same (x, y) min/max values, or null to have no\nmin/max values.",
                              "position": {
                                "start": {
                                  "line": 3,
                                  "column": 1,
                                  "offset": 75
                                },
                                "end": {
                                  "line": 5,
                                  "column": 16,
                                  "offset": 230
                                },
                                "indent": [
                                  1,
                                  1
                                ]
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 3,
                              "column": 1,
                              "offset": 75
                            },
                            "end": {
                              "line": 5,
                              "column": 16,
                              "offset": 230
                            },
                            "indent": [
                              1,
                              1
                            ]
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 5,
                          "column": 16,
                          "offset": 230
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "p = new Point(2, 2);\nq = p.clip(1, 1);\n// q = Point{x: 1, y: 1}\n\np = new Point(2, 2);\nq = p.clip(1, null);\n// q = Point{x: 1, y: 2}\n\np = new Point(-2, -2);\nminClip = new Point(-1, -1.5);\nq = p.clip(minClip, null);\n// q = Point{x: -1, y: -1.5}",
                        "lineNumber": 6
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 222,
                        "column": 2
                      },
                      "end": {
                        "line": 241,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 242,
                          "column": 2
                        },
                        "end": {
                          "line": 264,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "p = new Point(2, 2);\nq = p.clip(1, 1);\n// q = Point{x: 1, y: 1}\n\np = new Point(2, 2);\nq = p.clip(1, null);\n// q = Point{x: 1, y: 2}\n\np = new Point(-2, -2);\nminClip = new Point(-1, -1.5);\nq = p.clip(minClip, null);\n// q = Point{x: -1, y: -1.5}"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "min",
                        "lineNumber": 242,
                        "type": {
                          "type": "UnionType",
                          "elements": [
                            {
                              "type": "NameExpression",
                              "name": "Point"
                            },
                            {
                              "type": "NameExpression",
                              "name": "number"
                            },
                            {
                              "type": "NullLiteral"
                            }
                          ]
                        }
                      },
                      {
                        "title": "param",
                        "name": "max",
                        "lineNumber": 242,
                        "type": {
                          "type": "UnionType",
                          "elements": [
                            {
                              "type": "NameExpression",
                              "name": "Point"
                            },
                            {
                              "type": "NameExpression",
                              "name": "number"
                            },
                            {
                              "type": "NullLiteral"
                            }
                          ]
                        }
                      }
                    ],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "clip",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "clip",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#clip"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Transform the point with a 3x3 matrix (2 dimensional transform)",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 64,
                                  "offset": 63
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 64,
                              "offset": 63
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 64,
                          "offset": 63
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "// Transform a point with a (2, 2) translation then 90º rotation\np = new Point(1, 1);\nm = new Transform().translate(2, 2).rotate(Math.PI / 2).matrix();\n// m = [0, -1, -2, 1, 0, 2, 0, 0, 1]\nq = p.transformBy(m)\n// q = Point{x: -3, y: 3}",
                        "lineNumber": 2
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 266,
                        "column": 2
                      },
                      "end": {
                        "line": 275,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 276,
                          "column": 2
                        },
                        "end": {
                          "line": 279,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "// Transform a point with a (2, 2) translation then 90º rotation\np = new Point(1, 1);\nm = new Transform().translate(2, 2).rotate(Math.PI / 2).matrix();\n// m = [0, -1, -2, 1, 0, 2, 0, 0, 1]\nq = p.transformBy(m)\n// q = Point{x: -3, y: 3}"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "matrix",
                        "lineNumber": 276,
                        "type": {
                          "type": "TypeApplication",
                          "expression": {
                            "type": "NameExpression",
                            "name": "Array"
                          },
                          "applications": [
                            {
                              "type": "NameExpression",
                              "name": "number"
                            }
                          ]
                        }
                      }
                    ],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "transformBy",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "transformBy",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#transformBy"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Rotate a point some angle around a center point",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 48,
                                  "offset": 47
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 48,
                              "offset": 47
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 48,
                          "offset": 47
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "param",
                        "description": "in radians",
                        "lineNumber": 2,
                        "type": null,
                        "name": "angle"
                      },
                      {
                        "title": "example",
                        "description": "// Rotate a point around the origin\np = new Point(1, 0);\nq = p.rotate(Math.PI)\n// q = Point{x: -1, y: 0}\n\n// Rotate a point around (1, 1)\np = new Point(2, 1);\nq = p.rotate(Math.PI, new Point(1, 1))\n// q = Point{x: 0, y: 1}",
                        "lineNumber": 3
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 287,
                        "column": 2
                      },
                      "end": {
                        "line": 300,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 301,
                          "column": 2
                        },
                        "end": {
                          "line": 312,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "// Rotate a point around the origin\np = new Point(1, 0);\nq = p.rotate(Math.PI)\n// q = Point{x: -1, y: 0}\n\n// Rotate a point around (1, 1)\np = new Point(2, 1);\nq = p.rotate(Math.PI, new Point(1, 1))\n// q = Point{x: 0, y: 1}"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "angle",
                        "lineNumber": 2,
                        "description": {
                          "type": "root",
                          "children": [
                            {
                              "type": "paragraph",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "in radians",
                                  "position": {
                                    "start": {
                                      "line": 1,
                                      "column": 1,
                                      "offset": 0
                                    },
                                    "end": {
                                      "line": 1,
                                      "column": 11,
                                      "offset": 10
                                    },
                                    "indent": []
                                  }
                                }
                              ],
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 11,
                                  "offset": 10
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 11,
                              "offset": 10
                            }
                          }
                        },
                        "type": {
                          "type": "NameExpression",
                          "name": "number"
                        }
                      },
                      {
                        "title": "param",
                        "name": "center",
                        "lineNumber": 301,
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        },
                        "default": "new Point(0,0)"
                      }
                    ],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "rotate",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "rotate",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#rotate"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Compare two points for equality to some precision",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 50,
                                  "offset": 49
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 50,
                              "offset": 49
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 50,
                          "offset": 49
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "p = new Point(1.123, 1.123);\nq = new Point(1.124, 1.124);\np.isEqualTo(q)\n// false\n\np.isEqualTo(q, 2)\n// true",
                        "lineNumber": 2
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 316,
                        "column": 2
                      },
                      "end": {
                        "line": 326,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 327,
                          "column": 2
                        },
                        "end": {
                          "line": 339,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "p = new Point(1.123, 1.123);\nq = new Point(1.124, 1.124);\np.isEqualTo(q)\n// false\n\np.isEqualTo(q, 2)\n// true"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "p",
                        "lineNumber": 327,
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      },
                      {
                        "title": "param",
                        "name": "precision",
                        "lineNumber": 327,
                        "type": {
                          "type": "NameExpression",
                          "name": "number"
                        },
                        "default": "8"
                      }
                    ],
                    "properties": [],
                    "returns": [],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "isEqualTo",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "isEqualTo",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#isEqualTo"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Compare two points for unequality to some precision",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 52,
                                  "offset": 51
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 52,
                              "offset": 51
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 52,
                          "offset": 51
                        }
                      }
                    },
                    "tags": [
                      {
                        "title": "example",
                        "description": "p = new Point(1.123, 1.123);\nq = new Point(1.124, 1.124);\np.isNotEqualTo(q)\n// true\n\np.isNotEqualTo(q, 2)\n// false",
                        "lineNumber": 2
                      }
                    ],
                    "loc": {
                      "start": {
                        "line": 341,
                        "column": 2
                      },
                      "end": {
                        "line": 351,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 352,
                          "column": 2
                        },
                        "end": {
                          "line": 354,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [
                      {
                        "description": "p = new Point(1.123, 1.123);\nq = new Point(1.124, 1.124);\np.isNotEqualTo(q)\n// true\n\np.isNotEqualTo(q, 2)\n// false"
                      }
                    ],
                    "implements": [],
                    "params": [
                      {
                        "title": "param",
                        "name": "p",
                        "lineNumber": 352,
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      },
                      {
                        "title": "param",
                        "name": "precision",
                        "lineNumber": 352,
                        "type": {
                          "type": "OptionalType",
                          "expression": {
                            "type": "NameExpression",
                            "name": "number"
                          }
                        }
                      }
                    ],
                    "properties": [],
                    "returns": [],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "isNotEqualTo",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "instance",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "isNotEqualTo",
                        "kind": "function",
                        "scope": "instance"
                      }
                    ],
                    "namespace": "Point#isNotEqualTo"
                  }
                ],
                "events": [],
                "static": [
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Return a point at (0, 0)",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 25,
                                  "offset": 24
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 25,
                              "offset": 24
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 25,
                          "offset": 24
                        }
                      }
                    },
                    "tags": [],
                    "loc": {
                      "start": {
                        "line": 118,
                        "column": 2
                      },
                      "end": {
                        "line": 120,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 121,
                          "column": 2
                        },
                        "end": {
                          "line": 123,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [],
                    "implements": [],
                    "params": [],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "zero",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "static",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "zero",
                        "kind": "function",
                        "scope": "static"
                      }
                    ],
                    "namespace": "Point.zero"
                  },
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Return a point at (1, 1)",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 25,
                                  "offset": 24
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 25,
                              "offset": 24
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 25,
                          "offset": 24
                        }
                      }
                    },
                    "tags": [],
                    "loc": {
                      "start": {
                        "line": 125,
                        "column": 2
                      },
                      "end": {
                        "line": 127,
                        "column": 5
                      }
                    },
                    "context": {
                      "loc": {
                        "start": {
                          "line": 128,
                          "column": 2
                        },
                        "end": {
                          "line": 130,
                          "column": 3
                        }
                      },
                      "file": "/opt/app/src/js/tools/g2.js"
                    },
                    "augments": [],
                    "examples": [],
                    "implements": [],
                    "params": [],
                    "properties": [],
                    "returns": [
                      {
                        "title": "returns",
                        "type": {
                          "type": "NameExpression",
                          "name": "Point"
                        }
                      }
                    ],
                    "sees": [],
                    "throws": [],
                    "todos": [],
                    "yields": [],
                    "name": "Unity",
                    "kind": "function",
                    "memberof": "Point",
                    "scope": "static",
                    "members": {
                      "global": [],
                      "inner": [],
                      "instance": [],
                      "events": [],
                      "static": []
                    },
                    "path": [
                      {
                        "name": "Point",
                        "kind": "class"
                      },
                      {
                        "name": "Unity",
                        "kind": "function",
                        "scope": "static"
                      }
                    ],
                    "namespace": "Point.Unity"
                  }
                ]
              },
              "namespace": "Point"
            },
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Rect",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 5,
                            "offset": 4
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 5,
                        "offset": 4
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 5,
                    "offset": 4
                  }
                }
              },
              "tags": [
                {
                  "title": "class",
                  "description": null,
                  "lineNumber": 2,
                  "name": null
                }
              ],
              "loc": {
                "start": {
                  "line": 67,
                  "column": 0
                },
                "end": {
                  "line": 70,
                  "column": 3
                }
              },
              "context": {
                "loc": {
                  "start": {
                    "line": 71,
                    "column": 0
                  },
                  "end": {
                    "line": 99,
                    "column": 1
                  }
                },
                "file": "/opt/app/src/js/tools/g2.js"
              },
              "augments": [],
              "examples": [],
              "implements": [],
              "params": [
                {
                  "title": "param",
                  "name": "left",
                  "lineNumber": 3,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "left location",
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 14,
                                "offset": 13
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      }
                    }
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  }
                },
                {
                  "title": "param",
                  "name": "bottom",
                  "lineNumber": 6,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "rectangle height",
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 17,
                                "offset": 16
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 17,
                        "offset": 16
                      }
                    }
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  }
                },
                {
                  "title": "param",
                  "name": "width",
                  "lineNumber": 5,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "rectangle width",
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 16,
                                "offset": 15
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      }
                    }
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  }
                },
                {
                  "title": "param",
                  "name": "height",
                  "lineNumber": 87,
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  }
                }
              ],
              "properties": [],
              "returns": [],
              "sees": [],
              "throws": [],
              "todos": [],
              "yields": [],
              "kind": "class",
              "constructorComment": {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Constructor",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 12,
                              "offset": 11
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 12,
                          "offset": 11
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    }
                  }
                },
                "tags": [
                  {
                    "title": "constructor",
                    "description": null,
                    "lineNumber": 2,
                    "type": null,
                    "name": null
                  },
                  {
                    "title": "param",
                    "description": "left location",
                    "lineNumber": 3,
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    },
                    "name": "left"
                  },
                  {
                    "title": "param",
                    "description": "bottom location",
                    "lineNumber": 4,
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    },
                    "name": "bottom"
                  },
                  {
                    "title": "param",
                    "description": "rectangle width",
                    "lineNumber": 5,
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    },
                    "name": "width"
                  },
                  {
                    "title": "param",
                    "description": "rectangle height",
                    "lineNumber": 6,
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    },
                    "name": "bottom"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 2
                  },
                  "end": {
                    "line": 86,
                    "column": 5
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 87,
                      "column": 2
                    },
                    "end": {
                      "line": 94,
                      "column": 3
                    }
                  },
                  "file": "/opt/app/src/js/tools/g2.js",
                  "sortKey": "!/opt/app/src/index.js:00000000!/opt/app/src/js/tools/g2.js 00000087",
                  "code": "{\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n  bottom: number;\n  right: number;\n\n  /**\n   * Constructor\n   * @constructor\n   * @param {number} left - left location\n   * @param {number} bottom - bottom location\n   * @param {number} width - rectangle width\n   * @param {number} bottom - rectangle height\n   */\n  constructor(left: number, bottom: number, width: number, height: number) {\n    this.left = left;\n    this.width = width;\n    this.height = height;\n    this.bottom = bottom;\n    this.top = bottom + height;\n    this.right = left + width;\n  }\n\n  _dup() {\n    return new Rect(this.left, this.bottom, this.width, this.height);\n  }\n}"
                },
                "augments": [],
                "errors": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "left",
                    "lineNumber": 3,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "left location",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 14,
                                  "offset": 13
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 14,
                              "offset": 13
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "bottom",
                    "lineNumber": 4,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "bottom location",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 16,
                                  "offset": 15
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 16,
                              "offset": 15
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 16,
                          "offset": 15
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "width",
                    "lineNumber": 5,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "rectangle width",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 16,
                                  "offset": 15
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 16,
                              "offset": 15
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 16,
                          "offset": 15
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "bottom",
                    "lineNumber": 6,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "rectangle height",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 17,
                                  "offset": 16
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 17,
                              "offset": 16
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 17,
                          "offset": 16
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "kind": "class"
              },
              "name": "Rect",
              "path": [
                {
                  "name": "Rect",
                  "kind": "class"
                }
              ],
              "members": {
                "global": [],
                "inner": [],
                "instance": [],
                "events": [],
                "static": []
              },
              "namespace": "Rect"
            }
          ]
        },
        "namespace": "g2"
      }
    ],
    "kind": "note",
    "path": [
      {
        "name": "tools",
        "kind": "note"
      }
    ],
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "name": "g2",
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "2D geometry tools",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 18,
                        "offset": 17
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 18,
                    "offset": 17
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 18,
                "offset": 17
              }
            }
          },
          "children": [
            "Point",
            "Rect"
          ],
          "kind": "note",
          "path": [
            {
              "name": "g2",
              "kind": "note"
            }
          ],
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": [
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Point class",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 12,
                              "offset": 11
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 12,
                          "offset": 11
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    }
                  }
                },
                "tags": [],
                "loc": {
                  "start": {
                    "line": 104,
                    "column": 0
                  },
                  "end": {
                    "line": 107,
                    "column": 3
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 108,
                      "column": 0
                    },
                    "end": {
                      "line": 495,
                      "column": 1
                    }
                  },
                  "file": "/opt/app/src/js/tools/g2.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "x",
                    "lineNumber": 3,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "x coordinate of point",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 22,
                                  "offset": 21
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 22,
                              "offset": 21
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 22,
                          "offset": 21
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "y",
                    "lineNumber": 4,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "y coordinate of point",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 22,
                                  "offset": 21
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 22,
                              "offset": 21
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 22,
                          "offset": 21
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "constructorComment": {
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Constructor",
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 12,
                                "offset": 11
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 12,
                            "offset": 11
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 12,
                        "offset": 11
                      }
                    }
                  },
                  "tags": [
                    {
                      "title": "constructor",
                      "description": null,
                      "lineNumber": 2,
                      "type": null,
                      "name": null
                    },
                    {
                      "title": "param",
                      "description": "x coordinate of point",
                      "lineNumber": 3,
                      "type": null,
                      "name": "x"
                    },
                    {
                      "title": "param",
                      "description": "y coordinate of point",
                      "lineNumber": 4,
                      "type": null,
                      "name": "y"
                    }
                  ],
                  "loc": {
                    "start": {
                      "line": 132,
                      "column": 2
                    },
                    "end": {
                      "line": 137,
                      "column": 5
                    }
                  },
                  "context": {
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 2
                      },
                      "end": {
                        "line": 142,
                        "column": 3
                      }
                    },
                    "file": "/opt/app/src/js/tools/g2.js",
                    "sortKey": "!/opt/app/src/index.js:00000000!/opt/app/src/js/tools/g2.js 00000138",
                    "code": "{\n  /**\n   * x value of point\n  */\n  x: number;\n\n  /** y value of point */\n  y: number;\n  _type: 'point';\n\n  /**\n   * Return a point at (0, 0)\n   */\n  static zero(): Point {\n    return new Point(0, 0);\n  }\n\n  /**\n   * Return a point at (1, 1)\n   */\n  static Unity(): Point {\n    return new Point(1, 1);\n  }\n\n  /**\n   * Constructor\n   * @constructor\n   * @param x x coordinate of point\n   * @param y y coordinate of point\n   */\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    this._type = 'point';\n  }\n\n  /**\n   * Return a duplicate of the {@link Point} object\n   */\n  _dup(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * Scale x and y values of point by scalar\n   * @example\n   * p = new Point(1, 1);\n   * s = p.scale(3);\n   * // s = Point{x: 3, y: 3};\n   */\n  scale(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Subtract (x, y) values or a {@link Point} and return the difference as a new {@link Point}\n   * @example\n   * p = new Point(3, 3);\n   * d = p.sub(1, 1)\n   * // d = Point{x: 2, y: 2}\n   *\n   * p = new Point(3, 3);\n   * q = new Point(1, 1);\n   * d = p.sub(q)\n   * // d = Point{x: 2, y: 2}\n   */\n  sub(pointOrX: Point | number, y: number = 0): Point {\n    if (pointOrX instanceof Point) {\n      return new Point(this.x - pointOrX.x, this.y - pointOrX.y);\n    }\n    return new Point(this.x - pointOrX, this.y - y);\n  }\n\n  /**\n   * Add (x, y) values or a {@link Point} and return the sum as a new {@link Point}\n   * @example\n   * p = new Point(3, 3);\n   * d = p.add(1, 1)\n   * // d = Point{x: 4, y: 4}\n   *\n   * p = new Point(3, 3);\n   * q = new Point(1, 1);\n   * d = p.add(q)\n   * // d = Point{x: 4, y: 4}\n   */\n  add(pointOrX: Point | number, y: number = 0): Point {\n    if (pointOrX instanceof Point) {\n      return new Point(this.x + pointOrX.x, this.y + pointOrX.y);\n    }\n    return new Point(this.x + pointOrX, this.y + y);\n  }\n\n  /**\n   * Return the distance between the point and the origin\n   * @example\n   * p = new Point(1, 1);\n   * d = p.distance();\n   * // d = 1.4142135623730951\n   */\n  distance(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * Return a new point with (x, y) values rounded to some precision\n   * @example\n   * p = new Point(1.234, 1.234);\n   * q = p.round(2);\n   * // q = Point{x: 1.23, y: 1.23}\n   */\n  round(precision: number = 8): Point {\n    return new Point(roundNum(this.x, precision), roundNum(this.y, precision));\n  }\n\n  /**\n   * Return a new point that is clipped to min and max values from the origin.\n   *\n   * Use a point as a parameter to define different (x, y) min/max values,\n   * a number to define the same (x, y) min/max values, or null to have no\n   * min/max values.\n   * @example\n   * p = new Point(2, 2);\n   * q = p.clip(1, 1);\n   * // q = Point{x: 1, y: 1}\n   *\n   * p = new Point(2, 2);\n   * q = p.clip(1, null);\n   * // q = Point{x: 1, y: 2}\n   *\n   * p = new Point(-2, -2);\n   * minClip = new Point(-1, -1.5);\n   * q = p.clip(minClip, null);\n   * // q = Point{x: -1, y: -1.5}\n   */\n  clip(min: Point | number | null, max: Point | number | null): Point {\n    let minX;\n    let minY;\n    let maxX;\n    let maxY;\n    if (min instanceof Point) {\n      minX = min.x;\n      minY = min.y;\n    } else {\n      minX = min;\n      minY = min;\n    }\n    if (max instanceof Point) {\n      maxX = max.x;\n      maxY = max.y;\n    } else {\n      maxX = max;\n      maxY = max;\n    }\n    const x = clipValue(this.x, minX, maxX);\n    const y = clipValue(this.y, minY, maxY);\n    return new Point(x, y);\n  }\n\n  /**\n   * Transform the point with a 3x3 matrix (2 dimensional transform)\n   * @example\n   * // Transform a point with a (2, 2) translation then 90º rotation\n   * p = new Point(1, 1);\n   * m = new Transform().translate(2, 2).rotate(Math.PI / 2).matrix();\n   * // m = [0, -1, -2, 1, 0, 2, 0, 0, 1]\n   * q = p.transformBy(m)\n   * // q = Point{x: -3, y: 3}\n   */\n  transformBy(matrix: Array<number>): Point {\n    const transformedPoint = m2.transform(matrix, this.x, this.y);\n    return new Point(transformedPoint[0], transformedPoint[1]);\n  }\n\n  quadraticBezier(p1: Point, p2: Point, t: number) {\n    const bx = quadraticBezier(this.x, p1.x, p2.x, t);\n    const by = quadraticBezier(this.y, p1.y, p2.y, t);\n    return new Point(bx, by);\n  }\n\n  /**\n   * Rotate a point some angle around a center point\n   * @param angle - in radians\n   * @example\n   * // Rotate a point around the origin\n   * p = new Point(1, 0);\n   * q = p.rotate(Math.PI)\n   * // q = Point{x: -1, y: 0}\n   *\n   * // Rotate a point around (1, 1)\n   * p = new Point(2, 1);\n   * q = p.rotate(Math.PI, new Point(1, 1))\n   * // q = Point{x: 0, y: 1}\n   */\n  rotate(angle: number, center?: Point = new Point(0, 0)): Point {\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    const matrix = [c, -s,\n                    s, c]; // eslint-disable-line indent\n    const centerPoint = center;\n    const pt = this.sub(centerPoint);\n    return new Point(\n      matrix[0] * pt.x + matrix[1] * pt.y + centerPoint.x,\n      matrix[2] * pt.x + matrix[3] * pt.y + centerPoint.y\n    );\n  }\n\n  /* eslint-enable comma-dangle */\n\n  /**\n   * Compare two points for equality to some precision\n   * @example\n   * p = new Point(1.123, 1.123);\n   * q = new Point(1.124, 1.124);\n   * p.isEqualTo(q)\n   * // false\n   *\n   * p.isEqualTo(q, 2)\n   * // true\n   */\n  isEqualTo(p: Point, precision?: number = 8) {\n    let pr = this;\n    let qr = p;\n\n    if (typeof precision === 'number') {\n      pr = this.round(precision);\n      qr = qr.round(precision);\n    }\n    if (pr.x === qr.x && pr.y === qr.y) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Compare two points for unequality to some precision\n   * @example\n   * p = new Point(1.123, 1.123);\n   * q = new Point(1.124, 1.124);\n   * p.isNotEqualTo(q)\n   * // true\n   *\n   * p.isNotEqualTo(q, 2)\n   * // false\n   */\n  isNotEqualTo(p: Point, precision?: number) {\n    return !this.isEqualTo(p, precision);\n  }\n\n  /* eslint-disable no-use-before-define */\n  isOnLine(l: Line, precision?: number) {\n    return l.hasPointOn(this, precision);\n  }\n\n  getShaddowOnLine(l: Line, precision: number = 8) {\n    const shaddow = new Line(this, 1, l.angle() + Math.PI / 2);\n    const { intersect } = shaddow.intersectsWith(l);\n    // console.log(intersect, inLine, onLine, )\n    if (intersect != null && intersect.isOnLine(l, precision)) {\n      return intersect;\n    }\n    return null;\n  }\n\n  shaddowIsOnLine(l: Line, precision: number = 8) {\n    const intersect = this.getShaddowOnLine(l, precision);\n    if (intersect != null) {\n      return true;\n    }\n    return false;\n  }\n\n  isOnUnboundLine(l: Line, precision?: number) {\n    return l.hasPointAlong(this, precision);\n  }\n\n  /* eslint-enable no-use-before-define */\n  // console(text?: string) {\n  //   Console(`${text || ''} + ${this.x}, ${this.y}`);\n  // }\n\n  static isLeft(p0: Point, p1: Point, p2: Point) {\n    return (\n      (p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y)\n    );\n  }\n\n  isInPolygon(polygonVertices: Array<Point>) {\n    let windingNumber = 0;\n    let n = polygonVertices.length - 1;\n    const v = polygonVertices.slice();\n    const p = this;\n    let popLastPoint = false;\n    // polygonVertices needs to have the last vertex the same as the first vertex\n    if (v[0].isNotEqualTo(v[n])) {\n      v.push(v[0]);\n      popLastPoint = true;\n      n += 1;\n    }\n    for (let i = 0; i < n; i += 1) {\n      if (v[i].y <= p.y) {\n        if (v[i + 1].y > p.y) {                // an upward crossing\n          if (Point.isLeft(v[i], v[i + 1], p) > 0) { // P left of  edge\n            windingNumber += 1;                // have  a valid up intersect\n          }\n        }\n      } else if (v[i + 1].y <= p.y) {           // start y > P.y (no test needed)\n        // a downward crossing\n        if (Point.isLeft(v[i], v[i + 1], p) < 0) {    // P right of  edge\n          windingNumber -= 1;      // have  a valid down intersect\n        }\n      }\n    }\n    if (popLastPoint) {\n      v.pop();\n    }\n    if (windingNumber === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  isOnPolygon(polygonVertices: Array<Point>) {\n    let popLastPoint = false;\n    const p = this;\n    let n = polygonVertices.length - 1;   // Number of sides\n    const v = polygonVertices.slice();\n\n    // polygonVertices needs to have the last vertex the same as the first vertex\n    if (v[0].isNotEqualTo(v[n])) {\n      v.push(v[0]);\n      popLastPoint = true;\n      n += 1;\n    }\n\n    for (let i = 0; i < n; i += 1) {\n      // if(p.isEqualTo(v[i])) {\n      //   return true;\n      // }\n      /* eslint-disable-next-line  no-use-before-define */\n      const l = line(v[i], v[i + 1]);\n      if (p.isOnLine(l)) {\n        if (popLastPoint) {\n          v.pop();\n        }\n        return true;\n      }\n    }\n    if (p.isInPolygon(polygonVertices)) {\n      if (popLastPoint) {\n        v.pop();\n      }\n      return true;\n    }\n\n    if (popLastPoint) {\n      v.pop();\n    }\n    return false;\n  }\n\n  toPolar() {\n    return {\n      mag: Math.sqrt(this.x ** 2 + this.y ** 2),\n      angle: Math.atan2(this.y, this.x),\n    };\n  }\n\n  toDelta(\n    delta: Point,\n    percent: number,\n    translationStyle: 'linear' | 'curved' = 'linear',\n    // eslint-disable-next-line no-use-before-define\n    translationOptions: pathOptionsType = {\n      rot: 1,\n      magnitude: 0.5,\n      offset: 0.5,\n      controlPoint: null,\n      direction: '',\n    },\n  ) {                 // eslint-disable-next-line no-use-before-define\n    const pathPoint = translationPath(\n      translationStyle,\n      this._dup(), delta, percent,\n      translationOptions,\n    );\n    return pathPoint;\n  }\n}"
                  },
                  "augments": [],
                  "errors": [],
                  "examples": [],
                  "implements": [],
                  "params": [
                    {
                      "title": "param",
                      "name": "x",
                      "lineNumber": 3,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "x coordinate of point",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 22,
                                    "offset": 21
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 22,
                                "offset": 21
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          }
                        }
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      }
                    },
                    {
                      "title": "param",
                      "name": "y",
                      "lineNumber": 4,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "y coordinate of point",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 22,
                                    "offset": 21
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 22,
                                "offset": 21
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 22,
                            "offset": 21
                          }
                        }
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      }
                    }
                  ],
                  "properties": [],
                  "returns": [],
                  "sees": [],
                  "throws": [],
                  "todos": [],
                  "yields": [],
                  "kind": "class"
                },
                "name": "Point",
                "kind": "class",
                "path": [
                  {
                    "name": "Point",
                    "kind": "class"
                  }
                ],
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "x value of point",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 17,
                                    "offset": 16
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 17,
                                "offset": 16
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          }
                        }
                      },
                      "tags": [],
                      "loc": {
                        "start": {
                          "line": 109,
                          "column": 2
                        },
                        "end": {
                          "line": 111,
                          "column": 4
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 112,
                            "column": 2
                          },
                          "end": {
                            "line": 112,
                            "column": 12
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [],
                      "implements": [],
                      "params": [],
                      "properties": [],
                      "returns": [],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "x",
                      "kind": "member",
                      "memberof": "Point",
                      "scope": "instance",
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      },
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "x",
                          "kind": "member",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#x"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "y value of point",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 17,
                                    "offset": 16
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 17,
                                "offset": 16
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          }
                        }
                      },
                      "tags": [],
                      "loc": {
                        "start": {
                          "line": 114,
                          "column": 2
                        },
                        "end": {
                          "line": 114,
                          "column": 25
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 115,
                            "column": 2
                          },
                          "end": {
                            "line": 115,
                            "column": 12
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [],
                      "implements": [],
                      "params": [],
                      "properties": [],
                      "returns": [],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "y",
                      "kind": "member",
                      "memberof": "Point",
                      "scope": "instance",
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      },
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "y",
                          "kind": "member",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#y"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Return a duplicate of the ",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 27,
                                    "offset": 26
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "Point",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "Point"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 27,
                                    "offset": 26
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 40,
                                    "offset": 39
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": " object",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 40,
                                    "offset": 39
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 47,
                                    "offset": 46
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 47,
                                "offset": 46
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 47,
                            "offset": 46
                          }
                        }
                      },
                      "tags": [],
                      "loc": {
                        "start": {
                          "line": 144,
                          "column": 2
                        },
                        "end": {
                          "line": 146,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 147,
                            "column": 2
                          },
                          "end": {
                            "line": 149,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [],
                      "implements": [],
                      "params": [],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "_dup",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "_dup",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#_dup"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Scale x and y values of point by scalar",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 40,
                                    "offset": 39
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 40,
                                "offset": 39
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "p = new Point(1, 1);\ns = p.scale(3);\n// s = Point{x: 3, y: 3};",
                          "lineNumber": 2
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 151,
                          "column": 2
                        },
                        "end": {
                          "line": 157,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 158,
                            "column": 2
                          },
                          "end": {
                            "line": 160,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "p = new Point(1, 1);\ns = p.scale(3);\n// s = Point{x: 3, y: 3};"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "scalar",
                          "lineNumber": 158,
                          "type": {
                            "type": "NameExpression",
                            "name": "number"
                          }
                        }
                      ],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "scale",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "scale",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#scale"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Subtract (x, y) values or a ",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 29,
                                    "offset": 28
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "Point",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "Point"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 29,
                                    "offset": 28
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 42,
                                    "offset": 41
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": " and return the difference as a new ",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 42,
                                    "offset": 41
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 78,
                                    "offset": 77
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "Point",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "Point"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 78,
                                    "offset": 77
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 91,
                                    "offset": 90
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 91,
                                "offset": 90
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 91,
                            "offset": 90
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "p = new Point(3, 3);\nd = p.sub(1, 1)\n// d = Point{x: 2, y: 2}\n\np = new Point(3, 3);\nq = new Point(1, 1);\nd = p.sub(q)\n// d = Point{x: 2, y: 2}",
                          "lineNumber": 2
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 162,
                          "column": 2
                        },
                        "end": {
                          "line": 173,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 174,
                            "column": 2
                          },
                          "end": {
                            "line": 179,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "p = new Point(3, 3);\nd = p.sub(1, 1)\n// d = Point{x: 2, y: 2}\n\np = new Point(3, 3);\nq = new Point(1, 1);\nd = p.sub(q)\n// d = Point{x: 2, y: 2}"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "pointOrX",
                          "lineNumber": 174,
                          "type": {
                            "type": "UnionType",
                            "elements": [
                              {
                                "type": "NameExpression",
                                "name": "Point"
                              },
                              {
                                "type": "NameExpression",
                                "name": "number"
                              }
                            ]
                          }
                        },
                        {
                          "title": "param",
                          "name": "y",
                          "lineNumber": 174,
                          "type": {
                            "type": "NameExpression",
                            "name": "number"
                          },
                          "default": "0"
                        }
                      ],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "sub",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "sub",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#sub"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Add (x, y) values or a ",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 24,
                                    "offset": 23
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "Point",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "Point"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 24,
                                    "offset": 23
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 37,
                                    "offset": 36
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "text",
                                "value": " and return the sum as a new ",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 37,
                                    "offset": 36
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 66,
                                    "offset": 65
                                  },
                                  "indent": []
                                }
                              },
                              {
                                "type": "link",
                                "url": "Point",
                                "title": null,
                                "jsdoc": true,
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "Point"
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 66,
                                    "offset": 65
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 79,
                                    "offset": 78
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 79,
                                "offset": 78
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 79,
                            "offset": 78
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "p = new Point(3, 3);\nd = p.add(1, 1)\n// d = Point{x: 4, y: 4}\n\np = new Point(3, 3);\nq = new Point(1, 1);\nd = p.add(q)\n// d = Point{x: 4, y: 4}",
                          "lineNumber": 2
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 181,
                          "column": 2
                        },
                        "end": {
                          "line": 192,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 193,
                            "column": 2
                          },
                          "end": {
                            "line": 198,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "p = new Point(3, 3);\nd = p.add(1, 1)\n// d = Point{x: 4, y: 4}\n\np = new Point(3, 3);\nq = new Point(1, 1);\nd = p.add(q)\n// d = Point{x: 4, y: 4}"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "pointOrX",
                          "lineNumber": 193,
                          "type": {
                            "type": "UnionType",
                            "elements": [
                              {
                                "type": "NameExpression",
                                "name": "Point"
                              },
                              {
                                "type": "NameExpression",
                                "name": "number"
                              }
                            ]
                          }
                        },
                        {
                          "title": "param",
                          "name": "y",
                          "lineNumber": 193,
                          "type": {
                            "type": "NameExpression",
                            "name": "number"
                          },
                          "default": "0"
                        }
                      ],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "add",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "add",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#add"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Return the distance between the point and the origin",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 53,
                                    "offset": 52
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 53,
                                "offset": 52
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 53,
                            "offset": 52
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "p = new Point(1, 1);\nd = p.distance();\n// d = 1.4142135623730951",
                          "lineNumber": 2
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 200,
                          "column": 2
                        },
                        "end": {
                          "line": 206,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 207,
                            "column": 2
                          },
                          "end": {
                            "line": 209,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "p = new Point(1, 1);\nd = p.distance();\n// d = 1.4142135623730951"
                        }
                      ],
                      "implements": [],
                      "params": [],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "number"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "distance",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "distance",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#distance"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Return a new point with (x, y) values rounded to some precision",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 64,
                                    "offset": 63
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 64,
                                "offset": 63
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 64,
                            "offset": 63
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "p = new Point(1.234, 1.234);\nq = p.round(2);\n// q = Point{x: 1.23, y: 1.23}",
                          "lineNumber": 2
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 211,
                          "column": 2
                        },
                        "end": {
                          "line": 217,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 218,
                            "column": 2
                          },
                          "end": {
                            "line": 220,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "p = new Point(1.234, 1.234);\nq = p.round(2);\n// q = Point{x: 1.23, y: 1.23}"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "precision",
                          "lineNumber": 218,
                          "type": {
                            "type": "NameExpression",
                            "name": "number"
                          },
                          "default": "8"
                        }
                      ],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "round",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "round",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#round"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Return a new point that is clipped to min and max values from the origin.",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 74,
                                    "offset": 73
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 74,
                                "offset": 73
                              },
                              "indent": []
                            }
                          },
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Use a point as a parameter to define different (x, y) min/max values,\na number to define the same (x, y) min/max values, or null to have no\nmin/max values.",
                                "position": {
                                  "start": {
                                    "line": 3,
                                    "column": 1,
                                    "offset": 75
                                  },
                                  "end": {
                                    "line": 5,
                                    "column": 16,
                                    "offset": 230
                                  },
                                  "indent": [
                                    1,
                                    1
                                  ]
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 3,
                                "column": 1,
                                "offset": 75
                              },
                              "end": {
                                "line": 5,
                                "column": 16,
                                "offset": 230
                              },
                              "indent": [
                                1,
                                1
                              ]
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 5,
                            "column": 16,
                            "offset": 230
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "p = new Point(2, 2);\nq = p.clip(1, 1);\n// q = Point{x: 1, y: 1}\n\np = new Point(2, 2);\nq = p.clip(1, null);\n// q = Point{x: 1, y: 2}\n\np = new Point(-2, -2);\nminClip = new Point(-1, -1.5);\nq = p.clip(minClip, null);\n// q = Point{x: -1, y: -1.5}",
                          "lineNumber": 6
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 222,
                          "column": 2
                        },
                        "end": {
                          "line": 241,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 242,
                            "column": 2
                          },
                          "end": {
                            "line": 264,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "p = new Point(2, 2);\nq = p.clip(1, 1);\n// q = Point{x: 1, y: 1}\n\np = new Point(2, 2);\nq = p.clip(1, null);\n// q = Point{x: 1, y: 2}\n\np = new Point(-2, -2);\nminClip = new Point(-1, -1.5);\nq = p.clip(minClip, null);\n// q = Point{x: -1, y: -1.5}"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "min",
                          "lineNumber": 242,
                          "type": {
                            "type": "UnionType",
                            "elements": [
                              {
                                "type": "NameExpression",
                                "name": "Point"
                              },
                              {
                                "type": "NameExpression",
                                "name": "number"
                              },
                              {
                                "type": "NullLiteral"
                              }
                            ]
                          }
                        },
                        {
                          "title": "param",
                          "name": "max",
                          "lineNumber": 242,
                          "type": {
                            "type": "UnionType",
                            "elements": [
                              {
                                "type": "NameExpression",
                                "name": "Point"
                              },
                              {
                                "type": "NameExpression",
                                "name": "number"
                              },
                              {
                                "type": "NullLiteral"
                              }
                            ]
                          }
                        }
                      ],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "clip",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "clip",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#clip"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Transform the point with a 3x3 matrix (2 dimensional transform)",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 64,
                                    "offset": 63
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 64,
                                "offset": 63
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 64,
                            "offset": 63
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "// Transform a point with a (2, 2) translation then 90º rotation\np = new Point(1, 1);\nm = new Transform().translate(2, 2).rotate(Math.PI / 2).matrix();\n// m = [0, -1, -2, 1, 0, 2, 0, 0, 1]\nq = p.transformBy(m)\n// q = Point{x: -3, y: 3}",
                          "lineNumber": 2
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 266,
                          "column": 2
                        },
                        "end": {
                          "line": 275,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 276,
                            "column": 2
                          },
                          "end": {
                            "line": 279,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "// Transform a point with a (2, 2) translation then 90º rotation\np = new Point(1, 1);\nm = new Transform().translate(2, 2).rotate(Math.PI / 2).matrix();\n// m = [0, -1, -2, 1, 0, 2, 0, 0, 1]\nq = p.transformBy(m)\n// q = Point{x: -3, y: 3}"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "matrix",
                          "lineNumber": 276,
                          "type": {
                            "type": "TypeApplication",
                            "expression": {
                              "type": "NameExpression",
                              "name": "Array"
                            },
                            "applications": [
                              {
                                "type": "NameExpression",
                                "name": "number"
                              }
                            ]
                          }
                        }
                      ],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "transformBy",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "transformBy",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#transformBy"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Rotate a point some angle around a center point",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 48,
                                    "offset": 47
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 48,
                                "offset": 47
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 48,
                            "offset": 47
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "param",
                          "description": "in radians",
                          "lineNumber": 2,
                          "type": null,
                          "name": "angle"
                        },
                        {
                          "title": "example",
                          "description": "// Rotate a point around the origin\np = new Point(1, 0);\nq = p.rotate(Math.PI)\n// q = Point{x: -1, y: 0}\n\n// Rotate a point around (1, 1)\np = new Point(2, 1);\nq = p.rotate(Math.PI, new Point(1, 1))\n// q = Point{x: 0, y: 1}",
                          "lineNumber": 3
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 287,
                          "column": 2
                        },
                        "end": {
                          "line": 300,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 301,
                            "column": 2
                          },
                          "end": {
                            "line": 312,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "// Rotate a point around the origin\np = new Point(1, 0);\nq = p.rotate(Math.PI)\n// q = Point{x: -1, y: 0}\n\n// Rotate a point around (1, 1)\np = new Point(2, 1);\nq = p.rotate(Math.PI, new Point(1, 1))\n// q = Point{x: 0, y: 1}"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "angle",
                          "lineNumber": 2,
                          "description": {
                            "type": "root",
                            "children": [
                              {
                                "type": "paragraph",
                                "children": [
                                  {
                                    "type": "text",
                                    "value": "in radians",
                                    "position": {
                                      "start": {
                                        "line": 1,
                                        "column": 1,
                                        "offset": 0
                                      },
                                      "end": {
                                        "line": 1,
                                        "column": 11,
                                        "offset": 10
                                      },
                                      "indent": []
                                    }
                                  }
                                ],
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 11,
                                    "offset": 10
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 11,
                                "offset": 10
                              }
                            }
                          },
                          "type": {
                            "type": "NameExpression",
                            "name": "number"
                          }
                        },
                        {
                          "title": "param",
                          "name": "center",
                          "lineNumber": 301,
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          },
                          "default": "new Point(0,0)"
                        }
                      ],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "rotate",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "rotate",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#rotate"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Compare two points for equality to some precision",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 50,
                                    "offset": 49
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 50,
                                "offset": 49
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 50,
                            "offset": 49
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "p = new Point(1.123, 1.123);\nq = new Point(1.124, 1.124);\np.isEqualTo(q)\n// false\n\np.isEqualTo(q, 2)\n// true",
                          "lineNumber": 2
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 316,
                          "column": 2
                        },
                        "end": {
                          "line": 326,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 327,
                            "column": 2
                          },
                          "end": {
                            "line": 339,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "p = new Point(1.123, 1.123);\nq = new Point(1.124, 1.124);\np.isEqualTo(q)\n// false\n\np.isEqualTo(q, 2)\n// true"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "p",
                          "lineNumber": 327,
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        },
                        {
                          "title": "param",
                          "name": "precision",
                          "lineNumber": 327,
                          "type": {
                            "type": "NameExpression",
                            "name": "number"
                          },
                          "default": "8"
                        }
                      ],
                      "properties": [],
                      "returns": [],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "isEqualTo",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "isEqualTo",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#isEqualTo"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Compare two points for unequality to some precision",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 52,
                                    "offset": 51
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 52,
                                "offset": 51
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          }
                        }
                      },
                      "tags": [
                        {
                          "title": "example",
                          "description": "p = new Point(1.123, 1.123);\nq = new Point(1.124, 1.124);\np.isNotEqualTo(q)\n// true\n\np.isNotEqualTo(q, 2)\n// false",
                          "lineNumber": 2
                        }
                      ],
                      "loc": {
                        "start": {
                          "line": 341,
                          "column": 2
                        },
                        "end": {
                          "line": 351,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 352,
                            "column": 2
                          },
                          "end": {
                            "line": 354,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [
                        {
                          "description": "p = new Point(1.123, 1.123);\nq = new Point(1.124, 1.124);\np.isNotEqualTo(q)\n// true\n\np.isNotEqualTo(q, 2)\n// false"
                        }
                      ],
                      "implements": [],
                      "params": [
                        {
                          "title": "param",
                          "name": "p",
                          "lineNumber": 352,
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        },
                        {
                          "title": "param",
                          "name": "precision",
                          "lineNumber": 352,
                          "type": {
                            "type": "OptionalType",
                            "expression": {
                              "type": "NameExpression",
                              "name": "number"
                            }
                          }
                        }
                      ],
                      "properties": [],
                      "returns": [],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "isNotEqualTo",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "instance",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "isNotEqualTo",
                          "kind": "function",
                          "scope": "instance"
                        }
                      ],
                      "namespace": "Point#isNotEqualTo"
                    }
                  ],
                  "events": [],
                  "static": [
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Return a point at (0, 0)",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 25,
                                    "offset": 24
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 25,
                                "offset": 24
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 25,
                            "offset": 24
                          }
                        }
                      },
                      "tags": [],
                      "loc": {
                        "start": {
                          "line": 118,
                          "column": 2
                        },
                        "end": {
                          "line": 120,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 121,
                            "column": 2
                          },
                          "end": {
                            "line": 123,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [],
                      "implements": [],
                      "params": [],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "zero",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "static",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "zero",
                          "kind": "function",
                          "scope": "static"
                        }
                      ],
                      "namespace": "Point.zero"
                    },
                    {
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Return a point at (1, 1)",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 25,
                                    "offset": 24
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 25,
                                "offset": 24
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 25,
                            "offset": 24
                          }
                        }
                      },
                      "tags": [],
                      "loc": {
                        "start": {
                          "line": 125,
                          "column": 2
                        },
                        "end": {
                          "line": 127,
                          "column": 5
                        }
                      },
                      "context": {
                        "loc": {
                          "start": {
                            "line": 128,
                            "column": 2
                          },
                          "end": {
                            "line": 130,
                            "column": 3
                          }
                        },
                        "file": "/opt/app/src/js/tools/g2.js"
                      },
                      "augments": [],
                      "examples": [],
                      "implements": [],
                      "params": [],
                      "properties": [],
                      "returns": [
                        {
                          "title": "returns",
                          "type": {
                            "type": "NameExpression",
                            "name": "Point"
                          }
                        }
                      ],
                      "sees": [],
                      "throws": [],
                      "todos": [],
                      "yields": [],
                      "name": "Unity",
                      "kind": "function",
                      "memberof": "Point",
                      "scope": "static",
                      "members": {
                        "global": [],
                        "inner": [],
                        "instance": [],
                        "events": [],
                        "static": []
                      },
                      "path": [
                        {
                          "name": "Point",
                          "kind": "class"
                        },
                        {
                          "name": "Unity",
                          "kind": "function",
                          "scope": "static"
                        }
                      ],
                      "namespace": "Point.Unity"
                    }
                  ]
                },
                "namespace": "Point"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Rect",
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 5,
                              "offset": 4
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 5,
                          "offset": 4
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 5,
                      "offset": 4
                    }
                  }
                },
                "tags": [
                  {
                    "title": "class",
                    "description": null,
                    "lineNumber": 2,
                    "name": null
                  }
                ],
                "loc": {
                  "start": {
                    "line": 67,
                    "column": 0
                  },
                  "end": {
                    "line": 70,
                    "column": 3
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 0
                    },
                    "end": {
                      "line": 99,
                      "column": 1
                    }
                  },
                  "file": "/opt/app/src/js/tools/g2.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "left",
                    "lineNumber": 3,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "left location",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 14,
                                  "offset": 13
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 14,
                              "offset": 13
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "bottom",
                    "lineNumber": 6,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "rectangle height",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 17,
                                  "offset": 16
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 17,
                              "offset": 16
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 17,
                          "offset": 16
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "width",
                    "lineNumber": 5,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "rectangle width",
                              "position": {
                                "start": {
                                  "line": 1,
                                  "column": 1,
                                  "offset": 0
                                },
                                "end": {
                                  "line": 1,
                                  "column": 16,
                                  "offset": 15
                                },
                                "indent": []
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 1,
                              "column": 1,
                              "offset": 0
                            },
                            "end": {
                              "line": 1,
                              "column": 16,
                              "offset": 15
                            },
                            "indent": []
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 16,
                          "offset": 15
                        }
                      }
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  },
                  {
                    "title": "param",
                    "name": "height",
                    "lineNumber": 87,
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "kind": "class",
                "constructorComment": {
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Constructor",
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 12,
                                "offset": 11
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 12,
                            "offset": 11
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 12,
                        "offset": 11
                      }
                    }
                  },
                  "tags": [
                    {
                      "title": "constructor",
                      "description": null,
                      "lineNumber": 2,
                      "type": null,
                      "name": null
                    },
                    {
                      "title": "param",
                      "description": "left location",
                      "lineNumber": 3,
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      },
                      "name": "left"
                    },
                    {
                      "title": "param",
                      "description": "bottom location",
                      "lineNumber": 4,
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      },
                      "name": "bottom"
                    },
                    {
                      "title": "param",
                      "description": "rectangle width",
                      "lineNumber": 5,
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      },
                      "name": "width"
                    },
                    {
                      "title": "param",
                      "description": "rectangle height",
                      "lineNumber": 6,
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      },
                      "name": "bottom"
                    }
                  ],
                  "loc": {
                    "start": {
                      "line": 79,
                      "column": 2
                    },
                    "end": {
                      "line": 86,
                      "column": 5
                    }
                  },
                  "context": {
                    "loc": {
                      "start": {
                        "line": 87,
                        "column": 2
                      },
                      "end": {
                        "line": 94,
                        "column": 3
                      }
                    },
                    "file": "/opt/app/src/js/tools/g2.js",
                    "sortKey": "!/opt/app/src/index.js:00000000!/opt/app/src/js/tools/g2.js 00000087",
                    "code": "{\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n  bottom: number;\n  right: number;\n\n  /**\n   * Constructor\n   * @constructor\n   * @param {number} left - left location\n   * @param {number} bottom - bottom location\n   * @param {number} width - rectangle width\n   * @param {number} bottom - rectangle height\n   */\n  constructor(left: number, bottom: number, width: number, height: number) {\n    this.left = left;\n    this.width = width;\n    this.height = height;\n    this.bottom = bottom;\n    this.top = bottom + height;\n    this.right = left + width;\n  }\n\n  _dup() {\n    return new Rect(this.left, this.bottom, this.width, this.height);\n  }\n}"
                  },
                  "augments": [],
                  "errors": [],
                  "examples": [],
                  "implements": [],
                  "params": [
                    {
                      "title": "param",
                      "name": "left",
                      "lineNumber": 3,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "left location",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 14,
                                    "offset": 13
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 14,
                                "offset": 13
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          }
                        }
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      }
                    },
                    {
                      "title": "param",
                      "name": "bottom",
                      "lineNumber": 4,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "bottom location",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 16,
                                    "offset": 15
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 16,
                                "offset": 15
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          }
                        }
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      }
                    },
                    {
                      "title": "param",
                      "name": "width",
                      "lineNumber": 5,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "rectangle width",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 16,
                                    "offset": 15
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 16,
                                "offset": 15
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 16,
                            "offset": 15
                          }
                        }
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      }
                    },
                    {
                      "title": "param",
                      "name": "bottom",
                      "lineNumber": 6,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "rectangle height",
                                "position": {
                                  "start": {
                                    "line": 1,
                                    "column": 1,
                                    "offset": 0
                                  },
                                  "end": {
                                    "line": 1,
                                    "column": 17,
                                    "offset": 16
                                  },
                                  "indent": []
                                }
                              }
                            ],
                            "position": {
                              "start": {
                                "line": 1,
                                "column": 1,
                                "offset": 0
                              },
                              "end": {
                                "line": 1,
                                "column": 17,
                                "offset": 16
                              },
                              "indent": []
                            }
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 17,
                            "offset": 16
                          }
                        }
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "number"
                      }
                    }
                  ],
                  "properties": [],
                  "returns": [],
                  "sees": [],
                  "throws": [],
                  "todos": [],
                  "yields": [],
                  "kind": "class"
                },
                "name": "Rect",
                "path": [
                  {
                    "name": "Rect",
                    "kind": "class"
                  }
                ],
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "namespace": "Rect"
              }
            ]
          },
          "namespace": "g2"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates an array with a range of number",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 40,
                "offset": 39
              }
            }
          },
          "tags": [
            {
              "title": "method",
              "description": null,
              "lineNumber": 2,
              "name": null
            },
            {
              "title": "memberof",
              "description": "tools",
              "lineNumber": 3
            },
            {
              "title": "param",
              "description": "Range start",
              "lineNumber": 4,
              "type": null,
              "name": "start"
            },
            {
              "title": "param",
              "description": "Range stop",
              "lineNumber": 5,
              "type": null,
              "name": "stop"
            },
            {
              "title": "param",
              "description": "Range step",
              "lineNumber": 6,
              "type": null,
              "name": "step"
            },
            {
              "title": "returns",
              "description": "Range of numbers in an array",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 283,
              "column": 0
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 292,
                "column": 0
              },
              "end": {
                "line": 298,
                "column": 1
              }
            },
            "file": "/opt/app/src/js/tools/math.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "start",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Range start",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 12,
                            "offset": 11
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 12,
                        "offset": 11
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 12,
                    "offset": 11
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "stop",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Range stop",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 11,
                    "offset": 10
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "step",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Range step",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 11,
                            "offset": 10
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 11,
                    "offset": 10
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "default": "1"
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Range of numbers in an array",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 29,
                            "offset": 28
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 29,
                    "offset": 28
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "kind": "function",
          "memberof": "tools",
          "name": "range",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "range",
              "kind": "function"
            }
          ],
          "namespace": "range"
        }
      ]
    },
    "namespace": "tools"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Tools object that is so great",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 30,
          "offset": 29
        }
      }
    },
    "tags": [
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 1,
        "type": null,
        "name": "tools"
      },
      {
        "title": "memberof",
        "description": "module:Fig",
        "lineNumber": 2
      },
      {
        "title": "property",
        "description": "Math tools",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "math"
      },
      {
        "title": "property",
        "description": "2D geometry tools",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "g2"
      },
      {
        "title": "property",
        "description": "Color tools",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "color"
      },
      {
        "title": "property",
        "description": "CSS tools",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "css"
      }
    ],
    "loc": {
      "start": {
        "line": 55,
        "column": 0
      },
      "end": {
        "line": 62,
        "column": 2
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 63,
          "column": 0
        },
        "end": {
          "line": 70,
          "column": 2
        }
      },
      "file": "/opt/app/src/index.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "math",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Math tools",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "property",
        "name": "g2",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "2D geometry tools",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 18,
                      "offset": 17
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "property",
        "name": "color",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Color tools",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "title": "property",
        "name": "css",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "CSS tools",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 10,
                      "offset": 9
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 10,
                  "offset": 9
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 10,
              "offset": 9
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "namespace",
    "name": "tools",
    "memberof": "module:Fig",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "tools",
        "kind": "namespace"
      }
    ],
    "namespace": "tools"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Rounds a number or numbers in an array",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 39,
          "offset": 38
        }
      }
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 2,
        "name": null
      },
      {
        "title": "param",
        "description": "Value or array of values to be rounded",
        "lineNumber": 3,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          ]
        },
        "name": "arrayOrValue"
      },
      {
        "title": "param",
        "description": "Number of decimal places to round to",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "name": "precision"
      },
      {
        "title": "returns",
        "description": "Rounded value or array of values",
        "lineNumber": 5,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 34,
        "column": 0
      },
      "end": {
        "line": 40,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 41,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 1
        }
      },
      "file": "/opt/app/src/js/tools/math.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "arrayOrValue",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Value or array of values to be rounded",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "precision",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Number of decimal places to round to",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "5"
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Rounded value or array of values",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 33,
                      "offset": 32
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 33,
                  "offset": 32
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 33,
              "offset": 32
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "number"
            },
            {
              "type": "TypeApplication",
              "expression": {
                "type": "NameExpression",
                "name": "Array"
              },
              "applications": [
                {
                  "type": "NameExpression",
                  "name": "number"
                }
              ]
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "kind": "function",
    "name": "round",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "round",
        "kind": "function"
      }
    ],
    "namespace": "round"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Diagram Input Options",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 22,
          "offset": 21
        }
      }
    },
    "tags": [
      {
        "title": "property",
        "description": "HTML div tag id - default: 'figureOneId'",
        "lineNumber": 2,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "htmlId"
      },
      {
        "title": "property",
        "description": "Diagram coordinate limits - default: bottom left\n corner at (-1, -1), width 1, height 1",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "Rect"
        },
        "name": "limits"
      }
    ],
    "loc": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 28,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 35,
          "column": 2
        }
      },
      "file": "/opt/app/src/js/diagram/Diagram.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "htmlId",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "HTML div tag id - default: 'figureOneId'",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 41,
                      "offset": 40
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      },
      {
        "title": "property",
        "name": "limits",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Diagram coordinate limits - default: bottom left\n corner at (-1, -1), width 1, height 1",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 39,
                      "offset": 87
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 39,
                  "offset": 87
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 39,
              "offset": 87
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Rect"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "TypeDiagramOptions",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "htmlId",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "string"
            }
          }
        },
        {
          "type": "FieldType",
          "key": "limits",
          "value": {
            "type": "OptionalType",
            "expression": {
              "type": "NameExpression",
              "name": "Rect"
            }
          }
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "TypeDiagramOptions",
        "kind": "typedef"
      }
    ],
    "namespace": "TypeDiagramOptions"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation container function",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 28,
              "offset": 27
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 28,
          "offset": 27
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "e = new Equation();\ne.addElements({\n  v: { symbol: 'vinculum' },\n});\nfrac = e.eqn.functions.frac;\neqn.addForms({\n  base: ['a', 'equals', frac(['b', 'v', 'c'])],\n});",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 2007,
        "column": 2
      },
      "end": {
        "line": 2018,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2019,
          "column": 2
        },
        "end": {
          "line": 2069,
          "column": 3
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "e = new Equation();\ne.addElements({\n  v: { symbol: 'vinculum' },\n});\nfrac = e.eqn.functions.frac;\neqn.addForms({\n  base: ['a', 'equals', frac(['b', 'v', 'c'])],\n});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "optionsOrArray",
        "lineNumber": 2020,
        "type": {
          "type": "NameExpression",
          "name": "OBJ_EqnLayout_Container"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "container",
    "kind": "function",
    "memberof": "EquationFunctions",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "container",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#container"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Equation fraction function",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 27,
          "offset": 26
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "e = new Equation();\ne.addElements({\n  v: { symbol: 'vinculum' },\n});\nfrac = e.eqn.functions.frac;\neqn.addForms({\n  base: ['a', 'equals', frac(['b', 'v', 'c'])],\n});",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 2438,
        "column": 2
      },
      "end": {
        "line": 2449,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 2450,
          "column": 2
        },
        "end": {
          "line": 2503,
          "column": 3
        }
      },
      "file": "/opt/app/src/js/diagram/DiagramElements/Equation/EquationFunctions.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "e = new Equation();\ne.addElements({\n  v: { symbol: 'vinculum' },\n});\nfrac = e.eqn.functions.frac;\neqn.addForms({\n  base: ['a', 'equals', frac(['b', 'v', 'c'])],\n});"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "optionsOrArray",
        "lineNumber": 2451,
        "type": {
          "type": "NameExpression",
          "name": "OBJ_EqnLayout_Fraction"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "name": "frac",
    "kind": "function",
    "memberof": "EquationFunctions",
    "scope": "instance",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "frac",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#frac"
  }
]